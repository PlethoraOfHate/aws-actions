{
    "a4b:AssociateDeviceWithRoom": {
        "body": "a4b:AssociateDeviceWithRoom",
        "description": "Add 'a4b:AssociateDeviceWithRoom' action",
        "prefix": "a4b:AssociateDeviceWithRoom"
    },
    "a4b:AssociateSkillGroupWithRoom": {
        "body": "a4b:AssociateSkillGroupWithRoom",
        "description": "Add 'a4b:AssociateSkillGroupWithRoom' action",
        "prefix": "a4b:AssociateSkillGroupWithRoom"
    },
    "a4b:CreateProfile": {
        "body": "a4b:CreateProfile",
        "description": "Add 'a4b:CreateProfile' action",
        "prefix": "a4b:CreateProfile"
    },
    "a4b:CreateRoom": {
        "body": "a4b:CreateRoom",
        "description": "Add 'a4b:CreateRoom' action",
        "prefix": "a4b:CreateRoom"
    },
    "a4b:CreateSkillGroup": {
        "body": "a4b:CreateSkillGroup",
        "description": "Add 'a4b:CreateSkillGroup' action",
        "prefix": "a4b:CreateSkillGroup"
    },
    "a4b:CreateUser": {
        "body": "a4b:CreateUser",
        "description": "Add 'a4b:CreateUser' action",
        "prefix": "a4b:CreateUser"
    },
    "a4b:DeleteProfile": {
        "body": "a4b:DeleteProfile",
        "description": "Add 'a4b:DeleteProfile' action",
        "prefix": "a4b:DeleteProfile"
    },
    "a4b:DeleteRoom": {
        "body": "a4b:DeleteRoom",
        "description": "Add 'a4b:DeleteRoom' action",
        "prefix": "a4b:DeleteRoom"
    },
    "a4b:DeleteRoomSkillParameter": {
        "body": "a4b:DeleteRoomSkillParameter",
        "description": "Add 'a4b:DeleteRoomSkillParameter' action",
        "prefix": "a4b:DeleteRoomSkillParameter"
    },
    "a4b:DeleteSkillGroup": {
        "body": "a4b:DeleteSkillGroup",
        "description": "Add 'a4b:DeleteSkillGroup' action",
        "prefix": "a4b:DeleteSkillGroup"
    },
    "a4b:DeleteUser": {
        "body": "a4b:DeleteUser",
        "description": "Add 'a4b:DeleteUser' action",
        "prefix": "a4b:DeleteUser"
    },
    "a4b:DisassociateDeviceFromRoom": {
        "body": "a4b:DisassociateDeviceFromRoom",
        "description": "Add 'a4b:DisassociateDeviceFromRoom' action",
        "prefix": "a4b:DisassociateDeviceFromRoom"
    },
    "a4b:DisassociateSkillGroupFromRoom": {
        "body": "a4b:DisassociateSkillGroupFromRoom",
        "description": "Add 'a4b:DisassociateSkillGroupFromRoom' action",
        "prefix": "a4b:DisassociateSkillGroupFromRoom"
    },
    "a4b:GetDevice": {
        "body": "a4b:GetDevice",
        "description": "Add 'a4b:GetDevice' action",
        "prefix": "a4b:GetDevice"
    },
    "a4b:GetProfile": {
        "body": "a4b:GetProfile",
        "description": "Add 'a4b:GetProfile' action",
        "prefix": "a4b:GetProfile"
    },
    "a4b:GetRoom": {
        "body": "a4b:GetRoom",
        "description": "Add 'a4b:GetRoom' action",
        "prefix": "a4b:GetRoom"
    },
    "a4b:GetRoomSkillParameter": {
        "body": "a4b:GetRoomSkillParameter",
        "description": "Add 'a4b:GetRoomSkillParameter' action",
        "prefix": "a4b:GetRoomSkillParameter"
    },
    "a4b:GetSkillGroup": {
        "body": "a4b:GetSkillGroup",
        "description": "Add 'a4b:GetSkillGroup' action",
        "prefix": "a4b:GetSkillGroup"
    },
    "a4b:ListSkills": {
        "body": "a4b:ListSkills",
        "description": "Add 'a4b:ListSkills' action",
        "prefix": "a4b:ListSkills"
    },
    "a4b:ListTags": {
        "body": "a4b:ListTags",
        "description": "Add 'a4b:ListTags' action",
        "prefix": "a4b:ListTags"
    },
    "a4b:PutRoomSkillParameter": {
        "body": "a4b:PutRoomSkillParameter",
        "description": "Add 'a4b:PutRoomSkillParameter' action",
        "prefix": "a4b:PutRoomSkillParameter"
    },
    "a4b:ResolveRoom": {
        "body": "a4b:ResolveRoom",
        "description": "Add 'a4b:ResolveRoom' action",
        "prefix": "a4b:ResolveRoom"
    },
    "a4b:RevokeInvitation": {
        "body": "a4b:RevokeInvitation",
        "description": "Add 'a4b:RevokeInvitation' action",
        "prefix": "a4b:RevokeInvitation"
    },
    "a4b:SearchDevices": {
        "body": "a4b:SearchDevices",
        "description": "Add 'a4b:SearchDevices' action",
        "prefix": "a4b:SearchDevices"
    },
    "a4b:SearchProfiles": {
        "body": "a4b:SearchProfiles",
        "description": "Add 'a4b:SearchProfiles' action",
        "prefix": "a4b:SearchProfiles"
    },
    "a4b:SearchRooms": {
        "body": "a4b:SearchRooms",
        "description": "Add 'a4b:SearchRooms' action",
        "prefix": "a4b:SearchRooms"
    },
    "a4b:SearchSkillGroups": {
        "body": "a4b:SearchSkillGroups",
        "description": "Add 'a4b:SearchSkillGroups' action",
        "prefix": "a4b:SearchSkillGroups"
    },
    "a4b:SearchUsers": {
        "body": "a4b:SearchUsers",
        "description": "Add 'a4b:SearchUsers' action",
        "prefix": "a4b:SearchUsers"
    },
    "a4b:SendInvitation": {
        "body": "a4b:SendInvitation",
        "description": "Add 'a4b:SendInvitation' action",
        "prefix": "a4b:SendInvitation"
    },
    "a4b:StartDeviceSync": {
        "body": "a4b:StartDeviceSync",
        "description": "Add 'a4b:StartDeviceSync' action",
        "prefix": "a4b:StartDeviceSync"
    },
    "a4b:TagResource": {
        "body": "a4b:TagResource",
        "description": "Add 'a4b:TagResource' action",
        "prefix": "a4b:TagResource"
    },
    "a4b:UntagResource": {
        "body": "a4b:UntagResource",
        "description": "Add 'a4b:UntagResource' action",
        "prefix": "a4b:UntagResource"
    },
    "a4b:UpdateDevice": {
        "body": "a4b:UpdateDevice",
        "description": "Add 'a4b:UpdateDevice' action",
        "prefix": "a4b:UpdateDevice"
    },
    "a4b:UpdateProfile": {
        "body": "a4b:UpdateProfile",
        "description": "Add 'a4b:UpdateProfile' action",
        "prefix": "a4b:UpdateProfile"
    },
    "a4b:UpdateRoom": {
        "body": "a4b:UpdateRoom",
        "description": "Add 'a4b:UpdateRoom' action",
        "prefix": "a4b:UpdateRoom"
    },
    "a4b:UpdateSkillGroup": {
        "body": "a4b:UpdateSkillGroup",
        "description": "Add 'a4b:UpdateSkillGroup' action",
        "prefix": "a4b:UpdateSkillGroup"
    },
    "acm:AddTagsToCertificate": {
        "body": "acm:AddTagsToCertificate",
        "description": "Add 'acm:AddTagsToCertificate' action",
        "prefix": "acm:AddTagsToCertificate"
    },
    "acm:DeleteCertificate": {
        "body": "acm:DeleteCertificate",
        "description": "Add 'acm:DeleteCertificate' action",
        "prefix": "acm:DeleteCertificate"
    },
    "acm:DescribeCertificate": {
        "body": "acm:DescribeCertificate",
        "description": "Add 'acm:DescribeCertificate' action",
        "prefix": "acm:DescribeCertificate"
    },
    "acm:GetCertificate": {
        "body": "acm:GetCertificate",
        "description": "Add 'acm:GetCertificate' action",
        "prefix": "acm:GetCertificate"
    },
    "acm:ImportCertificate": {
        "body": "acm:ImportCertificate",
        "description": "Add 'acm:ImportCertificate' action",
        "prefix": "acm:ImportCertificate"
    },
    "acm:ListCertificates": {
        "body": "acm:ListCertificates",
        "description": "Add 'acm:ListCertificates' action",
        "prefix": "acm:ListCertificates"
    },
    "acm:ListTagsForCertificate": {
        "body": "acm:ListTagsForCertificate",
        "description": "Add 'acm:ListTagsForCertificate' action",
        "prefix": "acm:ListTagsForCertificate"
    },
    "acm:RemoveTagsFromCertificate": {
        "body": "acm:RemoveTagsFromCertificate",
        "description": "Add 'acm:RemoveTagsFromCertificate' action",
        "prefix": "acm:RemoveTagsFromCertificate"
    },
    "acm:RequestCertificate": {
        "body": "acm:RequestCertificate",
        "description": "Add 'acm:RequestCertificate' action",
        "prefix": "acm:RequestCertificate"
    },
    "acm:ResendValidationEmail": {
        "body": "acm:ResendValidationEmail",
        "description": "Add 'acm:ResendValidationEmail' action",
        "prefix": "acm:ResendValidationEmail"
    },
    "apigateway:DELETE": {
        "body": "apigateway:DELETE",
        "description": "Add 'apigateway:DELETE' action",
        "prefix": "apigateway:DELETE"
    },
    "apigateway:GET": {
        "body": "apigateway:GET",
        "description": "Add 'apigateway:GET' action",
        "prefix": "apigateway:GET"
    },
    "apigateway:HEAD": {
        "body": "apigateway:HEAD",
        "description": "Add 'apigateway:HEAD' action",
        "prefix": "apigateway:HEAD"
    },
    "apigateway:OPTIONS": {
        "body": "apigateway:OPTIONS",
        "description": "Add 'apigateway:OPTIONS' action",
        "prefix": "apigateway:OPTIONS"
    },
    "apigateway:PATCH": {
        "body": "apigateway:PATCH",
        "description": "Add 'apigateway:PATCH' action",
        "prefix": "apigateway:PATCH"
    },
    "apigateway:POST": {
        "body": "apigateway:POST",
        "description": "Add 'apigateway:POST' action",
        "prefix": "apigateway:POST"
    },
    "apigateway:PUT": {
        "body": "apigateway:PUT",
        "description": "Add 'apigateway:PUT' action",
        "prefix": "apigateway:PUT"
    },
    "application-autoscaling:DeleteScalingPolicy": {
        "body": "application-autoscaling:DeleteScalingPolicy",
        "description": "Add 'application-autoscaling:DeleteScalingPolicy' action",
        "prefix": "application-autoscaling:DeleteScalingPolicy"
    },
    "application-autoscaling:DeleteScheduledAction": {
        "body": "application-autoscaling:DeleteScheduledAction",
        "description": "Add 'application-autoscaling:DeleteScheduledAction' action",
        "prefix": "application-autoscaling:DeleteScheduledAction"
    },
    "application-autoscaling:DeregisterScalableTarget": {
        "body": "application-autoscaling:DeregisterScalableTarget",
        "description": "Add 'application-autoscaling:DeregisterScalableTarget' action",
        "prefix": "application-autoscaling:DeregisterScalableTarget"
    },
    "application-autoscaling:DescribeScalableTargets": {
        "body": "application-autoscaling:DescribeScalableTargets",
        "description": "Add 'application-autoscaling:DescribeScalableTargets' action",
        "prefix": "application-autoscaling:DescribeScalableTargets"
    },
    "application-autoscaling:DescribeScalingActivities": {
        "body": "application-autoscaling:DescribeScalingActivities",
        "description": "Add 'application-autoscaling:DescribeScalingActivities' action",
        "prefix": "application-autoscaling:DescribeScalingActivities"
    },
    "application-autoscaling:DescribeScalingPolicies": {
        "body": "application-autoscaling:DescribeScalingPolicies",
        "description": "Add 'application-autoscaling:DescribeScalingPolicies' action",
        "prefix": "application-autoscaling:DescribeScalingPolicies"
    },
    "application-autoscaling:DescribeScheduledActions": {
        "body": "application-autoscaling:DescribeScheduledActions",
        "description": "Add 'application-autoscaling:DescribeScheduledActions' action",
        "prefix": "application-autoscaling:DescribeScheduledActions"
    },
    "application-autoscaling:PutScalingPolicy": {
        "body": "application-autoscaling:PutScalingPolicy",
        "description": "Add 'application-autoscaling:PutScalingPolicy' action",
        "prefix": "application-autoscaling:PutScalingPolicy"
    },
    "application-autoscaling:PutScheduledAction": {
        "body": "application-autoscaling:PutScheduledAction",
        "description": "Add 'application-autoscaling:PutScheduledAction' action",
        "prefix": "application-autoscaling:PutScheduledAction"
    },
    "application-autoscaling:RegisterScalableTarget": {
        "body": "application-autoscaling:RegisterScalableTarget",
        "description": "Add 'application-autoscaling:RegisterScalableTarget' action",
        "prefix": "application-autoscaling:RegisterScalableTarget"
    },
    "appstream:AssociateFleet": {
        "body": "appstream:AssociateFleet",
        "description": "Add 'appstream:AssociateFleet' action",
        "prefix": "appstream:AssociateFleet"
    },
    "appstream:CreateDirectoryConfig": {
        "body": "appstream:CreateDirectoryConfig",
        "description": "Add 'appstream:CreateDirectoryConfig' action",
        "prefix": "appstream:CreateDirectoryConfig"
    },
    "appstream:CreateFleet": {
        "body": "appstream:CreateFleet",
        "description": "Add 'appstream:CreateFleet' action",
        "prefix": "appstream:CreateFleet"
    },
    "appstream:CreateImageBuilder": {
        "body": "appstream:CreateImageBuilder",
        "description": "Add 'appstream:CreateImageBuilder' action",
        "prefix": "appstream:CreateImageBuilder"
    },
    "appstream:CreateImageBuilderStreamingURL": {
        "body": "appstream:CreateImageBuilderStreamingURL",
        "description": "Add 'appstream:CreateImageBuilderStreamingURL' action",
        "prefix": "appstream:CreateImageBuilderStreamingURL"
    },
    "appstream:CreateStack": {
        "body": "appstream:CreateStack",
        "description": "Add 'appstream:CreateStack' action",
        "prefix": "appstream:CreateStack"
    },
    "appstream:CreateStreamingURL": {
        "body": "appstream:CreateStreamingURL",
        "description": "Add 'appstream:CreateStreamingURL' action",
        "prefix": "appstream:CreateStreamingURL"
    },
    "appstream:DeleteDirectoryConfig": {
        "body": "appstream:DeleteDirectoryConfig",
        "description": "Add 'appstream:DeleteDirectoryConfig' action",
        "prefix": "appstream:DeleteDirectoryConfig"
    },
    "appstream:DeleteFleet": {
        "body": "appstream:DeleteFleet",
        "description": "Add 'appstream:DeleteFleet' action",
        "prefix": "appstream:DeleteFleet"
    },
    "appstream:DeleteImage": {
        "body": "appstream:DeleteImage",
        "description": "Add 'appstream:DeleteImage' action",
        "prefix": "appstream:DeleteImage"
    },
    "appstream:DeleteImageBuilder": {
        "body": "appstream:DeleteImageBuilder",
        "description": "Add 'appstream:DeleteImageBuilder' action",
        "prefix": "appstream:DeleteImageBuilder"
    },
    "appstream:DeleteStack": {
        "body": "appstream:DeleteStack",
        "description": "Add 'appstream:DeleteStack' action",
        "prefix": "appstream:DeleteStack"
    },
    "appstream:DescribeDirectoryConfigs": {
        "body": "appstream:DescribeDirectoryConfigs",
        "description": "Add 'appstream:DescribeDirectoryConfigs' action",
        "prefix": "appstream:DescribeDirectoryConfigs"
    },
    "appstream:DescribeFleets": {
        "body": "appstream:DescribeFleets",
        "description": "Add 'appstream:DescribeFleets' action",
        "prefix": "appstream:DescribeFleets"
    },
    "appstream:DescribeImageBuilders": {
        "body": "appstream:DescribeImageBuilders",
        "description": "Add 'appstream:DescribeImageBuilders' action",
        "prefix": "appstream:DescribeImageBuilders"
    },
    "appstream:DescribeImages": {
        "body": "appstream:DescribeImages",
        "description": "Add 'appstream:DescribeImages' action",
        "prefix": "appstream:DescribeImages"
    },
    "appstream:DescribeSessions": {
        "body": "appstream:DescribeSessions",
        "description": "Add 'appstream:DescribeSessions' action",
        "prefix": "appstream:DescribeSessions"
    },
    "appstream:DescribeStacks": {
        "body": "appstream:DescribeStacks",
        "description": "Add 'appstream:DescribeStacks' action",
        "prefix": "appstream:DescribeStacks"
    },
    "appstream:DisassociateFleet": {
        "body": "appstream:DisassociateFleet",
        "description": "Add 'appstream:DisassociateFleet' action",
        "prefix": "appstream:DisassociateFleet"
    },
    "appstream:ExpireSession": {
        "body": "appstream:ExpireSession",
        "description": "Add 'appstream:ExpireSession' action",
        "prefix": "appstream:ExpireSession"
    },
    "appstream:ListAssociatedFleets": {
        "body": "appstream:ListAssociatedFleets",
        "description": "Add 'appstream:ListAssociatedFleets' action",
        "prefix": "appstream:ListAssociatedFleets"
    },
    "appstream:ListAssociatedStacks": {
        "body": "appstream:ListAssociatedStacks",
        "description": "Add 'appstream:ListAssociatedStacks' action",
        "prefix": "appstream:ListAssociatedStacks"
    },
    "appstream:ListTagsForResource": {
        "body": "appstream:ListTagsForResource",
        "description": "Add 'appstream:ListTagsForResource' action",
        "prefix": "appstream:ListTagsForResource"
    },
    "appstream:StartFleet": {
        "body": "appstream:StartFleet",
        "description": "Add 'appstream:StartFleet' action",
        "prefix": "appstream:StartFleet"
    },
    "appstream:StartImageBuilder": {
        "body": "appstream:StartImageBuilder",
        "description": "Add 'appstream:StartImageBuilder' action",
        "prefix": "appstream:StartImageBuilder"
    },
    "appstream:StopFleet": {
        "body": "appstream:StopFleet",
        "description": "Add 'appstream:StopFleet' action",
        "prefix": "appstream:StopFleet"
    },
    "appstream:StopImageBuilder": {
        "body": "appstream:StopImageBuilder",
        "description": "Add 'appstream:StopImageBuilder' action",
        "prefix": "appstream:StopImageBuilder"
    },
    "appstream:Stream": {
        "body": "appstream:Stream",
        "description": "Add 'appstream:Stream' action",
        "prefix": "appstream:Stream"
    },
    "appstream:TagResource": {
        "body": "appstream:TagResource",
        "description": "Add 'appstream:TagResource' action",
        "prefix": "appstream:TagResource"
    },
    "appstream:UntagResource": {
        "body": "appstream:UntagResource",
        "description": "Add 'appstream:UntagResource' action",
        "prefix": "appstream:UntagResource"
    },
    "appstream:UpdateDirectoryConfig": {
        "body": "appstream:UpdateDirectoryConfig",
        "description": "Add 'appstream:UpdateDirectoryConfig' action",
        "prefix": "appstream:UpdateDirectoryConfig"
    },
    "appstream:UpdateFleet": {
        "body": "appstream:UpdateFleet",
        "description": "Add 'appstream:UpdateFleet' action",
        "prefix": "appstream:UpdateFleet"
    },
    "appstream:UpdateStack": {
        "body": "appstream:UpdateStack",
        "description": "Add 'appstream:UpdateStack' action",
        "prefix": "appstream:UpdateStack"
    },
    "appsync:CreateApiKey": {
        "body": "appsync:CreateApiKey",
        "description": "Add 'appsync:CreateApiKey' action",
        "prefix": "appsync:CreateApiKey"
    },
    "appsync:CreateDataSource": {
        "body": "appsync:CreateDataSource",
        "description": "Add 'appsync:CreateDataSource' action",
        "prefix": "appsync:CreateDataSource"
    },
    "appsync:CreateGraphqlApi": {
        "body": "appsync:CreateGraphqlApi",
        "description": "Add 'appsync:CreateGraphqlApi' action",
        "prefix": "appsync:CreateGraphqlApi"
    },
    "appsync:CreateResolver": {
        "body": "appsync:CreateResolver",
        "description": "Add 'appsync:CreateResolver' action",
        "prefix": "appsync:CreateResolver"
    },
    "appsync:CreateType": {
        "body": "appsync:CreateType",
        "description": "Add 'appsync:CreateType' action",
        "prefix": "appsync:CreateType"
    },
    "appsync:DeleteApiKey": {
        "body": "appsync:DeleteApiKey",
        "description": "Add 'appsync:DeleteApiKey' action",
        "prefix": "appsync:DeleteApiKey"
    },
    "appsync:DeleteDataSource": {
        "body": "appsync:DeleteDataSource",
        "description": "Add 'appsync:DeleteDataSource' action",
        "prefix": "appsync:DeleteDataSource"
    },
    "appsync:DeleteGraphqlApi": {
        "body": "appsync:DeleteGraphqlApi",
        "description": "Add 'appsync:DeleteGraphqlApi' action",
        "prefix": "appsync:DeleteGraphqlApi"
    },
    "appsync:DeleteResolver": {
        "body": "appsync:DeleteResolver",
        "description": "Add 'appsync:DeleteResolver' action",
        "prefix": "appsync:DeleteResolver"
    },
    "appsync:DeleteType": {
        "body": "appsync:DeleteType",
        "description": "Add 'appsync:DeleteType' action",
        "prefix": "appsync:DeleteType"
    },
    "appsync:GetDataSource": {
        "body": "appsync:GetDataSource",
        "description": "Add 'appsync:GetDataSource' action",
        "prefix": "appsync:GetDataSource"
    },
    "appsync:GetGraphqlApi": {
        "body": "appsync:GetGraphqlApi",
        "description": "Add 'appsync:GetGraphqlApi' action",
        "prefix": "appsync:GetGraphqlApi"
    },
    "appsync:GetIntrospectionSchema": {
        "body": "appsync:GetIntrospectionSchema",
        "description": "Add 'appsync:GetIntrospectionSchema' action",
        "prefix": "appsync:GetIntrospectionSchema"
    },
    "appsync:GetResolver": {
        "body": "appsync:GetResolver",
        "description": "Add 'appsync:GetResolver' action",
        "prefix": "appsync:GetResolver"
    },
    "appsync:GetSchemaCreationStatus": {
        "body": "appsync:GetSchemaCreationStatus",
        "description": "Add 'appsync:GetSchemaCreationStatus' action",
        "prefix": "appsync:GetSchemaCreationStatus"
    },
    "appsync:GetType": {
        "body": "appsync:GetType",
        "description": "Add 'appsync:GetType' action",
        "prefix": "appsync:GetType"
    },
    "appsync:GraphQL": {
        "body": "appsync:GraphQL",
        "description": "Add 'appsync:GraphQL' action",
        "prefix": "appsync:GraphQL"
    },
    "appsync:ListApiKeys": {
        "body": "appsync:ListApiKeys",
        "description": "Add 'appsync:ListApiKeys' action",
        "prefix": "appsync:ListApiKeys"
    },
    "appsync:ListDataSources": {
        "body": "appsync:ListDataSources",
        "description": "Add 'appsync:ListDataSources' action",
        "prefix": "appsync:ListDataSources"
    },
    "appsync:ListGraphqlApis": {
        "body": "appsync:ListGraphqlApis",
        "description": "Add 'appsync:ListGraphqlApis' action",
        "prefix": "appsync:ListGraphqlApis"
    },
    "appsync:ListResolvers": {
        "body": "appsync:ListResolvers",
        "description": "Add 'appsync:ListResolvers' action",
        "prefix": "appsync:ListResolvers"
    },
    "appsync:ListTypes": {
        "body": "appsync:ListTypes",
        "description": "Add 'appsync:ListTypes' action",
        "prefix": "appsync:ListTypes"
    },
    "appsync:StartSchemaCreation": {
        "body": "appsync:StartSchemaCreation",
        "description": "Add 'appsync:StartSchemaCreation' action",
        "prefix": "appsync:StartSchemaCreation"
    },
    "appsync:UpdateApiKey": {
        "body": "appsync:UpdateApiKey",
        "description": "Add 'appsync:UpdateApiKey' action",
        "prefix": "appsync:UpdateApiKey"
    },
    "appsync:UpdateDataSource": {
        "body": "appsync:UpdateDataSource",
        "description": "Add 'appsync:UpdateDataSource' action",
        "prefix": "appsync:UpdateDataSource"
    },
    "appsync:UpdateGraphqlApi": {
        "body": "appsync:UpdateGraphqlApi",
        "description": "Add 'appsync:UpdateGraphqlApi' action",
        "prefix": "appsync:UpdateGraphqlApi"
    },
    "appsync:UpdateResolver": {
        "body": "appsync:UpdateResolver",
        "description": "Add 'appsync:UpdateResolver' action",
        "prefix": "appsync:UpdateResolver"
    },
    "appsync:UpdateType": {
        "body": "appsync:UpdateType",
        "description": "Add 'appsync:UpdateType' action",
        "prefix": "appsync:UpdateType"
    },
    "artifact:AcceptAgreement": {
        "body": "artifact:AcceptAgreement",
        "description": "Add 'artifact:AcceptAgreement' action",
        "prefix": "artifact:AcceptAgreement"
    },
    "artifact:DownloadAgreement": {
        "body": "artifact:DownloadAgreement",
        "description": "Add 'artifact:DownloadAgreement' action",
        "prefix": "artifact:DownloadAgreement"
    },
    "artifact:Get": {
        "body": "artifact:Get",
        "description": "Add 'artifact:Get' action",
        "prefix": "artifact:Get"
    },
    "artifact:TerminateAgreement": {
        "body": "artifact:TerminateAgreement",
        "description": "Add 'artifact:TerminateAgreement' action",
        "prefix": "artifact:TerminateAgreement"
    },
    "athena:BatchGetNamedQuery": {
        "body": "athena:BatchGetNamedQuery",
        "description": "Add 'athena:BatchGetNamedQuery' action",
        "prefix": "athena:BatchGetNamedQuery"
    },
    "athena:BatchGetQueryExecution": {
        "body": "athena:BatchGetQueryExecution",
        "description": "Add 'athena:BatchGetQueryExecution' action",
        "prefix": "athena:BatchGetQueryExecution"
    },
    "athena:CancelQueryExecution": {
        "body": "athena:CancelQueryExecution",
        "description": "Add 'athena:CancelQueryExecution' action",
        "prefix": "athena:CancelQueryExecution"
    },
    "athena:CreateNamedQuery": {
        "body": "athena:CreateNamedQuery",
        "description": "Add 'athena:CreateNamedQuery' action",
        "prefix": "athena:CreateNamedQuery"
    },
    "athena:DeleteNamedQuery": {
        "body": "athena:DeleteNamedQuery",
        "description": "Add 'athena:DeleteNamedQuery' action",
        "prefix": "athena:DeleteNamedQuery"
    },
    "athena:GetCatalogs": {
        "body": "athena:GetCatalogs",
        "description": "Add 'athena:GetCatalogs' action",
        "prefix": "athena:GetCatalogs"
    },
    "athena:GetExecutionEngine": {
        "body": "athena:GetExecutionEngine",
        "description": "Add 'athena:GetExecutionEngine' action",
        "prefix": "athena:GetExecutionEngine"
    },
    "athena:GetExecutionEngines": {
        "body": "athena:GetExecutionEngines",
        "description": "Add 'athena:GetExecutionEngines' action",
        "prefix": "athena:GetExecutionEngines"
    },
    "athena:GetNamedQuery": {
        "body": "athena:GetNamedQuery",
        "description": "Add 'athena:GetNamedQuery' action",
        "prefix": "athena:GetNamedQuery"
    },
    "athena:GetNamespace": {
        "body": "athena:GetNamespace",
        "description": "Add 'athena:GetNamespace' action",
        "prefix": "athena:GetNamespace"
    },
    "athena:GetNamespaces": {
        "body": "athena:GetNamespaces",
        "description": "Add 'athena:GetNamespaces' action",
        "prefix": "athena:GetNamespaces"
    },
    "athena:GetQueryExecution": {
        "body": "athena:GetQueryExecution",
        "description": "Add 'athena:GetQueryExecution' action",
        "prefix": "athena:GetQueryExecution"
    },
    "athena:GetQueryExecutions": {
        "body": "athena:GetQueryExecutions",
        "description": "Add 'athena:GetQueryExecutions' action",
        "prefix": "athena:GetQueryExecutions"
    },
    "athena:GetQueryResults": {
        "body": "athena:GetQueryResults",
        "description": "Add 'athena:GetQueryResults' action",
        "prefix": "athena:GetQueryResults"
    },
    "athena:GetTable": {
        "body": "athena:GetTable",
        "description": "Add 'athena:GetTable' action",
        "prefix": "athena:GetTable"
    },
    "athena:GetTables": {
        "body": "athena:GetTables",
        "description": "Add 'athena:GetTables' action",
        "prefix": "athena:GetTables"
    },
    "athena:ListNamedQueries": {
        "body": "athena:ListNamedQueries",
        "description": "Add 'athena:ListNamedQueries' action",
        "prefix": "athena:ListNamedQueries"
    },
    "athena:ListQueryExecutions": {
        "body": "athena:ListQueryExecutions",
        "description": "Add 'athena:ListQueryExecutions' action",
        "prefix": "athena:ListQueryExecutions"
    },
    "athena:RunQuery": {
        "body": "athena:RunQuery",
        "description": "Add 'athena:RunQuery' action",
        "prefix": "athena:RunQuery"
    },
    "athena:StartQueryExecution": {
        "body": "athena:StartQueryExecution",
        "description": "Add 'athena:StartQueryExecution' action",
        "prefix": "athena:StartQueryExecution"
    },
    "athena:StopQueryExecution": {
        "body": "athena:StopQueryExecution",
        "description": "Add 'athena:StopQueryExecution' action",
        "prefix": "athena:StopQueryExecution"
    },
    "autoscaling-plans:CreateScalingPlan": {
        "body": "autoscaling-plans:CreateScalingPlan",
        "description": "Add 'autoscaling-plans:CreateScalingPlan' action",
        "prefix": "autoscaling-plans:CreateScalingPlan"
    },
    "autoscaling-plans:DeleteScalingPlan": {
        "body": "autoscaling-plans:DeleteScalingPlan",
        "description": "Add 'autoscaling-plans:DeleteScalingPlan' action",
        "prefix": "autoscaling-plans:DeleteScalingPlan"
    },
    "autoscaling-plans:DescribeScalingPlanResources": {
        "body": "autoscaling-plans:DescribeScalingPlanResources",
        "description": "Add 'autoscaling-plans:DescribeScalingPlanResources' action",
        "prefix": "autoscaling-plans:DescribeScalingPlanResources"
    },
    "autoscaling-plans:DescribeScalingPlans": {
        "body": "autoscaling-plans:DescribeScalingPlans",
        "description": "Add 'autoscaling-plans:DescribeScalingPlans' action",
        "prefix": "autoscaling-plans:DescribeScalingPlans"
    },
    "autoscaling:AttachInstances": {
        "body": "autoscaling:AttachInstances",
        "description": "Add 'autoscaling:AttachInstances' action",
        "prefix": "autoscaling:AttachInstances"
    },
    "autoscaling:AttachLoadBalancerTargetGroups": {
        "body": "autoscaling:AttachLoadBalancerTargetGroups",
        "description": "Add 'autoscaling:AttachLoadBalancerTargetGroups' action",
        "prefix": "autoscaling:AttachLoadBalancerTargetGroups"
    },
    "autoscaling:AttachLoadBalancers": {
        "body": "autoscaling:AttachLoadBalancers",
        "description": "Add 'autoscaling:AttachLoadBalancers' action",
        "prefix": "autoscaling:AttachLoadBalancers"
    },
    "autoscaling:CompleteLifecycleAction": {
        "body": "autoscaling:CompleteLifecycleAction",
        "description": "Add 'autoscaling:CompleteLifecycleAction' action",
        "prefix": "autoscaling:CompleteLifecycleAction"
    },
    "autoscaling:CreateAutoScalingGroup": {
        "body": "autoscaling:CreateAutoScalingGroup",
        "description": "Add 'autoscaling:CreateAutoScalingGroup' action",
        "prefix": "autoscaling:CreateAutoScalingGroup"
    },
    "autoscaling:CreateLaunchConfiguration": {
        "body": "autoscaling:CreateLaunchConfiguration",
        "description": "Add 'autoscaling:CreateLaunchConfiguration' action",
        "prefix": "autoscaling:CreateLaunchConfiguration"
    },
    "autoscaling:CreateOrUpdateTags": {
        "body": "autoscaling:CreateOrUpdateTags",
        "description": "Add 'autoscaling:CreateOrUpdateTags' action",
        "prefix": "autoscaling:CreateOrUpdateTags"
    },
    "autoscaling:DeleteAutoScalingGroup": {
        "body": "autoscaling:DeleteAutoScalingGroup",
        "description": "Add 'autoscaling:DeleteAutoScalingGroup' action",
        "prefix": "autoscaling:DeleteAutoScalingGroup"
    },
    "autoscaling:DeleteLaunchConfiguration": {
        "body": "autoscaling:DeleteLaunchConfiguration",
        "description": "Add 'autoscaling:DeleteLaunchConfiguration' action",
        "prefix": "autoscaling:DeleteLaunchConfiguration"
    },
    "autoscaling:DeleteLifecycleHook": {
        "body": "autoscaling:DeleteLifecycleHook",
        "description": "Add 'autoscaling:DeleteLifecycleHook' action",
        "prefix": "autoscaling:DeleteLifecycleHook"
    },
    "autoscaling:DeleteNotificationConfiguration": {
        "body": "autoscaling:DeleteNotificationConfiguration",
        "description": "Add 'autoscaling:DeleteNotificationConfiguration' action",
        "prefix": "autoscaling:DeleteNotificationConfiguration"
    },
    "autoscaling:DeletePolicy": {
        "body": "autoscaling:DeletePolicy",
        "description": "Add 'autoscaling:DeletePolicy' action",
        "prefix": "autoscaling:DeletePolicy"
    },
    "autoscaling:DeleteScheduledAction": {
        "body": "autoscaling:DeleteScheduledAction",
        "description": "Add 'autoscaling:DeleteScheduledAction' action",
        "prefix": "autoscaling:DeleteScheduledAction"
    },
    "autoscaling:DeleteTags": {
        "body": "autoscaling:DeleteTags",
        "description": "Add 'autoscaling:DeleteTags' action",
        "prefix": "autoscaling:DeleteTags"
    },
    "autoscaling:DescribeAccountLimits": {
        "body": "autoscaling:DescribeAccountLimits",
        "description": "Add 'autoscaling:DescribeAccountLimits' action",
        "prefix": "autoscaling:DescribeAccountLimits"
    },
    "autoscaling:DescribeAdjustmentTypes": {
        "body": "autoscaling:DescribeAdjustmentTypes",
        "description": "Add 'autoscaling:DescribeAdjustmentTypes' action",
        "prefix": "autoscaling:DescribeAdjustmentTypes"
    },
    "autoscaling:DescribeAutoScalingGroups": {
        "body": "autoscaling:DescribeAutoScalingGroups",
        "description": "Add 'autoscaling:DescribeAutoScalingGroups' action",
        "prefix": "autoscaling:DescribeAutoScalingGroups"
    },
    "autoscaling:DescribeAutoScalingInstances": {
        "body": "autoscaling:DescribeAutoScalingInstances",
        "description": "Add 'autoscaling:DescribeAutoScalingInstances' action",
        "prefix": "autoscaling:DescribeAutoScalingInstances"
    },
    "autoscaling:DescribeAutoScalingNotificationTypes": {
        "body": "autoscaling:DescribeAutoScalingNotificationTypes",
        "description": "Add 'autoscaling:DescribeAutoScalingNotificationTypes' action",
        "prefix": "autoscaling:DescribeAutoScalingNotificationTypes"
    },
    "autoscaling:DescribeLaunchConfigurations": {
        "body": "autoscaling:DescribeLaunchConfigurations",
        "description": "Add 'autoscaling:DescribeLaunchConfigurations' action",
        "prefix": "autoscaling:DescribeLaunchConfigurations"
    },
    "autoscaling:DescribeLifecycleHookTypes": {
        "body": "autoscaling:DescribeLifecycleHookTypes",
        "description": "Add 'autoscaling:DescribeLifecycleHookTypes' action",
        "prefix": "autoscaling:DescribeLifecycleHookTypes"
    },
    "autoscaling:DescribeLifecycleHooks": {
        "body": "autoscaling:DescribeLifecycleHooks",
        "description": "Add 'autoscaling:DescribeLifecycleHooks' action",
        "prefix": "autoscaling:DescribeLifecycleHooks"
    },
    "autoscaling:DescribeLoadBalancerTargetGroups": {
        "body": "autoscaling:DescribeLoadBalancerTargetGroups",
        "description": "Add 'autoscaling:DescribeLoadBalancerTargetGroups' action",
        "prefix": "autoscaling:DescribeLoadBalancerTargetGroups"
    },
    "autoscaling:DescribeLoadBalancers": {
        "body": "autoscaling:DescribeLoadBalancers",
        "description": "Add 'autoscaling:DescribeLoadBalancers' action",
        "prefix": "autoscaling:DescribeLoadBalancers"
    },
    "autoscaling:DescribeMetricCollectionTypes": {
        "body": "autoscaling:DescribeMetricCollectionTypes",
        "description": "Add 'autoscaling:DescribeMetricCollectionTypes' action",
        "prefix": "autoscaling:DescribeMetricCollectionTypes"
    },
    "autoscaling:DescribeNotificationConfigurations": {
        "body": "autoscaling:DescribeNotificationConfigurations",
        "description": "Add 'autoscaling:DescribeNotificationConfigurations' action",
        "prefix": "autoscaling:DescribeNotificationConfigurations"
    },
    "autoscaling:DescribePolicies": {
        "body": "autoscaling:DescribePolicies",
        "description": "Add 'autoscaling:DescribePolicies' action",
        "prefix": "autoscaling:DescribePolicies"
    },
    "autoscaling:DescribeScalingActivities": {
        "body": "autoscaling:DescribeScalingActivities",
        "description": "Add 'autoscaling:DescribeScalingActivities' action",
        "prefix": "autoscaling:DescribeScalingActivities"
    },
    "autoscaling:DescribeScalingProcessTypes": {
        "body": "autoscaling:DescribeScalingProcessTypes",
        "description": "Add 'autoscaling:DescribeScalingProcessTypes' action",
        "prefix": "autoscaling:DescribeScalingProcessTypes"
    },
    "autoscaling:DescribeScheduledActions": {
        "body": "autoscaling:DescribeScheduledActions",
        "description": "Add 'autoscaling:DescribeScheduledActions' action",
        "prefix": "autoscaling:DescribeScheduledActions"
    },
    "autoscaling:DescribeTags": {
        "body": "autoscaling:DescribeTags",
        "description": "Add 'autoscaling:DescribeTags' action",
        "prefix": "autoscaling:DescribeTags"
    },
    "autoscaling:DescribeTerminationPolicyTypes": {
        "body": "autoscaling:DescribeTerminationPolicyTypes",
        "description": "Add 'autoscaling:DescribeTerminationPolicyTypes' action",
        "prefix": "autoscaling:DescribeTerminationPolicyTypes"
    },
    "autoscaling:DetachInstances": {
        "body": "autoscaling:DetachInstances",
        "description": "Add 'autoscaling:DetachInstances' action",
        "prefix": "autoscaling:DetachInstances"
    },
    "autoscaling:DetachLoadBalancerTargetGroups": {
        "body": "autoscaling:DetachLoadBalancerTargetGroups",
        "description": "Add 'autoscaling:DetachLoadBalancerTargetGroups' action",
        "prefix": "autoscaling:DetachLoadBalancerTargetGroups"
    },
    "autoscaling:DetachLoadBalancers": {
        "body": "autoscaling:DetachLoadBalancers",
        "description": "Add 'autoscaling:DetachLoadBalancers' action",
        "prefix": "autoscaling:DetachLoadBalancers"
    },
    "autoscaling:DisableMetricsCollection": {
        "body": "autoscaling:DisableMetricsCollection",
        "description": "Add 'autoscaling:DisableMetricsCollection' action",
        "prefix": "autoscaling:DisableMetricsCollection"
    },
    "autoscaling:EnableMetricsCollection": {
        "body": "autoscaling:EnableMetricsCollection",
        "description": "Add 'autoscaling:EnableMetricsCollection' action",
        "prefix": "autoscaling:EnableMetricsCollection"
    },
    "autoscaling:EnterStandby": {
        "body": "autoscaling:EnterStandby",
        "description": "Add 'autoscaling:EnterStandby' action",
        "prefix": "autoscaling:EnterStandby"
    },
    "autoscaling:ExecutePolicy": {
        "body": "autoscaling:ExecutePolicy",
        "description": "Add 'autoscaling:ExecutePolicy' action",
        "prefix": "autoscaling:ExecutePolicy"
    },
    "autoscaling:ExitStandby": {
        "body": "autoscaling:ExitStandby",
        "description": "Add 'autoscaling:ExitStandby' action",
        "prefix": "autoscaling:ExitStandby"
    },
    "autoscaling:PutLifecycleHook": {
        "body": "autoscaling:PutLifecycleHook",
        "description": "Add 'autoscaling:PutLifecycleHook' action",
        "prefix": "autoscaling:PutLifecycleHook"
    },
    "autoscaling:PutNotificationConfiguration": {
        "body": "autoscaling:PutNotificationConfiguration",
        "description": "Add 'autoscaling:PutNotificationConfiguration' action",
        "prefix": "autoscaling:PutNotificationConfiguration"
    },
    "autoscaling:PutScalingPolicy": {
        "body": "autoscaling:PutScalingPolicy",
        "description": "Add 'autoscaling:PutScalingPolicy' action",
        "prefix": "autoscaling:PutScalingPolicy"
    },
    "autoscaling:PutScheduledUpdateGroupAction": {
        "body": "autoscaling:PutScheduledUpdateGroupAction",
        "description": "Add 'autoscaling:PutScheduledUpdateGroupAction' action",
        "prefix": "autoscaling:PutScheduledUpdateGroupAction"
    },
    "autoscaling:RecordLifecycleActionHeartbeat": {
        "body": "autoscaling:RecordLifecycleActionHeartbeat",
        "description": "Add 'autoscaling:RecordLifecycleActionHeartbeat' action",
        "prefix": "autoscaling:RecordLifecycleActionHeartbeat"
    },
    "autoscaling:ResumeProcesses": {
        "body": "autoscaling:ResumeProcesses",
        "description": "Add 'autoscaling:ResumeProcesses' action",
        "prefix": "autoscaling:ResumeProcesses"
    },
    "autoscaling:SetDesiredCapacity": {
        "body": "autoscaling:SetDesiredCapacity",
        "description": "Add 'autoscaling:SetDesiredCapacity' action",
        "prefix": "autoscaling:SetDesiredCapacity"
    },
    "autoscaling:SetInstanceHealth": {
        "body": "autoscaling:SetInstanceHealth",
        "description": "Add 'autoscaling:SetInstanceHealth' action",
        "prefix": "autoscaling:SetInstanceHealth"
    },
    "autoscaling:SetInstanceProtection": {
        "body": "autoscaling:SetInstanceProtection",
        "description": "Add 'autoscaling:SetInstanceProtection' action",
        "prefix": "autoscaling:SetInstanceProtection"
    },
    "autoscaling:SuspendProcesses": {
        "body": "autoscaling:SuspendProcesses",
        "description": "Add 'autoscaling:SuspendProcesses' action",
        "prefix": "autoscaling:SuspendProcesses"
    },
    "autoscaling:TerminateInstanceInAutoScalingGroup": {
        "body": "autoscaling:TerminateInstanceInAutoScalingGroup",
        "description": "Add 'autoscaling:TerminateInstanceInAutoScalingGroup' action",
        "prefix": "autoscaling:TerminateInstanceInAutoScalingGroup"
    },
    "autoscaling:UpdateAutoScalingGroup": {
        "body": "autoscaling:UpdateAutoScalingGroup",
        "description": "Add 'autoscaling:UpdateAutoScalingGroup' action",
        "prefix": "autoscaling:UpdateAutoScalingGroup"
    },
    "aws-marketplace-management:uploadFiles": {
        "body": "aws-marketplace-management:uploadFiles",
        "description": "Add 'aws-marketplace-management:uploadFiles' action",
        "prefix": "aws-marketplace-management:uploadFiles"
    },
    "aws-marketplace-management:viewMarketing": {
        "body": "aws-marketplace-management:viewMarketing",
        "description": "Add 'aws-marketplace-management:viewMarketing' action",
        "prefix": "aws-marketplace-management:viewMarketing"
    },
    "aws-marketplace-management:viewReports": {
        "body": "aws-marketplace-management:viewReports",
        "description": "Add 'aws-marketplace-management:viewReports' action",
        "prefix": "aws-marketplace-management:viewReports"
    },
    "aws-marketplace-management:viewSupport": {
        "body": "aws-marketplace-management:viewSupport",
        "description": "Add 'aws-marketplace-management:viewSupport' action",
        "prefix": "aws-marketplace-management:viewSupport"
    },
    "aws-marketplace:BatchMeterUsage": {
        "body": "aws-marketplace:BatchMeterUsage",
        "description": "Add 'aws-marketplace:BatchMeterUsage' action",
        "prefix": "aws-marketplace:BatchMeterUsage"
    },
    "aws-marketplace:MeterUsage": {
        "body": "aws-marketplace:MeterUsage",
        "description": "Add 'aws-marketplace:MeterUsage' action",
        "prefix": "aws-marketplace:MeterUsage"
    },
    "aws-marketplace:ResolveCustomer": {
        "body": "aws-marketplace:ResolveCustomer",
        "description": "Add 'aws-marketplace:ResolveCustomer' action",
        "prefix": "aws-marketplace:ResolveCustomer"
    },
    "aws-marketplace:Subscribe": {
        "body": "aws-marketplace:Subscribe",
        "description": "Add 'aws-marketplace:Subscribe' action",
        "prefix": "aws-marketplace:Subscribe"
    },
    "aws-marketplace:Unsubscribe": {
        "body": "aws-marketplace:Unsubscribe",
        "description": "Add 'aws-marketplace:Unsubscribe' action",
        "prefix": "aws-marketplace:Unsubscribe"
    },
    "aws-marketplace:ViewSubscriptions": {
        "body": "aws-marketplace:ViewSubscriptions",
        "description": "Add 'aws-marketplace:ViewSubscriptions' action",
        "prefix": "aws-marketplace:ViewSubscriptions"
    },
    "aws-portal:ModifyAccount": {
        "body": "aws-portal:ModifyAccount",
        "description": "Add 'aws-portal:ModifyAccount' action",
        "prefix": "aws-portal:ModifyAccount"
    },
    "aws-portal:ModifyBilling": {
        "body": "aws-portal:ModifyBilling",
        "description": "Add 'aws-portal:ModifyBilling' action",
        "prefix": "aws-portal:ModifyBilling"
    },
    "aws-portal:ModifyPaymentMethods": {
        "body": "aws-portal:ModifyPaymentMethods",
        "description": "Add 'aws-portal:ModifyPaymentMethods' action",
        "prefix": "aws-portal:ModifyPaymentMethods"
    },
    "aws-portal:ViewAccount": {
        "body": "aws-portal:ViewAccount",
        "description": "Add 'aws-portal:ViewAccount' action",
        "prefix": "aws-portal:ViewAccount"
    },
    "aws-portal:ViewBilling": {
        "body": "aws-portal:ViewBilling",
        "description": "Add 'aws-portal:ViewBilling' action",
        "prefix": "aws-portal:ViewBilling"
    },
    "aws-portal:ViewPaymentMethods": {
        "body": "aws-portal:ViewPaymentMethods",
        "description": "Add 'aws-portal:ViewPaymentMethods' action",
        "prefix": "aws-portal:ViewPaymentMethods"
    },
    "aws-portal:ViewUsage": {
        "body": "aws-portal:ViewUsage",
        "description": "Add 'aws-portal:ViewUsage' action",
        "prefix": "aws-portal:ViewUsage"
    },
    "batch:CancelJob": {
        "body": "batch:CancelJob",
        "description": "Add 'batch:CancelJob' action",
        "prefix": "batch:CancelJob"
    },
    "batch:CreateComputeEnvironment": {
        "body": "batch:CreateComputeEnvironment",
        "description": "Add 'batch:CreateComputeEnvironment' action",
        "prefix": "batch:CreateComputeEnvironment"
    },
    "batch:CreateJobQueue": {
        "body": "batch:CreateJobQueue",
        "description": "Add 'batch:CreateJobQueue' action",
        "prefix": "batch:CreateJobQueue"
    },
    "batch:DeleteComputeEnvironment": {
        "body": "batch:DeleteComputeEnvironment",
        "description": "Add 'batch:DeleteComputeEnvironment' action",
        "prefix": "batch:DeleteComputeEnvironment"
    },
    "batch:DeleteJobQueue": {
        "body": "batch:DeleteJobQueue",
        "description": "Add 'batch:DeleteJobQueue' action",
        "prefix": "batch:DeleteJobQueue"
    },
    "batch:DeregisterJobDefinition": {
        "body": "batch:DeregisterJobDefinition",
        "description": "Add 'batch:DeregisterJobDefinition' action",
        "prefix": "batch:DeregisterJobDefinition"
    },
    "batch:DescribeComputeEnvironments": {
        "body": "batch:DescribeComputeEnvironments",
        "description": "Add 'batch:DescribeComputeEnvironments' action",
        "prefix": "batch:DescribeComputeEnvironments"
    },
    "batch:DescribeJobDefinitions": {
        "body": "batch:DescribeJobDefinitions",
        "description": "Add 'batch:DescribeJobDefinitions' action",
        "prefix": "batch:DescribeJobDefinitions"
    },
    "batch:DescribeJobQueues": {
        "body": "batch:DescribeJobQueues",
        "description": "Add 'batch:DescribeJobQueues' action",
        "prefix": "batch:DescribeJobQueues"
    },
    "batch:DescribeJobs": {
        "body": "batch:DescribeJobs",
        "description": "Add 'batch:DescribeJobs' action",
        "prefix": "batch:DescribeJobs"
    },
    "batch:ListJobs": {
        "body": "batch:ListJobs",
        "description": "Add 'batch:ListJobs' action",
        "prefix": "batch:ListJobs"
    },
    "batch:RegisterJobDefinition": {
        "body": "batch:RegisterJobDefinition",
        "description": "Add 'batch:RegisterJobDefinition' action",
        "prefix": "batch:RegisterJobDefinition"
    },
    "batch:SubmitJob": {
        "body": "batch:SubmitJob",
        "description": "Add 'batch:SubmitJob' action",
        "prefix": "batch:SubmitJob"
    },
    "batch:TerminateJob": {
        "body": "batch:TerminateJob",
        "description": "Add 'batch:TerminateJob' action",
        "prefix": "batch:TerminateJob"
    },
    "batch:UpdateComputeEnvironment": {
        "body": "batch:UpdateComputeEnvironment",
        "description": "Add 'batch:UpdateComputeEnvironment' action",
        "prefix": "batch:UpdateComputeEnvironment"
    },
    "batch:UpdateJobQueue": {
        "body": "batch:UpdateJobQueue",
        "description": "Add 'batch:UpdateJobQueue' action",
        "prefix": "batch:UpdateJobQueue"
    },
    "budgets:ModifyBudget": {
        "body": "budgets:ModifyBudget",
        "description": "Add 'budgets:ModifyBudget' action",
        "prefix": "budgets:ModifyBudget"
    },
    "budgets:ViewBudget": {
        "body": "budgets:ViewBudget",
        "description": "Add 'budgets:ViewBudget' action",
        "prefix": "budgets:ViewBudget"
    },
    "ce:GetCostAndUsage": {
        "body": "ce:GetCostAndUsage",
        "description": "Add 'ce:GetCostAndUsage' action",
        "prefix": "ce:GetCostAndUsage"
    },
    "ce:GetDimensionValues": {
        "body": "ce:GetDimensionValues",
        "description": "Add 'ce:GetDimensionValues' action",
        "prefix": "ce:GetDimensionValues"
    },
    "ce:GetReservationUtilization": {
        "body": "ce:GetReservationUtilization",
        "description": "Add 'ce:GetReservationUtilization' action",
        "prefix": "ce:GetReservationUtilization"
    },
    "ce:GetTags": {
        "body": "ce:GetTags",
        "description": "Add 'ce:GetTags' action",
        "prefix": "ce:GetTags"
    },
    "chime:AcceptDelegate": {
        "body": "chime:AcceptDelegate",
        "description": "Add 'chime:AcceptDelegate' action",
        "prefix": "chime:AcceptDelegate"
    },
    "chime:ActivateUsers": {
        "body": "chime:ActivateUsers",
        "description": "Add 'chime:ActivateUsers' action",
        "prefix": "chime:ActivateUsers"
    },
    "chime:AddDomain": {
        "body": "chime:AddDomain",
        "description": "Add 'chime:AddDomain' action",
        "prefix": "chime:AddDomain"
    },
    "chime:AddOrUpdateGroups": {
        "body": "chime:AddOrUpdateGroups",
        "description": "Add 'chime:AddOrUpdateGroups' action",
        "prefix": "chime:AddOrUpdateGroups"
    },
    "chime:AuthorizeDirectory": {
        "body": "chime:AuthorizeDirectory",
        "description": "Add 'chime:AuthorizeDirectory' action",
        "prefix": "chime:AuthorizeDirectory"
    },
    "chime:ConnectDirectory": {
        "body": "chime:ConnectDirectory",
        "description": "Add 'chime:ConnectDirectory' action",
        "prefix": "chime:ConnectDirectory"
    },
    "chime:CreateAccount": {
        "body": "chime:CreateAccount",
        "description": "Add 'chime:CreateAccount' action",
        "prefix": "chime:CreateAccount"
    },
    "chime:CreateCDRBucket": {
        "body": "chime:CreateCDRBucket",
        "description": "Add 'chime:CreateCDRBucket' action",
        "prefix": "chime:CreateCDRBucket"
    },
    "chime:DeleteAccount": {
        "body": "chime:DeleteAccount",
        "description": "Add 'chime:DeleteAccount' action",
        "prefix": "chime:DeleteAccount"
    },
    "chime:DeleteCDRBucket": {
        "body": "chime:DeleteCDRBucket",
        "description": "Add 'chime:DeleteCDRBucket' action",
        "prefix": "chime:DeleteCDRBucket"
    },
    "chime:DeleteDelegate": {
        "body": "chime:DeleteDelegate",
        "description": "Add 'chime:DeleteDelegate' action",
        "prefix": "chime:DeleteDelegate"
    },
    "chime:DeleteDomain": {
        "body": "chime:DeleteDomain",
        "description": "Add 'chime:DeleteDomain' action",
        "prefix": "chime:DeleteDomain"
    },
    "chime:DeleteGroups": {
        "body": "chime:DeleteGroups",
        "description": "Add 'chime:DeleteGroups' action",
        "prefix": "chime:DeleteGroups"
    },
    "chime:DisconnectDirectory": {
        "body": "chime:DisconnectDirectory",
        "description": "Add 'chime:DisconnectDirectory' action",
        "prefix": "chime:DisconnectDirectory"
    },
    "chime:GetAccount": {
        "body": "chime:GetAccount",
        "description": "Add 'chime:GetAccount' action",
        "prefix": "chime:GetAccount"
    },
    "chime:GetAccountResource": {
        "body": "chime:GetAccountResource",
        "description": "Add 'chime:GetAccountResource' action",
        "prefix": "chime:GetAccountResource"
    },
    "chime:GetAccountSettings": {
        "body": "chime:GetAccountSettings",
        "description": "Add 'chime:GetAccountSettings' action",
        "prefix": "chime:GetAccountSettings"
    },
    "chime:GetCDRBucket": {
        "body": "chime:GetCDRBucket",
        "description": "Add 'chime:GetCDRBucket' action",
        "prefix": "chime:GetCDRBucket"
    },
    "chime:GetDomain": {
        "body": "chime:GetDomain",
        "description": "Add 'chime:GetDomain' action",
        "prefix": "chime:GetDomain"
    },
    "chime:GetUser": {
        "body": "chime:GetUser",
        "description": "Add 'chime:GetUser' action",
        "prefix": "chime:GetUser"
    },
    "chime:GetUserByEmail": {
        "body": "chime:GetUserByEmail",
        "description": "Add 'chime:GetUserByEmail' action",
        "prefix": "chime:GetUserByEmail"
    },
    "chime:InviteDelegate": {
        "body": "chime:InviteDelegate",
        "description": "Add 'chime:InviteDelegate' action",
        "prefix": "chime:InviteDelegate"
    },
    "chime:InviteUsers": {
        "body": "chime:InviteUsers",
        "description": "Add 'chime:InviteUsers' action",
        "prefix": "chime:InviteUsers"
    },
    "chime:ListAccounts": {
        "body": "chime:ListAccounts",
        "description": "Add 'chime:ListAccounts' action",
        "prefix": "chime:ListAccounts"
    },
    "chime:ListCDRBucket": {
        "body": "chime:ListCDRBucket",
        "description": "Add 'chime:ListCDRBucket' action",
        "prefix": "chime:ListCDRBucket"
    },
    "chime:ListDelegates": {
        "body": "chime:ListDelegates",
        "description": "Add 'chime:ListDelegates' action",
        "prefix": "chime:ListDelegates"
    },
    "chime:ListDirectories": {
        "body": "chime:ListDirectories",
        "description": "Add 'chime:ListDirectories' action",
        "prefix": "chime:ListDirectories"
    },
    "chime:ListDomains": {
        "body": "chime:ListDomains",
        "description": "Add 'chime:ListDomains' action",
        "prefix": "chime:ListDomains"
    },
    "chime:ListGroups": {
        "body": "chime:ListGroups",
        "description": "Add 'chime:ListGroups' action",
        "prefix": "chime:ListGroups"
    },
    "chime:ListUsers": {
        "body": "chime:ListUsers",
        "description": "Add 'chime:ListUsers' action",
        "prefix": "chime:ListUsers"
    },
    "chime:LogoutUser": {
        "body": "chime:LogoutUser",
        "description": "Add 'chime:LogoutUser' action",
        "prefix": "chime:LogoutUser"
    },
    "chime:RenameAccount": {
        "body": "chime:RenameAccount",
        "description": "Add 'chime:RenameAccount' action",
        "prefix": "chime:RenameAccount"
    },
    "chime:RenewDelegate": {
        "body": "chime:RenewDelegate",
        "description": "Add 'chime:RenewDelegate' action",
        "prefix": "chime:RenewDelegate"
    },
    "chime:ResetAccountResource": {
        "body": "chime:ResetAccountResource",
        "description": "Add 'chime:ResetAccountResource' action",
        "prefix": "chime:ResetAccountResource"
    },
    "chime:ResetPersonalPin": {
        "body": "chime:ResetPersonalPin",
        "description": "Add 'chime:ResetPersonalPin' action",
        "prefix": "chime:ResetPersonalPin"
    },
    "chime:SubmitSupportRequest": {
        "body": "chime:SubmitSupportRequest",
        "description": "Add 'chime:SubmitSupportRequest' action",
        "prefix": "chime:SubmitSupportRequest"
    },
    "chime:SuspendUsers": {
        "body": "chime:SuspendUsers",
        "description": "Add 'chime:SuspendUsers' action",
        "prefix": "chime:SuspendUsers"
    },
    "chime:UnauthorizeDirectory": {
        "body": "chime:UnauthorizeDirectory",
        "description": "Add 'chime:UnauthorizeDirectory' action",
        "prefix": "chime:UnauthorizeDirectory"
    },
    "chime:UpdateAccountResource": {
        "body": "chime:UpdateAccountResource",
        "description": "Add 'chime:UpdateAccountResource' action",
        "prefix": "chime:UpdateAccountResource"
    },
    "chime:UpdateAccountSettings": {
        "body": "chime:UpdateAccountSettings",
        "description": "Add 'chime:UpdateAccountSettings' action",
        "prefix": "chime:UpdateAccountSettings"
    },
    "chime:UpdateCDRBucket": {
        "body": "chime:UpdateCDRBucket",
        "description": "Add 'chime:UpdateCDRBucket' action",
        "prefix": "chime:UpdateCDRBucket"
    },
    "chime:UpdateSupportedLicenses": {
        "body": "chime:UpdateSupportedLicenses",
        "description": "Add 'chime:UpdateSupportedLicenses' action",
        "prefix": "chime:UpdateSupportedLicenses"
    },
    "chime:UpdateUserLicenses": {
        "body": "chime:UpdateUserLicenses",
        "description": "Add 'chime:UpdateUserLicenses' action",
        "prefix": "chime:UpdateUserLicenses"
    },
    "chime:ValidateAccountResource": {
        "body": "chime:ValidateAccountResource",
        "description": "Add 'chime:ValidateAccountResource' action",
        "prefix": "chime:ValidateAccountResource"
    },
    "chime:ValidateDelegate": {
        "body": "chime:ValidateDelegate",
        "description": "Add 'chime:ValidateDelegate' action",
        "prefix": "chime:ValidateDelegate"
    },
    "cloud9:CreateEnvironmentEC2": {
        "body": "cloud9:CreateEnvironmentEC2",
        "description": "Add 'cloud9:CreateEnvironmentEC2' action",
        "prefix": "cloud9:CreateEnvironmentEC2"
    },
    "cloud9:CreateEnvironmentMembership": {
        "body": "cloud9:CreateEnvironmentMembership",
        "description": "Add 'cloud9:CreateEnvironmentMembership' action",
        "prefix": "cloud9:CreateEnvironmentMembership"
    },
    "cloud9:CreateEnvironmentSSH": {
        "body": "cloud9:CreateEnvironmentSSH",
        "description": "Add 'cloud9:CreateEnvironmentSSH' action",
        "prefix": "cloud9:CreateEnvironmentSSH"
    },
    "cloud9:DeleteEnvironment": {
        "body": "cloud9:DeleteEnvironment",
        "description": "Add 'cloud9:DeleteEnvironment' action",
        "prefix": "cloud9:DeleteEnvironment"
    },
    "cloud9:DeleteEnvironmentMembership": {
        "body": "cloud9:DeleteEnvironmentMembership",
        "description": "Add 'cloud9:DeleteEnvironmentMembership' action",
        "prefix": "cloud9:DeleteEnvironmentMembership"
    },
    "cloud9:DescribeEnvironmentMemberships": {
        "body": "cloud9:DescribeEnvironmentMemberships",
        "description": "Add 'cloud9:DescribeEnvironmentMemberships' action",
        "prefix": "cloud9:DescribeEnvironmentMemberships"
    },
    "cloud9:DescribeEnvironmentStatus": {
        "body": "cloud9:DescribeEnvironmentStatus",
        "description": "Add 'cloud9:DescribeEnvironmentStatus' action",
        "prefix": "cloud9:DescribeEnvironmentStatus"
    },
    "cloud9:DescribeEnvironments": {
        "body": "cloud9:DescribeEnvironments",
        "description": "Add 'cloud9:DescribeEnvironments' action",
        "prefix": "cloud9:DescribeEnvironments"
    },
    "cloud9:GetUserPublicKey": {
        "body": "cloud9:GetUserPublicKey",
        "description": "Add 'cloud9:GetUserPublicKey' action",
        "prefix": "cloud9:GetUserPublicKey"
    },
    "cloud9:ListEnvironments": {
        "body": "cloud9:ListEnvironments",
        "description": "Add 'cloud9:ListEnvironments' action",
        "prefix": "cloud9:ListEnvironments"
    },
    "cloud9:UpdateEnvironment": {
        "body": "cloud9:UpdateEnvironment",
        "description": "Add 'cloud9:UpdateEnvironment' action",
        "prefix": "cloud9:UpdateEnvironment"
    },
    "cloud9:UpdateEnvironmentMembership": {
        "body": "cloud9:UpdateEnvironmentMembership",
        "description": "Add 'cloud9:UpdateEnvironmentMembership' action",
        "prefix": "cloud9:UpdateEnvironmentMembership"
    },
    "cloud9:ValidateEnvironmentName": {
        "body": "cloud9:ValidateEnvironmentName",
        "description": "Add 'cloud9:ValidateEnvironmentName' action",
        "prefix": "cloud9:ValidateEnvironmentName"
    },
    "clouddirectory:AddFacetToObject": {
        "body": "clouddirectory:AddFacetToObject",
        "description": "Add 'clouddirectory:AddFacetToObject' action",
        "prefix": "clouddirectory:AddFacetToObject"
    },
    "clouddirectory:ApplySchema": {
        "body": "clouddirectory:ApplySchema",
        "description": "Add 'clouddirectory:ApplySchema' action",
        "prefix": "clouddirectory:ApplySchema"
    },
    "clouddirectory:AttachObject": {
        "body": "clouddirectory:AttachObject",
        "description": "Add 'clouddirectory:AttachObject' action",
        "prefix": "clouddirectory:AttachObject"
    },
    "clouddirectory:AttachPolicy": {
        "body": "clouddirectory:AttachPolicy",
        "description": "Add 'clouddirectory:AttachPolicy' action",
        "prefix": "clouddirectory:AttachPolicy"
    },
    "clouddirectory:AttachToIndex": {
        "body": "clouddirectory:AttachToIndex",
        "description": "Add 'clouddirectory:AttachToIndex' action",
        "prefix": "clouddirectory:AttachToIndex"
    },
    "clouddirectory:AttachTypedLink": {
        "body": "clouddirectory:AttachTypedLink",
        "description": "Add 'clouddirectory:AttachTypedLink' action",
        "prefix": "clouddirectory:AttachTypedLink"
    },
    "clouddirectory:BatchRead": {
        "body": "clouddirectory:BatchRead",
        "description": "Add 'clouddirectory:BatchRead' action",
        "prefix": "clouddirectory:BatchRead"
    },
    "clouddirectory:BatchWrite": {
        "body": "clouddirectory:BatchWrite",
        "description": "Add 'clouddirectory:BatchWrite' action",
        "prefix": "clouddirectory:BatchWrite"
    },
    "clouddirectory:CreateDirectory": {
        "body": "clouddirectory:CreateDirectory",
        "description": "Add 'clouddirectory:CreateDirectory' action",
        "prefix": "clouddirectory:CreateDirectory"
    },
    "clouddirectory:CreateFacet": {
        "body": "clouddirectory:CreateFacet",
        "description": "Add 'clouddirectory:CreateFacet' action",
        "prefix": "clouddirectory:CreateFacet"
    },
    "clouddirectory:CreateIndex": {
        "body": "clouddirectory:CreateIndex",
        "description": "Add 'clouddirectory:CreateIndex' action",
        "prefix": "clouddirectory:CreateIndex"
    },
    "clouddirectory:CreateObject": {
        "body": "clouddirectory:CreateObject",
        "description": "Add 'clouddirectory:CreateObject' action",
        "prefix": "clouddirectory:CreateObject"
    },
    "clouddirectory:CreateSchema": {
        "body": "clouddirectory:CreateSchema",
        "description": "Add 'clouddirectory:CreateSchema' action",
        "prefix": "clouddirectory:CreateSchema"
    },
    "clouddirectory:CreateTypedLinkFacet": {
        "body": "clouddirectory:CreateTypedLinkFacet",
        "description": "Add 'clouddirectory:CreateTypedLinkFacet' action",
        "prefix": "clouddirectory:CreateTypedLinkFacet"
    },
    "clouddirectory:DeleteDirectory": {
        "body": "clouddirectory:DeleteDirectory",
        "description": "Add 'clouddirectory:DeleteDirectory' action",
        "prefix": "clouddirectory:DeleteDirectory"
    },
    "clouddirectory:DeleteFacet": {
        "body": "clouddirectory:DeleteFacet",
        "description": "Add 'clouddirectory:DeleteFacet' action",
        "prefix": "clouddirectory:DeleteFacet"
    },
    "clouddirectory:DeleteObject": {
        "body": "clouddirectory:DeleteObject",
        "description": "Add 'clouddirectory:DeleteObject' action",
        "prefix": "clouddirectory:DeleteObject"
    },
    "clouddirectory:DeleteSchema": {
        "body": "clouddirectory:DeleteSchema",
        "description": "Add 'clouddirectory:DeleteSchema' action",
        "prefix": "clouddirectory:DeleteSchema"
    },
    "clouddirectory:DeleteTypedLinkFacet": {
        "body": "clouddirectory:DeleteTypedLinkFacet",
        "description": "Add 'clouddirectory:DeleteTypedLinkFacet' action",
        "prefix": "clouddirectory:DeleteTypedLinkFacet"
    },
    "clouddirectory:DetachFromIndex": {
        "body": "clouddirectory:DetachFromIndex",
        "description": "Add 'clouddirectory:DetachFromIndex' action",
        "prefix": "clouddirectory:DetachFromIndex"
    },
    "clouddirectory:DetachObject": {
        "body": "clouddirectory:DetachObject",
        "description": "Add 'clouddirectory:DetachObject' action",
        "prefix": "clouddirectory:DetachObject"
    },
    "clouddirectory:DetachPolicy": {
        "body": "clouddirectory:DetachPolicy",
        "description": "Add 'clouddirectory:DetachPolicy' action",
        "prefix": "clouddirectory:DetachPolicy"
    },
    "clouddirectory:DetachTypedLink": {
        "body": "clouddirectory:DetachTypedLink",
        "description": "Add 'clouddirectory:DetachTypedLink' action",
        "prefix": "clouddirectory:DetachTypedLink"
    },
    "clouddirectory:DisableDirectory": {
        "body": "clouddirectory:DisableDirectory",
        "description": "Add 'clouddirectory:DisableDirectory' action",
        "prefix": "clouddirectory:DisableDirectory"
    },
    "clouddirectory:EnableDirectory": {
        "body": "clouddirectory:EnableDirectory",
        "description": "Add 'clouddirectory:EnableDirectory' action",
        "prefix": "clouddirectory:EnableDirectory"
    },
    "clouddirectory:GetDirectory": {
        "body": "clouddirectory:GetDirectory",
        "description": "Add 'clouddirectory:GetDirectory' action",
        "prefix": "clouddirectory:GetDirectory"
    },
    "clouddirectory:GetFacet": {
        "body": "clouddirectory:GetFacet",
        "description": "Add 'clouddirectory:GetFacet' action",
        "prefix": "clouddirectory:GetFacet"
    },
    "clouddirectory:GetObjectInformation": {
        "body": "clouddirectory:GetObjectInformation",
        "description": "Add 'clouddirectory:GetObjectInformation' action",
        "prefix": "clouddirectory:GetObjectInformation"
    },
    "clouddirectory:GetSchemaAsJson": {
        "body": "clouddirectory:GetSchemaAsJson",
        "description": "Add 'clouddirectory:GetSchemaAsJson' action",
        "prefix": "clouddirectory:GetSchemaAsJson"
    },
    "clouddirectory:GetTypedLinkFacetInformation": {
        "body": "clouddirectory:GetTypedLinkFacetInformation",
        "description": "Add 'clouddirectory:GetTypedLinkFacetInformation' action",
        "prefix": "clouddirectory:GetTypedLinkFacetInformation"
    },
    "clouddirectory:ListAppliedSchemaArns": {
        "body": "clouddirectory:ListAppliedSchemaArns",
        "description": "Add 'clouddirectory:ListAppliedSchemaArns' action",
        "prefix": "clouddirectory:ListAppliedSchemaArns"
    },
    "clouddirectory:ListAttachedIndices": {
        "body": "clouddirectory:ListAttachedIndices",
        "description": "Add 'clouddirectory:ListAttachedIndices' action",
        "prefix": "clouddirectory:ListAttachedIndices"
    },
    "clouddirectory:ListDevelopmentSchemaArns": {
        "body": "clouddirectory:ListDevelopmentSchemaArns",
        "description": "Add 'clouddirectory:ListDevelopmentSchemaArns' action",
        "prefix": "clouddirectory:ListDevelopmentSchemaArns"
    },
    "clouddirectory:ListDirectories": {
        "body": "clouddirectory:ListDirectories",
        "description": "Add 'clouddirectory:ListDirectories' action",
        "prefix": "clouddirectory:ListDirectories"
    },
    "clouddirectory:ListFacetAttributes": {
        "body": "clouddirectory:ListFacetAttributes",
        "description": "Add 'clouddirectory:ListFacetAttributes' action",
        "prefix": "clouddirectory:ListFacetAttributes"
    },
    "clouddirectory:ListFacetNames": {
        "body": "clouddirectory:ListFacetNames",
        "description": "Add 'clouddirectory:ListFacetNames' action",
        "prefix": "clouddirectory:ListFacetNames"
    },
    "clouddirectory:ListIncomingTypedLinks": {
        "body": "clouddirectory:ListIncomingTypedLinks",
        "description": "Add 'clouddirectory:ListIncomingTypedLinks' action",
        "prefix": "clouddirectory:ListIncomingTypedLinks"
    },
    "clouddirectory:ListIndex": {
        "body": "clouddirectory:ListIndex",
        "description": "Add 'clouddirectory:ListIndex' action",
        "prefix": "clouddirectory:ListIndex"
    },
    "clouddirectory:ListObjectAttributes": {
        "body": "clouddirectory:ListObjectAttributes",
        "description": "Add 'clouddirectory:ListObjectAttributes' action",
        "prefix": "clouddirectory:ListObjectAttributes"
    },
    "clouddirectory:ListObjectChildren": {
        "body": "clouddirectory:ListObjectChildren",
        "description": "Add 'clouddirectory:ListObjectChildren' action",
        "prefix": "clouddirectory:ListObjectChildren"
    },
    "clouddirectory:ListObjectParentPaths": {
        "body": "clouddirectory:ListObjectParentPaths",
        "description": "Add 'clouddirectory:ListObjectParentPaths' action",
        "prefix": "clouddirectory:ListObjectParentPaths"
    },
    "clouddirectory:ListObjectParents": {
        "body": "clouddirectory:ListObjectParents",
        "description": "Add 'clouddirectory:ListObjectParents' action",
        "prefix": "clouddirectory:ListObjectParents"
    },
    "clouddirectory:ListObjectPolicies": {
        "body": "clouddirectory:ListObjectPolicies",
        "description": "Add 'clouddirectory:ListObjectPolicies' action",
        "prefix": "clouddirectory:ListObjectPolicies"
    },
    "clouddirectory:ListOutgoingTypedLinks": {
        "body": "clouddirectory:ListOutgoingTypedLinks",
        "description": "Add 'clouddirectory:ListOutgoingTypedLinks' action",
        "prefix": "clouddirectory:ListOutgoingTypedLinks"
    },
    "clouddirectory:ListPolicyAttachments": {
        "body": "clouddirectory:ListPolicyAttachments",
        "description": "Add 'clouddirectory:ListPolicyAttachments' action",
        "prefix": "clouddirectory:ListPolicyAttachments"
    },
    "clouddirectory:ListPublishedSchemaArns": {
        "body": "clouddirectory:ListPublishedSchemaArns",
        "description": "Add 'clouddirectory:ListPublishedSchemaArns' action",
        "prefix": "clouddirectory:ListPublishedSchemaArns"
    },
    "clouddirectory:ListTagsForResource": {
        "body": "clouddirectory:ListTagsForResource",
        "description": "Add 'clouddirectory:ListTagsForResource' action",
        "prefix": "clouddirectory:ListTagsForResource"
    },
    "clouddirectory:ListTypedLinkFacetAttributes": {
        "body": "clouddirectory:ListTypedLinkFacetAttributes",
        "description": "Add 'clouddirectory:ListTypedLinkFacetAttributes' action",
        "prefix": "clouddirectory:ListTypedLinkFacetAttributes"
    },
    "clouddirectory:ListTypedLinkFacetNames": {
        "body": "clouddirectory:ListTypedLinkFacetNames",
        "description": "Add 'clouddirectory:ListTypedLinkFacetNames' action",
        "prefix": "clouddirectory:ListTypedLinkFacetNames"
    },
    "clouddirectory:LookupPolicy": {
        "body": "clouddirectory:LookupPolicy",
        "description": "Add 'clouddirectory:LookupPolicy' action",
        "prefix": "clouddirectory:LookupPolicy"
    },
    "clouddirectory:PublishSchema": {
        "body": "clouddirectory:PublishSchema",
        "description": "Add 'clouddirectory:PublishSchema' action",
        "prefix": "clouddirectory:PublishSchema"
    },
    "clouddirectory:PutSchemaFromJson": {
        "body": "clouddirectory:PutSchemaFromJson",
        "description": "Add 'clouddirectory:PutSchemaFromJson' action",
        "prefix": "clouddirectory:PutSchemaFromJson"
    },
    "clouddirectory:RemoveFacetFromObject": {
        "body": "clouddirectory:RemoveFacetFromObject",
        "description": "Add 'clouddirectory:RemoveFacetFromObject' action",
        "prefix": "clouddirectory:RemoveFacetFromObject"
    },
    "clouddirectory:TagResource": {
        "body": "clouddirectory:TagResource",
        "description": "Add 'clouddirectory:TagResource' action",
        "prefix": "clouddirectory:TagResource"
    },
    "clouddirectory:UntagResource": {
        "body": "clouddirectory:UntagResource",
        "description": "Add 'clouddirectory:UntagResource' action",
        "prefix": "clouddirectory:UntagResource"
    },
    "clouddirectory:UpdateFacet": {
        "body": "clouddirectory:UpdateFacet",
        "description": "Add 'clouddirectory:UpdateFacet' action",
        "prefix": "clouddirectory:UpdateFacet"
    },
    "clouddirectory:UpdateObjectAttributes": {
        "body": "clouddirectory:UpdateObjectAttributes",
        "description": "Add 'clouddirectory:UpdateObjectAttributes' action",
        "prefix": "clouddirectory:UpdateObjectAttributes"
    },
    "clouddirectory:UpdateSchema": {
        "body": "clouddirectory:UpdateSchema",
        "description": "Add 'clouddirectory:UpdateSchema' action",
        "prefix": "clouddirectory:UpdateSchema"
    },
    "clouddirectory:UpdateTypedLinkFacet": {
        "body": "clouddirectory:UpdateTypedLinkFacet",
        "description": "Add 'clouddirectory:UpdateTypedLinkFacet' action",
        "prefix": "clouddirectory:UpdateTypedLinkFacet"
    },
    "cloudformation:CancelUpdateStack": {
        "body": "cloudformation:CancelUpdateStack",
        "description": "Add 'cloudformation:CancelUpdateStack' action",
        "prefix": "cloudformation:CancelUpdateStack"
    },
    "cloudformation:ContinueUpdateRollback": {
        "body": "cloudformation:ContinueUpdateRollback",
        "description": "Add 'cloudformation:ContinueUpdateRollback' action",
        "prefix": "cloudformation:ContinueUpdateRollback"
    },
    "cloudformation:CreateChangeSet": {
        "body": "cloudformation:CreateChangeSet",
        "description": "Add 'cloudformation:CreateChangeSet' action",
        "prefix": "cloudformation:CreateChangeSet"
    },
    "cloudformation:CreateStack": {
        "body": "cloudformation:CreateStack",
        "description": "Add 'cloudformation:CreateStack' action",
        "prefix": "cloudformation:CreateStack"
    },
    "cloudformation:CreateUploadBucket": {
        "body": "cloudformation:CreateUploadBucket",
        "description": "Add 'cloudformation:CreateUploadBucket' action",
        "prefix": "cloudformation:CreateUploadBucket"
    },
    "cloudformation:DeleteChangeSet": {
        "body": "cloudformation:DeleteChangeSet",
        "description": "Add 'cloudformation:DeleteChangeSet' action",
        "prefix": "cloudformation:DeleteChangeSet"
    },
    "cloudformation:DeleteStack": {
        "body": "cloudformation:DeleteStack",
        "description": "Add 'cloudformation:DeleteStack' action",
        "prefix": "cloudformation:DeleteStack"
    },
    "cloudformation:DescribeAccountLimits": {
        "body": "cloudformation:DescribeAccountLimits",
        "description": "Add 'cloudformation:DescribeAccountLimits' action",
        "prefix": "cloudformation:DescribeAccountLimits"
    },
    "cloudformation:DescribeChangeSet": {
        "body": "cloudformation:DescribeChangeSet",
        "description": "Add 'cloudformation:DescribeChangeSet' action",
        "prefix": "cloudformation:DescribeChangeSet"
    },
    "cloudformation:DescribeStackEvents": {
        "body": "cloudformation:DescribeStackEvents",
        "description": "Add 'cloudformation:DescribeStackEvents' action",
        "prefix": "cloudformation:DescribeStackEvents"
    },
    "cloudformation:DescribeStackResource": {
        "body": "cloudformation:DescribeStackResource",
        "description": "Add 'cloudformation:DescribeStackResource' action",
        "prefix": "cloudformation:DescribeStackResource"
    },
    "cloudformation:DescribeStackResources": {
        "body": "cloudformation:DescribeStackResources",
        "description": "Add 'cloudformation:DescribeStackResources' action",
        "prefix": "cloudformation:DescribeStackResources"
    },
    "cloudformation:DescribeStacks": {
        "body": "cloudformation:DescribeStacks",
        "description": "Add 'cloudformation:DescribeStacks' action",
        "prefix": "cloudformation:DescribeStacks"
    },
    "cloudformation:EstimateTemplateCost": {
        "body": "cloudformation:EstimateTemplateCost",
        "description": "Add 'cloudformation:EstimateTemplateCost' action",
        "prefix": "cloudformation:EstimateTemplateCost"
    },
    "cloudformation:ExecuteChangeSet": {
        "body": "cloudformation:ExecuteChangeSet",
        "description": "Add 'cloudformation:ExecuteChangeSet' action",
        "prefix": "cloudformation:ExecuteChangeSet"
    },
    "cloudformation:GetStackPolicy": {
        "body": "cloudformation:GetStackPolicy",
        "description": "Add 'cloudformation:GetStackPolicy' action",
        "prefix": "cloudformation:GetStackPolicy"
    },
    "cloudformation:GetTemplate": {
        "body": "cloudformation:GetTemplate",
        "description": "Add 'cloudformation:GetTemplate' action",
        "prefix": "cloudformation:GetTemplate"
    },
    "cloudformation:GetTemplateSummary": {
        "body": "cloudformation:GetTemplateSummary",
        "description": "Add 'cloudformation:GetTemplateSummary' action",
        "prefix": "cloudformation:GetTemplateSummary"
    },
    "cloudformation:ListChangeSets": {
        "body": "cloudformation:ListChangeSets",
        "description": "Add 'cloudformation:ListChangeSets' action",
        "prefix": "cloudformation:ListChangeSets"
    },
    "cloudformation:ListExports": {
        "body": "cloudformation:ListExports",
        "description": "Add 'cloudformation:ListExports' action",
        "prefix": "cloudformation:ListExports"
    },
    "cloudformation:ListImports": {
        "body": "cloudformation:ListImports",
        "description": "Add 'cloudformation:ListImports' action",
        "prefix": "cloudformation:ListImports"
    },
    "cloudformation:ListStackResources": {
        "body": "cloudformation:ListStackResources",
        "description": "Add 'cloudformation:ListStackResources' action",
        "prefix": "cloudformation:ListStackResources"
    },
    "cloudformation:ListStacks": {
        "body": "cloudformation:ListStacks",
        "description": "Add 'cloudformation:ListStacks' action",
        "prefix": "cloudformation:ListStacks"
    },
    "cloudformation:PreviewStackUpdate": {
        "body": "cloudformation:PreviewStackUpdate",
        "description": "Add 'cloudformation:PreviewStackUpdate' action",
        "prefix": "cloudformation:PreviewStackUpdate"
    },
    "cloudformation:SetStackPolicy": {
        "body": "cloudformation:SetStackPolicy",
        "description": "Add 'cloudformation:SetStackPolicy' action",
        "prefix": "cloudformation:SetStackPolicy"
    },
    "cloudformation:SignalResource": {
        "body": "cloudformation:SignalResource",
        "description": "Add 'cloudformation:SignalResource' action",
        "prefix": "cloudformation:SignalResource"
    },
    "cloudformation:UpdateStack": {
        "body": "cloudformation:UpdateStack",
        "description": "Add 'cloudformation:UpdateStack' action",
        "prefix": "cloudformation:UpdateStack"
    },
    "cloudformation:UpdateTerminationProtection": {
        "body": "cloudformation:UpdateTerminationProtection",
        "description": "Add 'cloudformation:UpdateTerminationProtection' action",
        "prefix": "cloudformation:UpdateTerminationProtection"
    },
    "cloudformation:ValidateTemplate": {
        "body": "cloudformation:ValidateTemplate",
        "description": "Add 'cloudformation:ValidateTemplate' action",
        "prefix": "cloudformation:ValidateTemplate"
    },
    "cloudfront:CreateCloudFrontOriginAccessIdentity": {
        "body": "cloudfront:CreateCloudFrontOriginAccessIdentity",
        "description": "Add 'cloudfront:CreateCloudFrontOriginAccessIdentity' action",
        "prefix": "cloudfront:CreateCloudFrontOriginAccessIdentity"
    },
    "cloudfront:CreateDistribution": {
        "body": "cloudfront:CreateDistribution",
        "description": "Add 'cloudfront:CreateDistribution' action",
        "prefix": "cloudfront:CreateDistribution"
    },
    "cloudfront:CreateDistributionWithTags": {
        "body": "cloudfront:CreateDistributionWithTags",
        "description": "Add 'cloudfront:CreateDistributionWithTags' action",
        "prefix": "cloudfront:CreateDistributionWithTags"
    },
    "cloudfront:CreateInvalidation": {
        "body": "cloudfront:CreateInvalidation",
        "description": "Add 'cloudfront:CreateInvalidation' action",
        "prefix": "cloudfront:CreateInvalidation"
    },
    "cloudfront:CreateStreamingDistribution": {
        "body": "cloudfront:CreateStreamingDistribution",
        "description": "Add 'cloudfront:CreateStreamingDistribution' action",
        "prefix": "cloudfront:CreateStreamingDistribution"
    },
    "cloudfront:CreateStreamingDistributionWithTags": {
        "body": "cloudfront:CreateStreamingDistributionWithTags",
        "description": "Add 'cloudfront:CreateStreamingDistributionWithTags' action",
        "prefix": "cloudfront:CreateStreamingDistributionWithTags"
    },
    "cloudfront:DeleteCloudFrontOriginAccessIdentity": {
        "body": "cloudfront:DeleteCloudFrontOriginAccessIdentity",
        "description": "Add 'cloudfront:DeleteCloudFrontOriginAccessIdentity' action",
        "prefix": "cloudfront:DeleteCloudFrontOriginAccessIdentity"
    },
    "cloudfront:DeleteDistribution": {
        "body": "cloudfront:DeleteDistribution",
        "description": "Add 'cloudfront:DeleteDistribution' action",
        "prefix": "cloudfront:DeleteDistribution"
    },
    "cloudfront:DeleteStreamingDistribution": {
        "body": "cloudfront:DeleteStreamingDistribution",
        "description": "Add 'cloudfront:DeleteStreamingDistribution' action",
        "prefix": "cloudfront:DeleteStreamingDistribution"
    },
    "cloudfront:GetCloudFrontOriginAccessIdentity": {
        "body": "cloudfront:GetCloudFrontOriginAccessIdentity",
        "description": "Add 'cloudfront:GetCloudFrontOriginAccessIdentity' action",
        "prefix": "cloudfront:GetCloudFrontOriginAccessIdentity"
    },
    "cloudfront:GetCloudFrontOriginAccessIdentityConfig": {
        "body": "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
        "description": "Add 'cloudfront:GetCloudFrontOriginAccessIdentityConfig' action",
        "prefix": "cloudfront:GetCloudFrontOriginAccessIdentityConfig"
    },
    "cloudfront:GetDistribution": {
        "body": "cloudfront:GetDistribution",
        "description": "Add 'cloudfront:GetDistribution' action",
        "prefix": "cloudfront:GetDistribution"
    },
    "cloudfront:GetDistributionConfig": {
        "body": "cloudfront:GetDistributionConfig",
        "description": "Add 'cloudfront:GetDistributionConfig' action",
        "prefix": "cloudfront:GetDistributionConfig"
    },
    "cloudfront:GetInvalidation": {
        "body": "cloudfront:GetInvalidation",
        "description": "Add 'cloudfront:GetInvalidation' action",
        "prefix": "cloudfront:GetInvalidation"
    },
    "cloudfront:GetStreamingDistribution": {
        "body": "cloudfront:GetStreamingDistribution",
        "description": "Add 'cloudfront:GetStreamingDistribution' action",
        "prefix": "cloudfront:GetStreamingDistribution"
    },
    "cloudfront:GetStreamingDistributionConfig": {
        "body": "cloudfront:GetStreamingDistributionConfig",
        "description": "Add 'cloudfront:GetStreamingDistributionConfig' action",
        "prefix": "cloudfront:GetStreamingDistributionConfig"
    },
    "cloudfront:ListCloudFrontOriginAccessIdentities": {
        "body": "cloudfront:ListCloudFrontOriginAccessIdentities",
        "description": "Add 'cloudfront:ListCloudFrontOriginAccessIdentities' action",
        "prefix": "cloudfront:ListCloudFrontOriginAccessIdentities"
    },
    "cloudfront:ListDistributions": {
        "body": "cloudfront:ListDistributions",
        "description": "Add 'cloudfront:ListDistributions' action",
        "prefix": "cloudfront:ListDistributions"
    },
    "cloudfront:ListDistributionsByWebACLId": {
        "body": "cloudfront:ListDistributionsByWebACLId",
        "description": "Add 'cloudfront:ListDistributionsByWebACLId' action",
        "prefix": "cloudfront:ListDistributionsByWebACLId"
    },
    "cloudfront:ListInvalidations": {
        "body": "cloudfront:ListInvalidations",
        "description": "Add 'cloudfront:ListInvalidations' action",
        "prefix": "cloudfront:ListInvalidations"
    },
    "cloudfront:ListStreamingDistributions": {
        "body": "cloudfront:ListStreamingDistributions",
        "description": "Add 'cloudfront:ListStreamingDistributions' action",
        "prefix": "cloudfront:ListStreamingDistributions"
    },
    "cloudfront:ListTagsForResource": {
        "body": "cloudfront:ListTagsForResource",
        "description": "Add 'cloudfront:ListTagsForResource' action",
        "prefix": "cloudfront:ListTagsForResource"
    },
    "cloudfront:TagResource": {
        "body": "cloudfront:TagResource",
        "description": "Add 'cloudfront:TagResource' action",
        "prefix": "cloudfront:TagResource"
    },
    "cloudfront:UntagResource": {
        "body": "cloudfront:UntagResource",
        "description": "Add 'cloudfront:UntagResource' action",
        "prefix": "cloudfront:UntagResource"
    },
    "cloudfront:UpdateCloudFrontOriginAccessIdentity": {
        "body": "cloudfront:UpdateCloudFrontOriginAccessIdentity",
        "description": "Add 'cloudfront:UpdateCloudFrontOriginAccessIdentity' action",
        "prefix": "cloudfront:UpdateCloudFrontOriginAccessIdentity"
    },
    "cloudfront:UpdateDistribution": {
        "body": "cloudfront:UpdateDistribution",
        "description": "Add 'cloudfront:UpdateDistribution' action",
        "prefix": "cloudfront:UpdateDistribution"
    },
    "cloudfront:UpdateStreamingDistribution": {
        "body": "cloudfront:UpdateStreamingDistribution",
        "description": "Add 'cloudfront:UpdateStreamingDistribution' action",
        "prefix": "cloudfront:UpdateStreamingDistribution"
    },
    "cloudhsm:AddTagsToResource": {
        "body": "cloudhsm:AddTagsToResource",
        "description": "Add 'cloudhsm:AddTagsToResource' action",
        "prefix": "cloudhsm:AddTagsToResource"
    },
    "cloudhsm:CreateHapg": {
        "body": "cloudhsm:CreateHapg",
        "description": "Add 'cloudhsm:CreateHapg' action",
        "prefix": "cloudhsm:CreateHapg"
    },
    "cloudhsm:CreateHsm": {
        "body": "cloudhsm:CreateHsm",
        "description": "Add 'cloudhsm:CreateHsm' action",
        "prefix": "cloudhsm:CreateHsm"
    },
    "cloudhsm:CreateLunaClient": {
        "body": "cloudhsm:CreateLunaClient",
        "description": "Add 'cloudhsm:CreateLunaClient' action",
        "prefix": "cloudhsm:CreateLunaClient"
    },
    "cloudhsm:DeleteHapg": {
        "body": "cloudhsm:DeleteHapg",
        "description": "Add 'cloudhsm:DeleteHapg' action",
        "prefix": "cloudhsm:DeleteHapg"
    },
    "cloudhsm:DeleteHsm": {
        "body": "cloudhsm:DeleteHsm",
        "description": "Add 'cloudhsm:DeleteHsm' action",
        "prefix": "cloudhsm:DeleteHsm"
    },
    "cloudhsm:DeleteLunaClient": {
        "body": "cloudhsm:DeleteLunaClient",
        "description": "Add 'cloudhsm:DeleteLunaClient' action",
        "prefix": "cloudhsm:DeleteLunaClient"
    },
    "cloudhsm:DescribeHapg": {
        "body": "cloudhsm:DescribeHapg",
        "description": "Add 'cloudhsm:DescribeHapg' action",
        "prefix": "cloudhsm:DescribeHapg"
    },
    "cloudhsm:DescribeHsm": {
        "body": "cloudhsm:DescribeHsm",
        "description": "Add 'cloudhsm:DescribeHsm' action",
        "prefix": "cloudhsm:DescribeHsm"
    },
    "cloudhsm:DescribeLunaClient": {
        "body": "cloudhsm:DescribeLunaClient",
        "description": "Add 'cloudhsm:DescribeLunaClient' action",
        "prefix": "cloudhsm:DescribeLunaClient"
    },
    "cloudhsm:GetConfig": {
        "body": "cloudhsm:GetConfig",
        "description": "Add 'cloudhsm:GetConfig' action",
        "prefix": "cloudhsm:GetConfig"
    },
    "cloudhsm:ListAvailableZones": {
        "body": "cloudhsm:ListAvailableZones",
        "description": "Add 'cloudhsm:ListAvailableZones' action",
        "prefix": "cloudhsm:ListAvailableZones"
    },
    "cloudhsm:ListHapgs": {
        "body": "cloudhsm:ListHapgs",
        "description": "Add 'cloudhsm:ListHapgs' action",
        "prefix": "cloudhsm:ListHapgs"
    },
    "cloudhsm:ListHsms": {
        "body": "cloudhsm:ListHsms",
        "description": "Add 'cloudhsm:ListHsms' action",
        "prefix": "cloudhsm:ListHsms"
    },
    "cloudhsm:ListLunaClients": {
        "body": "cloudhsm:ListLunaClients",
        "description": "Add 'cloudhsm:ListLunaClients' action",
        "prefix": "cloudhsm:ListLunaClients"
    },
    "cloudhsm:ListTagsForResource": {
        "body": "cloudhsm:ListTagsForResource",
        "description": "Add 'cloudhsm:ListTagsForResource' action",
        "prefix": "cloudhsm:ListTagsForResource"
    },
    "cloudhsm:ModifyHapg": {
        "body": "cloudhsm:ModifyHapg",
        "description": "Add 'cloudhsm:ModifyHapg' action",
        "prefix": "cloudhsm:ModifyHapg"
    },
    "cloudhsm:ModifyHsm": {
        "body": "cloudhsm:ModifyHsm",
        "description": "Add 'cloudhsm:ModifyHsm' action",
        "prefix": "cloudhsm:ModifyHsm"
    },
    "cloudhsm:ModifyLunaClient": {
        "body": "cloudhsm:ModifyLunaClient",
        "description": "Add 'cloudhsm:ModifyLunaClient' action",
        "prefix": "cloudhsm:ModifyLunaClient"
    },
    "cloudhsm:RemoveTagsFromResource": {
        "body": "cloudhsm:RemoveTagsFromResource",
        "description": "Add 'cloudhsm:RemoveTagsFromResource' action",
        "prefix": "cloudhsm:RemoveTagsFromResource"
    },
    "cloudsearch:AddTags": {
        "body": "cloudsearch:AddTags",
        "description": "Add 'cloudsearch:AddTags' action",
        "prefix": "cloudsearch:AddTags"
    },
    "cloudsearch:BuildSuggesters": {
        "body": "cloudsearch:BuildSuggesters",
        "description": "Add 'cloudsearch:BuildSuggesters' action",
        "prefix": "cloudsearch:BuildSuggesters"
    },
    "cloudsearch:CreateDomain": {
        "body": "cloudsearch:CreateDomain",
        "description": "Add 'cloudsearch:CreateDomain' action",
        "prefix": "cloudsearch:CreateDomain"
    },
    "cloudsearch:DefineAnalysisScheme": {
        "body": "cloudsearch:DefineAnalysisScheme",
        "description": "Add 'cloudsearch:DefineAnalysisScheme' action",
        "prefix": "cloudsearch:DefineAnalysisScheme"
    },
    "cloudsearch:DefineExpression": {
        "body": "cloudsearch:DefineExpression",
        "description": "Add 'cloudsearch:DefineExpression' action",
        "prefix": "cloudsearch:DefineExpression"
    },
    "cloudsearch:DefineIndexField": {
        "body": "cloudsearch:DefineIndexField",
        "description": "Add 'cloudsearch:DefineIndexField' action",
        "prefix": "cloudsearch:DefineIndexField"
    },
    "cloudsearch:DefineSuggester": {
        "body": "cloudsearch:DefineSuggester",
        "description": "Add 'cloudsearch:DefineSuggester' action",
        "prefix": "cloudsearch:DefineSuggester"
    },
    "cloudsearch:DeleteAnalysisScheme": {
        "body": "cloudsearch:DeleteAnalysisScheme",
        "description": "Add 'cloudsearch:DeleteAnalysisScheme' action",
        "prefix": "cloudsearch:DeleteAnalysisScheme"
    },
    "cloudsearch:DeleteDomain": {
        "body": "cloudsearch:DeleteDomain",
        "description": "Add 'cloudsearch:DeleteDomain' action",
        "prefix": "cloudsearch:DeleteDomain"
    },
    "cloudsearch:DeleteExpression": {
        "body": "cloudsearch:DeleteExpression",
        "description": "Add 'cloudsearch:DeleteExpression' action",
        "prefix": "cloudsearch:DeleteExpression"
    },
    "cloudsearch:DeleteIndexField": {
        "body": "cloudsearch:DeleteIndexField",
        "description": "Add 'cloudsearch:DeleteIndexField' action",
        "prefix": "cloudsearch:DeleteIndexField"
    },
    "cloudsearch:DeleteSuggester": {
        "body": "cloudsearch:DeleteSuggester",
        "description": "Add 'cloudsearch:DeleteSuggester' action",
        "prefix": "cloudsearch:DeleteSuggester"
    },
    "cloudsearch:DescribeAnalysisSchemes": {
        "body": "cloudsearch:DescribeAnalysisSchemes",
        "description": "Add 'cloudsearch:DescribeAnalysisSchemes' action",
        "prefix": "cloudsearch:DescribeAnalysisSchemes"
    },
    "cloudsearch:DescribeAvailabilityOptions": {
        "body": "cloudsearch:DescribeAvailabilityOptions",
        "description": "Add 'cloudsearch:DescribeAvailabilityOptions' action",
        "prefix": "cloudsearch:DescribeAvailabilityOptions"
    },
    "cloudsearch:DescribeDomains": {
        "body": "cloudsearch:DescribeDomains",
        "description": "Add 'cloudsearch:DescribeDomains' action",
        "prefix": "cloudsearch:DescribeDomains"
    },
    "cloudsearch:DescribeExpressions": {
        "body": "cloudsearch:DescribeExpressions",
        "description": "Add 'cloudsearch:DescribeExpressions' action",
        "prefix": "cloudsearch:DescribeExpressions"
    },
    "cloudsearch:DescribeIndexFields": {
        "body": "cloudsearch:DescribeIndexFields",
        "description": "Add 'cloudsearch:DescribeIndexFields' action",
        "prefix": "cloudsearch:DescribeIndexFields"
    },
    "cloudsearch:DescribeScalingParameters": {
        "body": "cloudsearch:DescribeScalingParameters",
        "description": "Add 'cloudsearch:DescribeScalingParameters' action",
        "prefix": "cloudsearch:DescribeScalingParameters"
    },
    "cloudsearch:DescribeServiceAccessPolicies": {
        "body": "cloudsearch:DescribeServiceAccessPolicies",
        "description": "Add 'cloudsearch:DescribeServiceAccessPolicies' action",
        "prefix": "cloudsearch:DescribeServiceAccessPolicies"
    },
    "cloudsearch:DescribeSuggesters": {
        "body": "cloudsearch:DescribeSuggesters",
        "description": "Add 'cloudsearch:DescribeSuggesters' action",
        "prefix": "cloudsearch:DescribeSuggesters"
    },
    "cloudsearch:IndexDocuments": {
        "body": "cloudsearch:IndexDocuments",
        "description": "Add 'cloudsearch:IndexDocuments' action",
        "prefix": "cloudsearch:IndexDocuments"
    },
    "cloudsearch:ListDomainNames": {
        "body": "cloudsearch:ListDomainNames",
        "description": "Add 'cloudsearch:ListDomainNames' action",
        "prefix": "cloudsearch:ListDomainNames"
    },
    "cloudsearch:ListTags": {
        "body": "cloudsearch:ListTags",
        "description": "Add 'cloudsearch:ListTags' action",
        "prefix": "cloudsearch:ListTags"
    },
    "cloudsearch:RemoveTags": {
        "body": "cloudsearch:RemoveTags",
        "description": "Add 'cloudsearch:RemoveTags' action",
        "prefix": "cloudsearch:RemoveTags"
    },
    "cloudsearch:UpdateAvailabilityOptions": {
        "body": "cloudsearch:UpdateAvailabilityOptions",
        "description": "Add 'cloudsearch:UpdateAvailabilityOptions' action",
        "prefix": "cloudsearch:UpdateAvailabilityOptions"
    },
    "cloudsearch:UpdateScalingParameters": {
        "body": "cloudsearch:UpdateScalingParameters",
        "description": "Add 'cloudsearch:UpdateScalingParameters' action",
        "prefix": "cloudsearch:UpdateScalingParameters"
    },
    "cloudsearch:UpdateServiceAccessPolicies": {
        "body": "cloudsearch:UpdateServiceAccessPolicies",
        "description": "Add 'cloudsearch:UpdateServiceAccessPolicies' action",
        "prefix": "cloudsearch:UpdateServiceAccessPolicies"
    },
    "cloudsearch:document": {
        "body": "cloudsearch:document",
        "description": "Add 'cloudsearch:document' action",
        "prefix": "cloudsearch:document"
    },
    "cloudsearch:search": {
        "body": "cloudsearch:search",
        "description": "Add 'cloudsearch:search' action",
        "prefix": "cloudsearch:search"
    },
    "cloudsearch:suggest": {
        "body": "cloudsearch:suggest",
        "description": "Add 'cloudsearch:suggest' action",
        "prefix": "cloudsearch:suggest"
    },
    "cloudtrail:AddTags": {
        "body": "cloudtrail:AddTags",
        "description": "Add 'cloudtrail:AddTags' action",
        "prefix": "cloudtrail:AddTags"
    },
    "cloudtrail:CreateTrail": {
        "body": "cloudtrail:CreateTrail",
        "description": "Add 'cloudtrail:CreateTrail' action",
        "prefix": "cloudtrail:CreateTrail"
    },
    "cloudtrail:DeleteTrail": {
        "body": "cloudtrail:DeleteTrail",
        "description": "Add 'cloudtrail:DeleteTrail' action",
        "prefix": "cloudtrail:DeleteTrail"
    },
    "cloudtrail:DescribeTrails": {
        "body": "cloudtrail:DescribeTrails",
        "description": "Add 'cloudtrail:DescribeTrails' action",
        "prefix": "cloudtrail:DescribeTrails"
    },
    "cloudtrail:GetEventSelectors": {
        "body": "cloudtrail:GetEventSelectors",
        "description": "Add 'cloudtrail:GetEventSelectors' action",
        "prefix": "cloudtrail:GetEventSelectors"
    },
    "cloudtrail:GetTrailStatus": {
        "body": "cloudtrail:GetTrailStatus",
        "description": "Add 'cloudtrail:GetTrailStatus' action",
        "prefix": "cloudtrail:GetTrailStatus"
    },
    "cloudtrail:ListPublicKeys": {
        "body": "cloudtrail:ListPublicKeys",
        "description": "Add 'cloudtrail:ListPublicKeys' action",
        "prefix": "cloudtrail:ListPublicKeys"
    },
    "cloudtrail:ListTags": {
        "body": "cloudtrail:ListTags",
        "description": "Add 'cloudtrail:ListTags' action",
        "prefix": "cloudtrail:ListTags"
    },
    "cloudtrail:LookupEvents": {
        "body": "cloudtrail:LookupEvents",
        "description": "Add 'cloudtrail:LookupEvents' action",
        "prefix": "cloudtrail:LookupEvents"
    },
    "cloudtrail:PutEventSelectors": {
        "body": "cloudtrail:PutEventSelectors",
        "description": "Add 'cloudtrail:PutEventSelectors' action",
        "prefix": "cloudtrail:PutEventSelectors"
    },
    "cloudtrail:RemoveTags": {
        "body": "cloudtrail:RemoveTags",
        "description": "Add 'cloudtrail:RemoveTags' action",
        "prefix": "cloudtrail:RemoveTags"
    },
    "cloudtrail:StartLogging": {
        "body": "cloudtrail:StartLogging",
        "description": "Add 'cloudtrail:StartLogging' action",
        "prefix": "cloudtrail:StartLogging"
    },
    "cloudtrail:StopLogging": {
        "body": "cloudtrail:StopLogging",
        "description": "Add 'cloudtrail:StopLogging' action",
        "prefix": "cloudtrail:StopLogging"
    },
    "cloudtrail:UpdateTrail": {
        "body": "cloudtrail:UpdateTrail",
        "description": "Add 'cloudtrail:UpdateTrail' action",
        "prefix": "cloudtrail:UpdateTrail"
    },
    "cloudwatch:DeleteAlarms": {
        "body": "cloudwatch:DeleteAlarms",
        "description": "Add 'cloudwatch:DeleteAlarms' action",
        "prefix": "cloudwatch:DeleteAlarms"
    },
    "cloudwatch:DeleteDashboards": {
        "body": "cloudwatch:DeleteDashboards",
        "description": "Add 'cloudwatch:DeleteDashboards' action",
        "prefix": "cloudwatch:DeleteDashboards"
    },
    "cloudwatch:DescribeAlarmHistory": {
        "body": "cloudwatch:DescribeAlarmHistory",
        "description": "Add 'cloudwatch:DescribeAlarmHistory' action",
        "prefix": "cloudwatch:DescribeAlarmHistory"
    },
    "cloudwatch:DescribeAlarms": {
        "body": "cloudwatch:DescribeAlarms",
        "description": "Add 'cloudwatch:DescribeAlarms' action",
        "prefix": "cloudwatch:DescribeAlarms"
    },
    "cloudwatch:DescribeAlarmsForMetric": {
        "body": "cloudwatch:DescribeAlarmsForMetric",
        "description": "Add 'cloudwatch:DescribeAlarmsForMetric' action",
        "prefix": "cloudwatch:DescribeAlarmsForMetric"
    },
    "cloudwatch:DisableAlarmActions": {
        "body": "cloudwatch:DisableAlarmActions",
        "description": "Add 'cloudwatch:DisableAlarmActions' action",
        "prefix": "cloudwatch:DisableAlarmActions"
    },
    "cloudwatch:EnableAlarmActions": {
        "body": "cloudwatch:EnableAlarmActions",
        "description": "Add 'cloudwatch:EnableAlarmActions' action",
        "prefix": "cloudwatch:EnableAlarmActions"
    },
    "cloudwatch:GetDashboard": {
        "body": "cloudwatch:GetDashboard",
        "description": "Add 'cloudwatch:GetDashboard' action",
        "prefix": "cloudwatch:GetDashboard"
    },
    "cloudwatch:GetMetricData": {
        "body": "cloudwatch:GetMetricData",
        "description": "Add 'cloudwatch:GetMetricData' action",
        "prefix": "cloudwatch:GetMetricData"
    },
    "cloudwatch:GetMetricStatistics": {
        "body": "cloudwatch:GetMetricStatistics",
        "description": "Add 'cloudwatch:GetMetricStatistics' action",
        "prefix": "cloudwatch:GetMetricStatistics"
    },
    "cloudwatch:ListDashboards": {
        "body": "cloudwatch:ListDashboards",
        "description": "Add 'cloudwatch:ListDashboards' action",
        "prefix": "cloudwatch:ListDashboards"
    },
    "cloudwatch:ListMetrics": {
        "body": "cloudwatch:ListMetrics",
        "description": "Add 'cloudwatch:ListMetrics' action",
        "prefix": "cloudwatch:ListMetrics"
    },
    "cloudwatch:PutDashboard": {
        "body": "cloudwatch:PutDashboard",
        "description": "Add 'cloudwatch:PutDashboard' action",
        "prefix": "cloudwatch:PutDashboard"
    },
    "cloudwatch:PutMetricAlarm": {
        "body": "cloudwatch:PutMetricAlarm",
        "description": "Add 'cloudwatch:PutMetricAlarm' action",
        "prefix": "cloudwatch:PutMetricAlarm"
    },
    "cloudwatch:PutMetricData": {
        "body": "cloudwatch:PutMetricData",
        "description": "Add 'cloudwatch:PutMetricData' action",
        "prefix": "cloudwatch:PutMetricData"
    },
    "cloudwatch:SetAlarmState": {
        "body": "cloudwatch:SetAlarmState",
        "description": "Add 'cloudwatch:SetAlarmState' action",
        "prefix": "cloudwatch:SetAlarmState"
    },
    "codebuild:BatchDeleteBuilds": {
        "body": "codebuild:BatchDeleteBuilds",
        "description": "Add 'codebuild:BatchDeleteBuilds' action",
        "prefix": "codebuild:BatchDeleteBuilds"
    },
    "codebuild:BatchGetBuilds": {
        "body": "codebuild:BatchGetBuilds",
        "description": "Add 'codebuild:BatchGetBuilds' action",
        "prefix": "codebuild:BatchGetBuilds"
    },
    "codebuild:BatchGetProjects": {
        "body": "codebuild:BatchGetProjects",
        "description": "Add 'codebuild:BatchGetProjects' action",
        "prefix": "codebuild:BatchGetProjects"
    },
    "codebuild:CreateProject": {
        "body": "codebuild:CreateProject",
        "description": "Add 'codebuild:CreateProject' action",
        "prefix": "codebuild:CreateProject"
    },
    "codebuild:DeleteProject": {
        "body": "codebuild:DeleteProject",
        "description": "Add 'codebuild:DeleteProject' action",
        "prefix": "codebuild:DeleteProject"
    },
    "codebuild:ListBuilds": {
        "body": "codebuild:ListBuilds",
        "description": "Add 'codebuild:ListBuilds' action",
        "prefix": "codebuild:ListBuilds"
    },
    "codebuild:ListBuildsForProject": {
        "body": "codebuild:ListBuildsForProject",
        "description": "Add 'codebuild:ListBuildsForProject' action",
        "prefix": "codebuild:ListBuildsForProject"
    },
    "codebuild:ListConnectedOAuthAccounts": {
        "body": "codebuild:ListConnectedOAuthAccounts",
        "description": "Add 'codebuild:ListConnectedOAuthAccounts' action",
        "prefix": "codebuild:ListConnectedOAuthAccounts"
    },
    "codebuild:ListCuratedEnvironmentImages": {
        "body": "codebuild:ListCuratedEnvironmentImages",
        "description": "Add 'codebuild:ListCuratedEnvironmentImages' action",
        "prefix": "codebuild:ListCuratedEnvironmentImages"
    },
    "codebuild:ListProjects": {
        "body": "codebuild:ListProjects",
        "description": "Add 'codebuild:ListProjects' action",
        "prefix": "codebuild:ListProjects"
    },
    "codebuild:ListRepositories": {
        "body": "codebuild:ListRepositories",
        "description": "Add 'codebuild:ListRepositories' action",
        "prefix": "codebuild:ListRepositories"
    },
    "codebuild:PersistOAuthToken": {
        "body": "codebuild:PersistOAuthToken",
        "description": "Add 'codebuild:PersistOAuthToken' action",
        "prefix": "codebuild:PersistOAuthToken"
    },
    "codebuild:StartBuild": {
        "body": "codebuild:StartBuild",
        "description": "Add 'codebuild:StartBuild' action",
        "prefix": "codebuild:StartBuild"
    },
    "codebuild:StopBuild": {
        "body": "codebuild:StopBuild",
        "description": "Add 'codebuild:StopBuild' action",
        "prefix": "codebuild:StopBuild"
    },
    "codebuild:UpdateProject": {
        "body": "codebuild:UpdateProject",
        "description": "Add 'codebuild:UpdateProject' action",
        "prefix": "codebuild:UpdateProject"
    },
    "codecommit:BatchGetPullRequests": {
        "body": "codecommit:BatchGetPullRequests",
        "description": "Add 'codecommit:BatchGetPullRequests' action",
        "prefix": "codecommit:BatchGetPullRequests"
    },
    "codecommit:BatchGetRepositories": {
        "body": "codecommit:BatchGetRepositories",
        "description": "Add 'codecommit:BatchGetRepositories' action",
        "prefix": "codecommit:BatchGetRepositories"
    },
    "codecommit:CancelUploadArchive": {
        "body": "codecommit:CancelUploadArchive",
        "description": "Add 'codecommit:CancelUploadArchive' action",
        "prefix": "codecommit:CancelUploadArchive"
    },
    "codecommit:CreateBranch": {
        "body": "codecommit:CreateBranch",
        "description": "Add 'codecommit:CreateBranch' action",
        "prefix": "codecommit:CreateBranch"
    },
    "codecommit:CreatePullRequest": {
        "body": "codecommit:CreatePullRequest",
        "description": "Add 'codecommit:CreatePullRequest' action",
        "prefix": "codecommit:CreatePullRequest"
    },
    "codecommit:CreateRepository": {
        "body": "codecommit:CreateRepository",
        "description": "Add 'codecommit:CreateRepository' action",
        "prefix": "codecommit:CreateRepository"
    },
    "codecommit:DeleteBranch": {
        "body": "codecommit:DeleteBranch",
        "description": "Add 'codecommit:DeleteBranch' action",
        "prefix": "codecommit:DeleteBranch"
    },
    "codecommit:DeleteCommentContent": {
        "body": "codecommit:DeleteCommentContent",
        "description": "Add 'codecommit:DeleteCommentContent' action",
        "prefix": "codecommit:DeleteCommentContent"
    },
    "codecommit:DeleteRepository": {
        "body": "codecommit:DeleteRepository",
        "description": "Add 'codecommit:DeleteRepository' action",
        "prefix": "codecommit:DeleteRepository"
    },
    "codecommit:DescribePullRequestEvents": {
        "body": "codecommit:DescribePullRequestEvents",
        "description": "Add 'codecommit:DescribePullRequestEvents' action",
        "prefix": "codecommit:DescribePullRequestEvents"
    },
    "codecommit:GetBlob": {
        "body": "codecommit:GetBlob",
        "description": "Add 'codecommit:GetBlob' action",
        "prefix": "codecommit:GetBlob"
    },
    "codecommit:GetBranch": {
        "body": "codecommit:GetBranch",
        "description": "Add 'codecommit:GetBranch' action",
        "prefix": "codecommit:GetBranch"
    },
    "codecommit:GetComment": {
        "body": "codecommit:GetComment",
        "description": "Add 'codecommit:GetComment' action",
        "prefix": "codecommit:GetComment"
    },
    "codecommit:GetCommentsForComparedCommit": {
        "body": "codecommit:GetCommentsForComparedCommit",
        "description": "Add 'codecommit:GetCommentsForComparedCommit' action",
        "prefix": "codecommit:GetCommentsForComparedCommit"
    },
    "codecommit:GetCommentsForPullRequest": {
        "body": "codecommit:GetCommentsForPullRequest",
        "description": "Add 'codecommit:GetCommentsForPullRequest' action",
        "prefix": "codecommit:GetCommentsForPullRequest"
    },
    "codecommit:GetCommit": {
        "body": "codecommit:GetCommit",
        "description": "Add 'codecommit:GetCommit' action",
        "prefix": "codecommit:GetCommit"
    },
    "codecommit:GetCommitHistory": {
        "body": "codecommit:GetCommitHistory",
        "description": "Add 'codecommit:GetCommitHistory' action",
        "prefix": "codecommit:GetCommitHistory"
    },
    "codecommit:GetCommitsFromMergeBase": {
        "body": "codecommit:GetCommitsFromMergeBase",
        "description": "Add 'codecommit:GetCommitsFromMergeBase' action",
        "prefix": "codecommit:GetCommitsFromMergeBase"
    },
    "codecommit:GetDifferences": {
        "body": "codecommit:GetDifferences",
        "description": "Add 'codecommit:GetDifferences' action",
        "prefix": "codecommit:GetDifferences"
    },
    "codecommit:GetMergeConflicts": {
        "body": "codecommit:GetMergeConflicts",
        "description": "Add 'codecommit:GetMergeConflicts' action",
        "prefix": "codecommit:GetMergeConflicts"
    },
    "codecommit:GetObjectIdentifier": {
        "body": "codecommit:GetObjectIdentifier",
        "description": "Add 'codecommit:GetObjectIdentifier' action",
        "prefix": "codecommit:GetObjectIdentifier"
    },
    "codecommit:GetPullRequest": {
        "body": "codecommit:GetPullRequest",
        "description": "Add 'codecommit:GetPullRequest' action",
        "prefix": "codecommit:GetPullRequest"
    },
    "codecommit:GetReferences": {
        "body": "codecommit:GetReferences",
        "description": "Add 'codecommit:GetReferences' action",
        "prefix": "codecommit:GetReferences"
    },
    "codecommit:GetRepository": {
        "body": "codecommit:GetRepository",
        "description": "Add 'codecommit:GetRepository' action",
        "prefix": "codecommit:GetRepository"
    },
    "codecommit:GetRepositoryTriggers": {
        "body": "codecommit:GetRepositoryTriggers",
        "description": "Add 'codecommit:GetRepositoryTriggers' action",
        "prefix": "codecommit:GetRepositoryTriggers"
    },
    "codecommit:GetTree": {
        "body": "codecommit:GetTree",
        "description": "Add 'codecommit:GetTree' action",
        "prefix": "codecommit:GetTree"
    },
    "codecommit:GetUploadArchiveStatus": {
        "body": "codecommit:GetUploadArchiveStatus",
        "description": "Add 'codecommit:GetUploadArchiveStatus' action",
        "prefix": "codecommit:GetUploadArchiveStatus"
    },
    "codecommit:GitPull": {
        "body": "codecommit:GitPull",
        "description": "Add 'codecommit:GitPull' action",
        "prefix": "codecommit:GitPull"
    },
    "codecommit:GitPush": {
        "body": "codecommit:GitPush",
        "description": "Add 'codecommit:GitPush' action",
        "prefix": "codecommit:GitPush"
    },
    "codecommit:ListBranches": {
        "body": "codecommit:ListBranches",
        "description": "Add 'codecommit:ListBranches' action",
        "prefix": "codecommit:ListBranches"
    },
    "codecommit:ListPullRequests": {
        "body": "codecommit:ListPullRequests",
        "description": "Add 'codecommit:ListPullRequests' action",
        "prefix": "codecommit:ListPullRequests"
    },
    "codecommit:ListRepositories": {
        "body": "codecommit:ListRepositories",
        "description": "Add 'codecommit:ListRepositories' action",
        "prefix": "codecommit:ListRepositories"
    },
    "codecommit:MergePullRequestByFastForward": {
        "body": "codecommit:MergePullRequestByFastForward",
        "description": "Add 'codecommit:MergePullRequestByFastForward' action",
        "prefix": "codecommit:MergePullRequestByFastForward"
    },
    "codecommit:PostCommentForComparedCommit": {
        "body": "codecommit:PostCommentForComparedCommit",
        "description": "Add 'codecommit:PostCommentForComparedCommit' action",
        "prefix": "codecommit:PostCommentForComparedCommit"
    },
    "codecommit:PostCommentForPullRequest": {
        "body": "codecommit:PostCommentForPullRequest",
        "description": "Add 'codecommit:PostCommentForPullRequest' action",
        "prefix": "codecommit:PostCommentForPullRequest"
    },
    "codecommit:PostCommentReply": {
        "body": "codecommit:PostCommentReply",
        "description": "Add 'codecommit:PostCommentReply' action",
        "prefix": "codecommit:PostCommentReply"
    },
    "codecommit:PutFile": {
        "body": "codecommit:PutFile",
        "description": "Add 'codecommit:PutFile' action",
        "prefix": "codecommit:PutFile"
    },
    "codecommit:PutRepositoryTriggers": {
        "body": "codecommit:PutRepositoryTriggers",
        "description": "Add 'codecommit:PutRepositoryTriggers' action",
        "prefix": "codecommit:PutRepositoryTriggers"
    },
    "codecommit:TestRepositoryTriggers": {
        "body": "codecommit:TestRepositoryTriggers",
        "description": "Add 'codecommit:TestRepositoryTriggers' action",
        "prefix": "codecommit:TestRepositoryTriggers"
    },
    "codecommit:UpdateComment": {
        "body": "codecommit:UpdateComment",
        "description": "Add 'codecommit:UpdateComment' action",
        "prefix": "codecommit:UpdateComment"
    },
    "codecommit:UpdateDefaultBranch": {
        "body": "codecommit:UpdateDefaultBranch",
        "description": "Add 'codecommit:UpdateDefaultBranch' action",
        "prefix": "codecommit:UpdateDefaultBranch"
    },
    "codecommit:UpdatePullRequestDescription": {
        "body": "codecommit:UpdatePullRequestDescription",
        "description": "Add 'codecommit:UpdatePullRequestDescription' action",
        "prefix": "codecommit:UpdatePullRequestDescription"
    },
    "codecommit:UpdatePullRequestStatus": {
        "body": "codecommit:UpdatePullRequestStatus",
        "description": "Add 'codecommit:UpdatePullRequestStatus' action",
        "prefix": "codecommit:UpdatePullRequestStatus"
    },
    "codecommit:UpdatePullRequestTitle": {
        "body": "codecommit:UpdatePullRequestTitle",
        "description": "Add 'codecommit:UpdatePullRequestTitle' action",
        "prefix": "codecommit:UpdatePullRequestTitle"
    },
    "codecommit:UpdateRepositoryDescription": {
        "body": "codecommit:UpdateRepositoryDescription",
        "description": "Add 'codecommit:UpdateRepositoryDescription' action",
        "prefix": "codecommit:UpdateRepositoryDescription"
    },
    "codecommit:UpdateRepositoryName": {
        "body": "codecommit:UpdateRepositoryName",
        "description": "Add 'codecommit:UpdateRepositoryName' action",
        "prefix": "codecommit:UpdateRepositoryName"
    },
    "codecommit:UploadArchive": {
        "body": "codecommit:UploadArchive",
        "description": "Add 'codecommit:UploadArchive' action",
        "prefix": "codecommit:UploadArchive"
    },
    "codedeploy:AddTagsToOnPremisesInstances": {
        "body": "codedeploy:AddTagsToOnPremisesInstances",
        "description": "Add 'codedeploy:AddTagsToOnPremisesInstances' action",
        "prefix": "codedeploy:AddTagsToOnPremisesInstances"
    },
    "codedeploy:BatchGetApplicationRevisions": {
        "body": "codedeploy:BatchGetApplicationRevisions",
        "description": "Add 'codedeploy:BatchGetApplicationRevisions' action",
        "prefix": "codedeploy:BatchGetApplicationRevisions"
    },
    "codedeploy:BatchGetApplications": {
        "body": "codedeploy:BatchGetApplications",
        "description": "Add 'codedeploy:BatchGetApplications' action",
        "prefix": "codedeploy:BatchGetApplications"
    },
    "codedeploy:BatchGetDeploymentGroups": {
        "body": "codedeploy:BatchGetDeploymentGroups",
        "description": "Add 'codedeploy:BatchGetDeploymentGroups' action",
        "prefix": "codedeploy:BatchGetDeploymentGroups"
    },
    "codedeploy:BatchGetDeploymentInstances": {
        "body": "codedeploy:BatchGetDeploymentInstances",
        "description": "Add 'codedeploy:BatchGetDeploymentInstances' action",
        "prefix": "codedeploy:BatchGetDeploymentInstances"
    },
    "codedeploy:BatchGetDeployments": {
        "body": "codedeploy:BatchGetDeployments",
        "description": "Add 'codedeploy:BatchGetDeployments' action",
        "prefix": "codedeploy:BatchGetDeployments"
    },
    "codedeploy:BatchGetOnPremisesInstances": {
        "body": "codedeploy:BatchGetOnPremisesInstances",
        "description": "Add 'codedeploy:BatchGetOnPremisesInstances' action",
        "prefix": "codedeploy:BatchGetOnPremisesInstances"
    },
    "codedeploy:ContinueDeployment": {
        "body": "codedeploy:ContinueDeployment",
        "description": "Add 'codedeploy:ContinueDeployment' action",
        "prefix": "codedeploy:ContinueDeployment"
    },
    "codedeploy:CreateApplication": {
        "body": "codedeploy:CreateApplication",
        "description": "Add 'codedeploy:CreateApplication' action",
        "prefix": "codedeploy:CreateApplication"
    },
    "codedeploy:CreateDeployment": {
        "body": "codedeploy:CreateDeployment",
        "description": "Add 'codedeploy:CreateDeployment' action",
        "prefix": "codedeploy:CreateDeployment"
    },
    "codedeploy:CreateDeploymentConfig": {
        "body": "codedeploy:CreateDeploymentConfig",
        "description": "Add 'codedeploy:CreateDeploymentConfig' action",
        "prefix": "codedeploy:CreateDeploymentConfig"
    },
    "codedeploy:CreateDeploymentGroup": {
        "body": "codedeploy:CreateDeploymentGroup",
        "description": "Add 'codedeploy:CreateDeploymentGroup' action",
        "prefix": "codedeploy:CreateDeploymentGroup"
    },
    "codedeploy:DeleteApplication": {
        "body": "codedeploy:DeleteApplication",
        "description": "Add 'codedeploy:DeleteApplication' action",
        "prefix": "codedeploy:DeleteApplication"
    },
    "codedeploy:DeleteDeploymentConfig": {
        "body": "codedeploy:DeleteDeploymentConfig",
        "description": "Add 'codedeploy:DeleteDeploymentConfig' action",
        "prefix": "codedeploy:DeleteDeploymentConfig"
    },
    "codedeploy:DeleteDeploymentGroup": {
        "body": "codedeploy:DeleteDeploymentGroup",
        "description": "Add 'codedeploy:DeleteDeploymentGroup' action",
        "prefix": "codedeploy:DeleteDeploymentGroup"
    },
    "codedeploy:DeregisterOnPremisesInstance": {
        "body": "codedeploy:DeregisterOnPremisesInstance",
        "description": "Add 'codedeploy:DeregisterOnPremisesInstance' action",
        "prefix": "codedeploy:DeregisterOnPremisesInstance"
    },
    "codedeploy:GetApplication": {
        "body": "codedeploy:GetApplication",
        "description": "Add 'codedeploy:GetApplication' action",
        "prefix": "codedeploy:GetApplication"
    },
    "codedeploy:GetApplicationRevision": {
        "body": "codedeploy:GetApplicationRevision",
        "description": "Add 'codedeploy:GetApplicationRevision' action",
        "prefix": "codedeploy:GetApplicationRevision"
    },
    "codedeploy:GetDeployment": {
        "body": "codedeploy:GetDeployment",
        "description": "Add 'codedeploy:GetDeployment' action",
        "prefix": "codedeploy:GetDeployment"
    },
    "codedeploy:GetDeploymentConfig": {
        "body": "codedeploy:GetDeploymentConfig",
        "description": "Add 'codedeploy:GetDeploymentConfig' action",
        "prefix": "codedeploy:GetDeploymentConfig"
    },
    "codedeploy:GetDeploymentGroup": {
        "body": "codedeploy:GetDeploymentGroup",
        "description": "Add 'codedeploy:GetDeploymentGroup' action",
        "prefix": "codedeploy:GetDeploymentGroup"
    },
    "codedeploy:GetDeploymentInstance": {
        "body": "codedeploy:GetDeploymentInstance",
        "description": "Add 'codedeploy:GetDeploymentInstance' action",
        "prefix": "codedeploy:GetDeploymentInstance"
    },
    "codedeploy:GetOnPremisesInstance": {
        "body": "codedeploy:GetOnPremisesInstance",
        "description": "Add 'codedeploy:GetOnPremisesInstance' action",
        "prefix": "codedeploy:GetOnPremisesInstance"
    },
    "codedeploy:ListApplicationRevisions": {
        "body": "codedeploy:ListApplicationRevisions",
        "description": "Add 'codedeploy:ListApplicationRevisions' action",
        "prefix": "codedeploy:ListApplicationRevisions"
    },
    "codedeploy:ListApplications": {
        "body": "codedeploy:ListApplications",
        "description": "Add 'codedeploy:ListApplications' action",
        "prefix": "codedeploy:ListApplications"
    },
    "codedeploy:ListDeploymentConfigs": {
        "body": "codedeploy:ListDeploymentConfigs",
        "description": "Add 'codedeploy:ListDeploymentConfigs' action",
        "prefix": "codedeploy:ListDeploymentConfigs"
    },
    "codedeploy:ListDeploymentGroups": {
        "body": "codedeploy:ListDeploymentGroups",
        "description": "Add 'codedeploy:ListDeploymentGroups' action",
        "prefix": "codedeploy:ListDeploymentGroups"
    },
    "codedeploy:ListDeploymentInstances": {
        "body": "codedeploy:ListDeploymentInstances",
        "description": "Add 'codedeploy:ListDeploymentInstances' action",
        "prefix": "codedeploy:ListDeploymentInstances"
    },
    "codedeploy:ListDeployments": {
        "body": "codedeploy:ListDeployments",
        "description": "Add 'codedeploy:ListDeployments' action",
        "prefix": "codedeploy:ListDeployments"
    },
    "codedeploy:ListOnPremisesInstances": {
        "body": "codedeploy:ListOnPremisesInstances",
        "description": "Add 'codedeploy:ListOnPremisesInstances' action",
        "prefix": "codedeploy:ListOnPremisesInstances"
    },
    "codedeploy:RegisterApplicationRevision": {
        "body": "codedeploy:RegisterApplicationRevision",
        "description": "Add 'codedeploy:RegisterApplicationRevision' action",
        "prefix": "codedeploy:RegisterApplicationRevision"
    },
    "codedeploy:RegisterOnPremisesInstance": {
        "body": "codedeploy:RegisterOnPremisesInstance",
        "description": "Add 'codedeploy:RegisterOnPremisesInstance' action",
        "prefix": "codedeploy:RegisterOnPremisesInstance"
    },
    "codedeploy:RemoveTagsFromOnPremisesInstances": {
        "body": "codedeploy:RemoveTagsFromOnPremisesInstances",
        "description": "Add 'codedeploy:RemoveTagsFromOnPremisesInstances' action",
        "prefix": "codedeploy:RemoveTagsFromOnPremisesInstances"
    },
    "codedeploy:StopDeployment": {
        "body": "codedeploy:StopDeployment",
        "description": "Add 'codedeploy:StopDeployment' action",
        "prefix": "codedeploy:StopDeployment"
    },
    "codedeploy:UpdateApplication": {
        "body": "codedeploy:UpdateApplication",
        "description": "Add 'codedeploy:UpdateApplication' action",
        "prefix": "codedeploy:UpdateApplication"
    },
    "codedeploy:UpdateDeploymentGroup": {
        "body": "codedeploy:UpdateDeploymentGroup",
        "description": "Add 'codedeploy:UpdateDeploymentGroup' action",
        "prefix": "codedeploy:UpdateDeploymentGroup"
    },
    "codepipeline:AcknowledgeJob": {
        "body": "codepipeline:AcknowledgeJob",
        "description": "Add 'codepipeline:AcknowledgeJob' action",
        "prefix": "codepipeline:AcknowledgeJob"
    },
    "codepipeline:AcknowledgeThirdPartyJob": {
        "body": "codepipeline:AcknowledgeThirdPartyJob",
        "description": "Add 'codepipeline:AcknowledgeThirdPartyJob' action",
        "prefix": "codepipeline:AcknowledgeThirdPartyJob"
    },
    "codepipeline:CreateCustomActionType": {
        "body": "codepipeline:CreateCustomActionType",
        "description": "Add 'codepipeline:CreateCustomActionType' action",
        "prefix": "codepipeline:CreateCustomActionType"
    },
    "codepipeline:CreatePipeline": {
        "body": "codepipeline:CreatePipeline",
        "description": "Add 'codepipeline:CreatePipeline' action",
        "prefix": "codepipeline:CreatePipeline"
    },
    "codepipeline:DeleteCustomActionType": {
        "body": "codepipeline:DeleteCustomActionType",
        "description": "Add 'codepipeline:DeleteCustomActionType' action",
        "prefix": "codepipeline:DeleteCustomActionType"
    },
    "codepipeline:DeletePipeline": {
        "body": "codepipeline:DeletePipeline",
        "description": "Add 'codepipeline:DeletePipeline' action",
        "prefix": "codepipeline:DeletePipeline"
    },
    "codepipeline:DisableStageTransition": {
        "body": "codepipeline:DisableStageTransition",
        "description": "Add 'codepipeline:DisableStageTransition' action",
        "prefix": "codepipeline:DisableStageTransition"
    },
    "codepipeline:EnableStageTransition": {
        "body": "codepipeline:EnableStageTransition",
        "description": "Add 'codepipeline:EnableStageTransition' action",
        "prefix": "codepipeline:EnableStageTransition"
    },
    "codepipeline:GetJobDetails": {
        "body": "codepipeline:GetJobDetails",
        "description": "Add 'codepipeline:GetJobDetails' action",
        "prefix": "codepipeline:GetJobDetails"
    },
    "codepipeline:GetPipeline": {
        "body": "codepipeline:GetPipeline",
        "description": "Add 'codepipeline:GetPipeline' action",
        "prefix": "codepipeline:GetPipeline"
    },
    "codepipeline:GetPipelineExecution": {
        "body": "codepipeline:GetPipelineExecution",
        "description": "Add 'codepipeline:GetPipelineExecution' action",
        "prefix": "codepipeline:GetPipelineExecution"
    },
    "codepipeline:GetPipelineState": {
        "body": "codepipeline:GetPipelineState",
        "description": "Add 'codepipeline:GetPipelineState' action",
        "prefix": "codepipeline:GetPipelineState"
    },
    "codepipeline:GetThirdPartyJobDetails": {
        "body": "codepipeline:GetThirdPartyJobDetails",
        "description": "Add 'codepipeline:GetThirdPartyJobDetails' action",
        "prefix": "codepipeline:GetThirdPartyJobDetails"
    },
    "codepipeline:ListActionTypes": {
        "body": "codepipeline:ListActionTypes",
        "description": "Add 'codepipeline:ListActionTypes' action",
        "prefix": "codepipeline:ListActionTypes"
    },
    "codepipeline:ListPipelineExecutions": {
        "body": "codepipeline:ListPipelineExecutions",
        "description": "Add 'codepipeline:ListPipelineExecutions' action",
        "prefix": "codepipeline:ListPipelineExecutions"
    },
    "codepipeline:ListPipelines": {
        "body": "codepipeline:ListPipelines",
        "description": "Add 'codepipeline:ListPipelines' action",
        "prefix": "codepipeline:ListPipelines"
    },
    "codepipeline:PollForJobs": {
        "body": "codepipeline:PollForJobs",
        "description": "Add 'codepipeline:PollForJobs' action",
        "prefix": "codepipeline:PollForJobs"
    },
    "codepipeline:PollForThirdPartyJobs": {
        "body": "codepipeline:PollForThirdPartyJobs",
        "description": "Add 'codepipeline:PollForThirdPartyJobs' action",
        "prefix": "codepipeline:PollForThirdPartyJobs"
    },
    "codepipeline:PutActionRevision": {
        "body": "codepipeline:PutActionRevision",
        "description": "Add 'codepipeline:PutActionRevision' action",
        "prefix": "codepipeline:PutActionRevision"
    },
    "codepipeline:PutApprovalResult": {
        "body": "codepipeline:PutApprovalResult",
        "description": "Add 'codepipeline:PutApprovalResult' action",
        "prefix": "codepipeline:PutApprovalResult"
    },
    "codepipeline:PutJobFailureResult": {
        "body": "codepipeline:PutJobFailureResult",
        "description": "Add 'codepipeline:PutJobFailureResult' action",
        "prefix": "codepipeline:PutJobFailureResult"
    },
    "codepipeline:PutJobSuccessResult": {
        "body": "codepipeline:PutJobSuccessResult",
        "description": "Add 'codepipeline:PutJobSuccessResult' action",
        "prefix": "codepipeline:PutJobSuccessResult"
    },
    "codepipeline:PutThirdPartyJobFailureResult": {
        "body": "codepipeline:PutThirdPartyJobFailureResult",
        "description": "Add 'codepipeline:PutThirdPartyJobFailureResult' action",
        "prefix": "codepipeline:PutThirdPartyJobFailureResult"
    },
    "codepipeline:PutThirdPartyJobSuccessResult": {
        "body": "codepipeline:PutThirdPartyJobSuccessResult",
        "description": "Add 'codepipeline:PutThirdPartyJobSuccessResult' action",
        "prefix": "codepipeline:PutThirdPartyJobSuccessResult"
    },
    "codepipeline:RetryStageExecution": {
        "body": "codepipeline:RetryStageExecution",
        "description": "Add 'codepipeline:RetryStageExecution' action",
        "prefix": "codepipeline:RetryStageExecution"
    },
    "codepipeline:StartPipelineExecution": {
        "body": "codepipeline:StartPipelineExecution",
        "description": "Add 'codepipeline:StartPipelineExecution' action",
        "prefix": "codepipeline:StartPipelineExecution"
    },
    "codepipeline:UpdatePipeline": {
        "body": "codepipeline:UpdatePipeline",
        "description": "Add 'codepipeline:UpdatePipeline' action",
        "prefix": "codepipeline:UpdatePipeline"
    },
    "codestar:AssociateTeamMember": {
        "body": "codestar:AssociateTeamMember",
        "description": "Add 'codestar:AssociateTeamMember' action",
        "prefix": "codestar:AssociateTeamMember"
    },
    "codestar:CreateProject": {
        "body": "codestar:CreateProject",
        "description": "Add 'codestar:CreateProject' action",
        "prefix": "codestar:CreateProject"
    },
    "codestar:CreateUserProfile": {
        "body": "codestar:CreateUserProfile",
        "description": "Add 'codestar:CreateUserProfile' action",
        "prefix": "codestar:CreateUserProfile"
    },
    "codestar:DeleteExtendedAccess": {
        "body": "codestar:DeleteExtendedAccess",
        "description": "Add 'codestar:DeleteExtendedAccess' action",
        "prefix": "codestar:DeleteExtendedAccess"
    },
    "codestar:DeleteProject": {
        "body": "codestar:DeleteProject",
        "description": "Add 'codestar:DeleteProject' action",
        "prefix": "codestar:DeleteProject"
    },
    "codestar:DeleteUserProfile": {
        "body": "codestar:DeleteUserProfile",
        "description": "Add 'codestar:DeleteUserProfile' action",
        "prefix": "codestar:DeleteUserProfile"
    },
    "codestar:DescribeProject": {
        "body": "codestar:DescribeProject",
        "description": "Add 'codestar:DescribeProject' action",
        "prefix": "codestar:DescribeProject"
    },
    "codestar:DescribeUserProfile": {
        "body": "codestar:DescribeUserProfile",
        "description": "Add 'codestar:DescribeUserProfile' action",
        "prefix": "codestar:DescribeUserProfile"
    },
    "codestar:DisassociateTeamMember": {
        "body": "codestar:DisassociateTeamMember",
        "description": "Add 'codestar:DisassociateTeamMember' action",
        "prefix": "codestar:DisassociateTeamMember"
    },
    "codestar:GetExtendedAccess": {
        "body": "codestar:GetExtendedAccess",
        "description": "Add 'codestar:GetExtendedAccess' action",
        "prefix": "codestar:GetExtendedAccess"
    },
    "codestar:ListProjects": {
        "body": "codestar:ListProjects",
        "description": "Add 'codestar:ListProjects' action",
        "prefix": "codestar:ListProjects"
    },
    "codestar:ListResources": {
        "body": "codestar:ListResources",
        "description": "Add 'codestar:ListResources' action",
        "prefix": "codestar:ListResources"
    },
    "codestar:ListTeamMembers": {
        "body": "codestar:ListTeamMembers",
        "description": "Add 'codestar:ListTeamMembers' action",
        "prefix": "codestar:ListTeamMembers"
    },
    "codestar:ListUserProfiles": {
        "body": "codestar:ListUserProfiles",
        "description": "Add 'codestar:ListUserProfiles' action",
        "prefix": "codestar:ListUserProfiles"
    },
    "codestar:PutExtendedAccess": {
        "body": "codestar:PutExtendedAccess",
        "description": "Add 'codestar:PutExtendedAccess' action",
        "prefix": "codestar:PutExtendedAccess"
    },
    "codestar:UpdateProject": {
        "body": "codestar:UpdateProject",
        "description": "Add 'codestar:UpdateProject' action",
        "prefix": "codestar:UpdateProject"
    },
    "codestar:UpdateTeamMember": {
        "body": "codestar:UpdateTeamMember",
        "description": "Add 'codestar:UpdateTeamMember' action",
        "prefix": "codestar:UpdateTeamMember"
    },
    "codestar:UpdateUserProfile": {
        "body": "codestar:UpdateUserProfile",
        "description": "Add 'codestar:UpdateUserProfile' action",
        "prefix": "codestar:UpdateUserProfile"
    },
    "codestar:VerifyServiceRole": {
        "body": "codestar:VerifyServiceRole",
        "description": "Add 'codestar:VerifyServiceRole' action",
        "prefix": "codestar:VerifyServiceRole"
    },
    "cognito-identity:CreateIdentityPool": {
        "body": "cognito-identity:CreateIdentityPool",
        "description": "Add 'cognito-identity:CreateIdentityPool' action",
        "prefix": "cognito-identity:CreateIdentityPool"
    },
    "cognito-identity:DeleteIdentities": {
        "body": "cognito-identity:DeleteIdentities",
        "description": "Add 'cognito-identity:DeleteIdentities' action",
        "prefix": "cognito-identity:DeleteIdentities"
    },
    "cognito-identity:DeleteIdentityPool": {
        "body": "cognito-identity:DeleteIdentityPool",
        "description": "Add 'cognito-identity:DeleteIdentityPool' action",
        "prefix": "cognito-identity:DeleteIdentityPool"
    },
    "cognito-identity:DescribeIdentity": {
        "body": "cognito-identity:DescribeIdentity",
        "description": "Add 'cognito-identity:DescribeIdentity' action",
        "prefix": "cognito-identity:DescribeIdentity"
    },
    "cognito-identity:DescribeIdentityPool": {
        "body": "cognito-identity:DescribeIdentityPool",
        "description": "Add 'cognito-identity:DescribeIdentityPool' action",
        "prefix": "cognito-identity:DescribeIdentityPool"
    },
    "cognito-identity:GetCredentialsForIdentity": {
        "body": "cognito-identity:GetCredentialsForIdentity",
        "description": "Add 'cognito-identity:GetCredentialsForIdentity' action",
        "prefix": "cognito-identity:GetCredentialsForIdentity"
    },
    "cognito-identity:GetId": {
        "body": "cognito-identity:GetId",
        "description": "Add 'cognito-identity:GetId' action",
        "prefix": "cognito-identity:GetId"
    },
    "cognito-identity:GetIdentityPoolRoles": {
        "body": "cognito-identity:GetIdentityPoolRoles",
        "description": "Add 'cognito-identity:GetIdentityPoolRoles' action",
        "prefix": "cognito-identity:GetIdentityPoolRoles"
    },
    "cognito-identity:GetOpenIdToken": {
        "body": "cognito-identity:GetOpenIdToken",
        "description": "Add 'cognito-identity:GetOpenIdToken' action",
        "prefix": "cognito-identity:GetOpenIdToken"
    },
    "cognito-identity:GetOpenIdTokenForDeveloperIdentity": {
        "body": "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
        "description": "Add 'cognito-identity:GetOpenIdTokenForDeveloperIdentity' action",
        "prefix": "cognito-identity:GetOpenIdTokenForDeveloperIdentity"
    },
    "cognito-identity:ListIdentities": {
        "body": "cognito-identity:ListIdentities",
        "description": "Add 'cognito-identity:ListIdentities' action",
        "prefix": "cognito-identity:ListIdentities"
    },
    "cognito-identity:ListIdentityPools": {
        "body": "cognito-identity:ListIdentityPools",
        "description": "Add 'cognito-identity:ListIdentityPools' action",
        "prefix": "cognito-identity:ListIdentityPools"
    },
    "cognito-identity:LookupDeveloperIdentity": {
        "body": "cognito-identity:LookupDeveloperIdentity",
        "description": "Add 'cognito-identity:LookupDeveloperIdentity' action",
        "prefix": "cognito-identity:LookupDeveloperIdentity"
    },
    "cognito-identity:MergeDeveloperIdentities": {
        "body": "cognito-identity:MergeDeveloperIdentities",
        "description": "Add 'cognito-identity:MergeDeveloperIdentities' action",
        "prefix": "cognito-identity:MergeDeveloperIdentities"
    },
    "cognito-identity:SetIdentityPoolRoles": {
        "body": "cognito-identity:SetIdentityPoolRoles",
        "description": "Add 'cognito-identity:SetIdentityPoolRoles' action",
        "prefix": "cognito-identity:SetIdentityPoolRoles"
    },
    "cognito-identity:UnlinkDeveloperIdentity": {
        "body": "cognito-identity:UnlinkDeveloperIdentity",
        "description": "Add 'cognito-identity:UnlinkDeveloperIdentity' action",
        "prefix": "cognito-identity:UnlinkDeveloperIdentity"
    },
    "cognito-identity:UnlinkIdentity": {
        "body": "cognito-identity:UnlinkIdentity",
        "description": "Add 'cognito-identity:UnlinkIdentity' action",
        "prefix": "cognito-identity:UnlinkIdentity"
    },
    "cognito-identity:UpdateIdentityPool": {
        "body": "cognito-identity:UpdateIdentityPool",
        "description": "Add 'cognito-identity:UpdateIdentityPool' action",
        "prefix": "cognito-identity:UpdateIdentityPool"
    },
    "cognito-idp:AddCustomAttributes": {
        "body": "cognito-idp:AddCustomAttributes",
        "description": "Add 'cognito-idp:AddCustomAttributes' action",
        "prefix": "cognito-idp:AddCustomAttributes"
    },
    "cognito-idp:AdminAddUserToGroup": {
        "body": "cognito-idp:AdminAddUserToGroup",
        "description": "Add 'cognito-idp:AdminAddUserToGroup' action",
        "prefix": "cognito-idp:AdminAddUserToGroup"
    },
    "cognito-idp:AdminConfirmSignUp": {
        "body": "cognito-idp:AdminConfirmSignUp",
        "description": "Add 'cognito-idp:AdminConfirmSignUp' action",
        "prefix": "cognito-idp:AdminConfirmSignUp"
    },
    "cognito-idp:AdminCreateUser": {
        "body": "cognito-idp:AdminCreateUser",
        "description": "Add 'cognito-idp:AdminCreateUser' action",
        "prefix": "cognito-idp:AdminCreateUser"
    },
    "cognito-idp:AdminDeleteUser": {
        "body": "cognito-idp:AdminDeleteUser",
        "description": "Add 'cognito-idp:AdminDeleteUser' action",
        "prefix": "cognito-idp:AdminDeleteUser"
    },
    "cognito-idp:AdminDeleteUserAttributes": {
        "body": "cognito-idp:AdminDeleteUserAttributes",
        "description": "Add 'cognito-idp:AdminDeleteUserAttributes' action",
        "prefix": "cognito-idp:AdminDeleteUserAttributes"
    },
    "cognito-idp:AdminDisableUser": {
        "body": "cognito-idp:AdminDisableUser",
        "description": "Add 'cognito-idp:AdminDisableUser' action",
        "prefix": "cognito-idp:AdminDisableUser"
    },
    "cognito-idp:AdminEnableUser": {
        "body": "cognito-idp:AdminEnableUser",
        "description": "Add 'cognito-idp:AdminEnableUser' action",
        "prefix": "cognito-idp:AdminEnableUser"
    },
    "cognito-idp:AdminForgetDevice": {
        "body": "cognito-idp:AdminForgetDevice",
        "description": "Add 'cognito-idp:AdminForgetDevice' action",
        "prefix": "cognito-idp:AdminForgetDevice"
    },
    "cognito-idp:AdminGetDevice": {
        "body": "cognito-idp:AdminGetDevice",
        "description": "Add 'cognito-idp:AdminGetDevice' action",
        "prefix": "cognito-idp:AdminGetDevice"
    },
    "cognito-idp:AdminGetUser": {
        "body": "cognito-idp:AdminGetUser",
        "description": "Add 'cognito-idp:AdminGetUser' action",
        "prefix": "cognito-idp:AdminGetUser"
    },
    "cognito-idp:AdminInitiateAuth": {
        "body": "cognito-idp:AdminInitiateAuth",
        "description": "Add 'cognito-idp:AdminInitiateAuth' action",
        "prefix": "cognito-idp:AdminInitiateAuth"
    },
    "cognito-idp:AdminListDevices": {
        "body": "cognito-idp:AdminListDevices",
        "description": "Add 'cognito-idp:AdminListDevices' action",
        "prefix": "cognito-idp:AdminListDevices"
    },
    "cognito-idp:AdminListGroupsForUser": {
        "body": "cognito-idp:AdminListGroupsForUser",
        "description": "Add 'cognito-idp:AdminListGroupsForUser' action",
        "prefix": "cognito-idp:AdminListGroupsForUser"
    },
    "cognito-idp:AdminListUserAuthEvents": {
        "body": "cognito-idp:AdminListUserAuthEvents",
        "description": "Add 'cognito-idp:AdminListUserAuthEvents' action",
        "prefix": "cognito-idp:AdminListUserAuthEvents"
    },
    "cognito-idp:AdminRemoveUserFromGroup": {
        "body": "cognito-idp:AdminRemoveUserFromGroup",
        "description": "Add 'cognito-idp:AdminRemoveUserFromGroup' action",
        "prefix": "cognito-idp:AdminRemoveUserFromGroup"
    },
    "cognito-idp:AdminResetUserPassword": {
        "body": "cognito-idp:AdminResetUserPassword",
        "description": "Add 'cognito-idp:AdminResetUserPassword' action",
        "prefix": "cognito-idp:AdminResetUserPassword"
    },
    "cognito-idp:AdminRespondToAuthChallenge": {
        "body": "cognito-idp:AdminRespondToAuthChallenge",
        "description": "Add 'cognito-idp:AdminRespondToAuthChallenge' action",
        "prefix": "cognito-idp:AdminRespondToAuthChallenge"
    },
    "cognito-idp:AdminSetUserMFAPreference": {
        "body": "cognito-idp:AdminSetUserMFAPreference",
        "description": "Add 'cognito-idp:AdminSetUserMFAPreference' action",
        "prefix": "cognito-idp:AdminSetUserMFAPreference"
    },
    "cognito-idp:AdminSetUserSettings": {
        "body": "cognito-idp:AdminSetUserSettings",
        "description": "Add 'cognito-idp:AdminSetUserSettings' action",
        "prefix": "cognito-idp:AdminSetUserSettings"
    },
    "cognito-idp:AdminUpdateAuthEventFeedback": {
        "body": "cognito-idp:AdminUpdateAuthEventFeedback",
        "description": "Add 'cognito-idp:AdminUpdateAuthEventFeedback' action",
        "prefix": "cognito-idp:AdminUpdateAuthEventFeedback"
    },
    "cognito-idp:AdminUpdateDeviceStatus": {
        "body": "cognito-idp:AdminUpdateDeviceStatus",
        "description": "Add 'cognito-idp:AdminUpdateDeviceStatus' action",
        "prefix": "cognito-idp:AdminUpdateDeviceStatus"
    },
    "cognito-idp:AdminUpdateUserAttributes": {
        "body": "cognito-idp:AdminUpdateUserAttributes",
        "description": "Add 'cognito-idp:AdminUpdateUserAttributes' action",
        "prefix": "cognito-idp:AdminUpdateUserAttributes"
    },
    "cognito-idp:AdminUserGlobalSignOut": {
        "body": "cognito-idp:AdminUserGlobalSignOut",
        "description": "Add 'cognito-idp:AdminUserGlobalSignOut' action",
        "prefix": "cognito-idp:AdminUserGlobalSignOut"
    },
    "cognito-idp:ChangePassword": {
        "body": "cognito-idp:ChangePassword",
        "description": "Add 'cognito-idp:ChangePassword' action",
        "prefix": "cognito-idp:ChangePassword"
    },
    "cognito-idp:ConfirmDevice": {
        "body": "cognito-idp:ConfirmDevice",
        "description": "Add 'cognito-idp:ConfirmDevice' action",
        "prefix": "cognito-idp:ConfirmDevice"
    },
    "cognito-idp:ConfirmForgotPassword": {
        "body": "cognito-idp:ConfirmForgotPassword",
        "description": "Add 'cognito-idp:ConfirmForgotPassword' action",
        "prefix": "cognito-idp:ConfirmForgotPassword"
    },
    "cognito-idp:ConfirmSignUp": {
        "body": "cognito-idp:ConfirmSignUp",
        "description": "Add 'cognito-idp:ConfirmSignUp' action",
        "prefix": "cognito-idp:ConfirmSignUp"
    },
    "cognito-idp:CreateGroup": {
        "body": "cognito-idp:CreateGroup",
        "description": "Add 'cognito-idp:CreateGroup' action",
        "prefix": "cognito-idp:CreateGroup"
    },
    "cognito-idp:CreateUserImportJob": {
        "body": "cognito-idp:CreateUserImportJob",
        "description": "Add 'cognito-idp:CreateUserImportJob' action",
        "prefix": "cognito-idp:CreateUserImportJob"
    },
    "cognito-idp:CreateUserPool": {
        "body": "cognito-idp:CreateUserPool",
        "description": "Add 'cognito-idp:CreateUserPool' action",
        "prefix": "cognito-idp:CreateUserPool"
    },
    "cognito-idp:CreateUserPoolClient": {
        "body": "cognito-idp:CreateUserPoolClient",
        "description": "Add 'cognito-idp:CreateUserPoolClient' action",
        "prefix": "cognito-idp:CreateUserPoolClient"
    },
    "cognito-idp:DeleteGroup": {
        "body": "cognito-idp:DeleteGroup",
        "description": "Add 'cognito-idp:DeleteGroup' action",
        "prefix": "cognito-idp:DeleteGroup"
    },
    "cognito-idp:DeleteUser": {
        "body": "cognito-idp:DeleteUser",
        "description": "Add 'cognito-idp:DeleteUser' action",
        "prefix": "cognito-idp:DeleteUser"
    },
    "cognito-idp:DeleteUserAttributes": {
        "body": "cognito-idp:DeleteUserAttributes",
        "description": "Add 'cognito-idp:DeleteUserAttributes' action",
        "prefix": "cognito-idp:DeleteUserAttributes"
    },
    "cognito-idp:DeleteUserPool": {
        "body": "cognito-idp:DeleteUserPool",
        "description": "Add 'cognito-idp:DeleteUserPool' action",
        "prefix": "cognito-idp:DeleteUserPool"
    },
    "cognito-idp:DeleteUserPoolClient": {
        "body": "cognito-idp:DeleteUserPoolClient",
        "description": "Add 'cognito-idp:DeleteUserPoolClient' action",
        "prefix": "cognito-idp:DeleteUserPoolClient"
    },
    "cognito-idp:DescribeRiskConfiguration": {
        "body": "cognito-idp:DescribeRiskConfiguration",
        "description": "Add 'cognito-idp:DescribeRiskConfiguration' action",
        "prefix": "cognito-idp:DescribeRiskConfiguration"
    },
    "cognito-idp:DescribeUserImportJob": {
        "body": "cognito-idp:DescribeUserImportJob",
        "description": "Add 'cognito-idp:DescribeUserImportJob' action",
        "prefix": "cognito-idp:DescribeUserImportJob"
    },
    "cognito-idp:DescribeUserPool": {
        "body": "cognito-idp:DescribeUserPool",
        "description": "Add 'cognito-idp:DescribeUserPool' action",
        "prefix": "cognito-idp:DescribeUserPool"
    },
    "cognito-idp:DescribeUserPoolClient": {
        "body": "cognito-idp:DescribeUserPoolClient",
        "description": "Add 'cognito-idp:DescribeUserPoolClient' action",
        "prefix": "cognito-idp:DescribeUserPoolClient"
    },
    "cognito-idp:ForgetDevice": {
        "body": "cognito-idp:ForgetDevice",
        "description": "Add 'cognito-idp:ForgetDevice' action",
        "prefix": "cognito-idp:ForgetDevice"
    },
    "cognito-idp:ForgotPassword": {
        "body": "cognito-idp:ForgotPassword",
        "description": "Add 'cognito-idp:ForgotPassword' action",
        "prefix": "cognito-idp:ForgotPassword"
    },
    "cognito-idp:GetCSVHeader": {
        "body": "cognito-idp:GetCSVHeader",
        "description": "Add 'cognito-idp:GetCSVHeader' action",
        "prefix": "cognito-idp:GetCSVHeader"
    },
    "cognito-idp:GetDevice": {
        "body": "cognito-idp:GetDevice",
        "description": "Add 'cognito-idp:GetDevice' action",
        "prefix": "cognito-idp:GetDevice"
    },
    "cognito-idp:GetGroup": {
        "body": "cognito-idp:GetGroup",
        "description": "Add 'cognito-idp:GetGroup' action",
        "prefix": "cognito-idp:GetGroup"
    },
    "cognito-idp:GetUser": {
        "body": "cognito-idp:GetUser",
        "description": "Add 'cognito-idp:GetUser' action",
        "prefix": "cognito-idp:GetUser"
    },
    "cognito-idp:GetUserAttributeVerificationCode": {
        "body": "cognito-idp:GetUserAttributeVerificationCode",
        "description": "Add 'cognito-idp:GetUserAttributeVerificationCode' action",
        "prefix": "cognito-idp:GetUserAttributeVerificationCode"
    },
    "cognito-idp:GetUserPoolMfaConfig": {
        "body": "cognito-idp:GetUserPoolMfaConfig",
        "description": "Add 'cognito-idp:GetUserPoolMfaConfig' action",
        "prefix": "cognito-idp:GetUserPoolMfaConfig"
    },
    "cognito-idp:GlobalSignOut": {
        "body": "cognito-idp:GlobalSignOut",
        "description": "Add 'cognito-idp:GlobalSignOut' action",
        "prefix": "cognito-idp:GlobalSignOut"
    },
    "cognito-idp:InitiateAuth": {
        "body": "cognito-idp:InitiateAuth",
        "description": "Add 'cognito-idp:InitiateAuth' action",
        "prefix": "cognito-idp:InitiateAuth"
    },
    "cognito-idp:ListDevices": {
        "body": "cognito-idp:ListDevices",
        "description": "Add 'cognito-idp:ListDevices' action",
        "prefix": "cognito-idp:ListDevices"
    },
    "cognito-idp:ListGroups": {
        "body": "cognito-idp:ListGroups",
        "description": "Add 'cognito-idp:ListGroups' action",
        "prefix": "cognito-idp:ListGroups"
    },
    "cognito-idp:ListUserImportJobs": {
        "body": "cognito-idp:ListUserImportJobs",
        "description": "Add 'cognito-idp:ListUserImportJobs' action",
        "prefix": "cognito-idp:ListUserImportJobs"
    },
    "cognito-idp:ListUserPoolClients": {
        "body": "cognito-idp:ListUserPoolClients",
        "description": "Add 'cognito-idp:ListUserPoolClients' action",
        "prefix": "cognito-idp:ListUserPoolClients"
    },
    "cognito-idp:ListUsersInGroup": {
        "body": "cognito-idp:ListUsersInGroup",
        "description": "Add 'cognito-idp:ListUsersInGroup' action",
        "prefix": "cognito-idp:ListUsersInGroup"
    },
    "cognito-idp:ResendConfirmationCode": {
        "body": "cognito-idp:ResendConfirmationCode",
        "description": "Add 'cognito-idp:ResendConfirmationCode' action",
        "prefix": "cognito-idp:ResendConfirmationCode"
    },
    "cognito-idp:RespondToAuthChallenge": {
        "body": "cognito-idp:RespondToAuthChallenge",
        "description": "Add 'cognito-idp:RespondToAuthChallenge' action",
        "prefix": "cognito-idp:RespondToAuthChallenge"
    },
    "cognito-idp:SetRiskConfiguration": {
        "body": "cognito-idp:SetRiskConfiguration",
        "description": "Add 'cognito-idp:SetRiskConfiguration' action",
        "prefix": "cognito-idp:SetRiskConfiguration"
    },
    "cognito-idp:SetUserMFAPreference": {
        "body": "cognito-idp:SetUserMFAPreference",
        "description": "Add 'cognito-idp:SetUserMFAPreference' action",
        "prefix": "cognito-idp:SetUserMFAPreference"
    },
    "cognito-idp:SetUserPoolMfaConfig": {
        "body": "cognito-idp:SetUserPoolMfaConfig",
        "description": "Add 'cognito-idp:SetUserPoolMfaConfig' action",
        "prefix": "cognito-idp:SetUserPoolMfaConfig"
    },
    "cognito-idp:SetUserSettings": {
        "body": "cognito-idp:SetUserSettings",
        "description": "Add 'cognito-idp:SetUserSettings' action",
        "prefix": "cognito-idp:SetUserSettings"
    },
    "cognito-idp:SignUp": {
        "body": "cognito-idp:SignUp",
        "description": "Add 'cognito-idp:SignUp' action",
        "prefix": "cognito-idp:SignUp"
    },
    "cognito-idp:StartUserImportJob": {
        "body": "cognito-idp:StartUserImportJob",
        "description": "Add 'cognito-idp:StartUserImportJob' action",
        "prefix": "cognito-idp:StartUserImportJob"
    },
    "cognito-idp:StopUserImportJob": {
        "body": "cognito-idp:StopUserImportJob",
        "description": "Add 'cognito-idp:StopUserImportJob' action",
        "prefix": "cognito-idp:StopUserImportJob"
    },
    "cognito-idp:UpdateAuthEventFeedback": {
        "body": "cognito-idp:UpdateAuthEventFeedback",
        "description": "Add 'cognito-idp:UpdateAuthEventFeedback' action",
        "prefix": "cognito-idp:UpdateAuthEventFeedback"
    },
    "cognito-idp:UpdateDeviceStatus": {
        "body": "cognito-idp:UpdateDeviceStatus",
        "description": "Add 'cognito-idp:UpdateDeviceStatus' action",
        "prefix": "cognito-idp:UpdateDeviceStatus"
    },
    "cognito-idp:UpdateGroup": {
        "body": "cognito-idp:UpdateGroup",
        "description": "Add 'cognito-idp:UpdateGroup' action",
        "prefix": "cognito-idp:UpdateGroup"
    },
    "cognito-idp:UpdateUserAttributes": {
        "body": "cognito-idp:UpdateUserAttributes",
        "description": "Add 'cognito-idp:UpdateUserAttributes' action",
        "prefix": "cognito-idp:UpdateUserAttributes"
    },
    "cognito-idp:UpdateUserPool": {
        "body": "cognito-idp:UpdateUserPool",
        "description": "Add 'cognito-idp:UpdateUserPool' action",
        "prefix": "cognito-idp:UpdateUserPool"
    },
    "cognito-idp:UpdateUserPoolClient": {
        "body": "cognito-idp:UpdateUserPoolClient",
        "description": "Add 'cognito-idp:UpdateUserPoolClient' action",
        "prefix": "cognito-idp:UpdateUserPoolClient"
    },
    "cognito-idp:VerifyUserAttribute": {
        "body": "cognito-idp:VerifyUserAttribute",
        "description": "Add 'cognito-idp:VerifyUserAttribute' action",
        "prefix": "cognito-idp:VerifyUserAttribute"
    },
    "cognito-sync:BulkPublish": {
        "body": "cognito-sync:BulkPublish",
        "description": "Add 'cognito-sync:BulkPublish' action",
        "prefix": "cognito-sync:BulkPublish"
    },
    "cognito-sync:DeleteDataset": {
        "body": "cognito-sync:DeleteDataset",
        "description": "Add 'cognito-sync:DeleteDataset' action",
        "prefix": "cognito-sync:DeleteDataset"
    },
    "cognito-sync:DescribeDataset": {
        "body": "cognito-sync:DescribeDataset",
        "description": "Add 'cognito-sync:DescribeDataset' action",
        "prefix": "cognito-sync:DescribeDataset"
    },
    "cognito-sync:DescribeIdentityPoolUsage": {
        "body": "cognito-sync:DescribeIdentityPoolUsage",
        "description": "Add 'cognito-sync:DescribeIdentityPoolUsage' action",
        "prefix": "cognito-sync:DescribeIdentityPoolUsage"
    },
    "cognito-sync:DescribeIdentityUsage": {
        "body": "cognito-sync:DescribeIdentityUsage",
        "description": "Add 'cognito-sync:DescribeIdentityUsage' action",
        "prefix": "cognito-sync:DescribeIdentityUsage"
    },
    "cognito-sync:GetBulkPublishDetails": {
        "body": "cognito-sync:GetBulkPublishDetails",
        "description": "Add 'cognito-sync:GetBulkPublishDetails' action",
        "prefix": "cognito-sync:GetBulkPublishDetails"
    },
    "cognito-sync:GetCognitoEvents": {
        "body": "cognito-sync:GetCognitoEvents",
        "description": "Add 'cognito-sync:GetCognitoEvents' action",
        "prefix": "cognito-sync:GetCognitoEvents"
    },
    "cognito-sync:GetIdentityPoolConfiguration": {
        "body": "cognito-sync:GetIdentityPoolConfiguration",
        "description": "Add 'cognito-sync:GetIdentityPoolConfiguration' action",
        "prefix": "cognito-sync:GetIdentityPoolConfiguration"
    },
    "cognito-sync:ListDatasets": {
        "body": "cognito-sync:ListDatasets",
        "description": "Add 'cognito-sync:ListDatasets' action",
        "prefix": "cognito-sync:ListDatasets"
    },
    "cognito-sync:ListIdentityPoolUsage": {
        "body": "cognito-sync:ListIdentityPoolUsage",
        "description": "Add 'cognito-sync:ListIdentityPoolUsage' action",
        "prefix": "cognito-sync:ListIdentityPoolUsage"
    },
    "cognito-sync:ListRecords": {
        "body": "cognito-sync:ListRecords",
        "description": "Add 'cognito-sync:ListRecords' action",
        "prefix": "cognito-sync:ListRecords"
    },
    "cognito-sync:QueryRecords": {
        "body": "cognito-sync:QueryRecords",
        "description": "Add 'cognito-sync:QueryRecords' action",
        "prefix": "cognito-sync:QueryRecords"
    },
    "cognito-sync:RegisterDevice": {
        "body": "cognito-sync:RegisterDevice",
        "description": "Add 'cognito-sync:RegisterDevice' action",
        "prefix": "cognito-sync:RegisterDevice"
    },
    "cognito-sync:SetCognitoEvents": {
        "body": "cognito-sync:SetCognitoEvents",
        "description": "Add 'cognito-sync:SetCognitoEvents' action",
        "prefix": "cognito-sync:SetCognitoEvents"
    },
    "cognito-sync:SetDatasetConfiguration": {
        "body": "cognito-sync:SetDatasetConfiguration",
        "description": "Add 'cognito-sync:SetDatasetConfiguration' action",
        "prefix": "cognito-sync:SetDatasetConfiguration"
    },
    "cognito-sync:SetIdentityPoolConfiguration": {
        "body": "cognito-sync:SetIdentityPoolConfiguration",
        "description": "Add 'cognito-sync:SetIdentityPoolConfiguration' action",
        "prefix": "cognito-sync:SetIdentityPoolConfiguration"
    },
    "cognito-sync:SubscribeToDataset": {
        "body": "cognito-sync:SubscribeToDataset",
        "description": "Add 'cognito-sync:SubscribeToDataset' action",
        "prefix": "cognito-sync:SubscribeToDataset"
    },
    "cognito-sync:UnsubscribeFromDataset": {
        "body": "cognito-sync:UnsubscribeFromDataset",
        "description": "Add 'cognito-sync:UnsubscribeFromDataset' action",
        "prefix": "cognito-sync:UnsubscribeFromDataset"
    },
    "cognito-sync:UpdateRecords": {
        "body": "cognito-sync:UpdateRecords",
        "description": "Add 'cognito-sync:UpdateRecords' action",
        "prefix": "cognito-sync:UpdateRecords"
    },
    "comprehend:BatchDetectDominantLanguage": {
        "body": "comprehend:BatchDetectDominantLanguage",
        "description": "Add 'comprehend:BatchDetectDominantLanguage' action",
        "prefix": "comprehend:BatchDetectDominantLanguage"
    },
    "comprehend:BatchDetectEntities": {
        "body": "comprehend:BatchDetectEntities",
        "description": "Add 'comprehend:BatchDetectEntities' action",
        "prefix": "comprehend:BatchDetectEntities"
    },
    "comprehend:BatchDetectKeyPhrases": {
        "body": "comprehend:BatchDetectKeyPhrases",
        "description": "Add 'comprehend:BatchDetectKeyPhrases' action",
        "prefix": "comprehend:BatchDetectKeyPhrases"
    },
    "comprehend:BatchDetectSentiment": {
        "body": "comprehend:BatchDetectSentiment",
        "description": "Add 'comprehend:BatchDetectSentiment' action",
        "prefix": "comprehend:BatchDetectSentiment"
    },
    "comprehend:DescribeTopicsDetectionJob": {
        "body": "comprehend:DescribeTopicsDetectionJob",
        "description": "Add 'comprehend:DescribeTopicsDetectionJob' action",
        "prefix": "comprehend:DescribeTopicsDetectionJob"
    },
    "comprehend:DetectDominantLanguage": {
        "body": "comprehend:DetectDominantLanguage",
        "description": "Add 'comprehend:DetectDominantLanguage' action",
        "prefix": "comprehend:DetectDominantLanguage"
    },
    "comprehend:DetectEntities": {
        "body": "comprehend:DetectEntities",
        "description": "Add 'comprehend:DetectEntities' action",
        "prefix": "comprehend:DetectEntities"
    },
    "comprehend:DetectKeyPhrases": {
        "body": "comprehend:DetectKeyPhrases",
        "description": "Add 'comprehend:DetectKeyPhrases' action",
        "prefix": "comprehend:DetectKeyPhrases"
    },
    "comprehend:DetectSentiment": {
        "body": "comprehend:DetectSentiment",
        "description": "Add 'comprehend:DetectSentiment' action",
        "prefix": "comprehend:DetectSentiment"
    },
    "comprehend:ListTopicsDetectionJobs": {
        "body": "comprehend:ListTopicsDetectionJobs",
        "description": "Add 'comprehend:ListTopicsDetectionJobs' action",
        "prefix": "comprehend:ListTopicsDetectionJobs"
    },
    "comprehend:StartTopicsDetectionJob": {
        "body": "comprehend:StartTopicsDetectionJob",
        "description": "Add 'comprehend:StartTopicsDetectionJob' action",
        "prefix": "comprehend:StartTopicsDetectionJob"
    },
    "config:DeleteConfigRule": {
        "body": "config:DeleteConfigRule",
        "description": "Add 'config:DeleteConfigRule' action",
        "prefix": "config:DeleteConfigRule"
    },
    "config:DeleteConfigurationRecorder": {
        "body": "config:DeleteConfigurationRecorder",
        "description": "Add 'config:DeleteConfigurationRecorder' action",
        "prefix": "config:DeleteConfigurationRecorder"
    },
    "config:DeleteDeliveryChannel": {
        "body": "config:DeleteDeliveryChannel",
        "description": "Add 'config:DeleteDeliveryChannel' action",
        "prefix": "config:DeleteDeliveryChannel"
    },
    "config:DeleteEvaluationResults": {
        "body": "config:DeleteEvaluationResults",
        "description": "Add 'config:DeleteEvaluationResults' action",
        "prefix": "config:DeleteEvaluationResults"
    },
    "config:DeliverConfigSnapshot": {
        "body": "config:DeliverConfigSnapshot",
        "description": "Add 'config:DeliverConfigSnapshot' action",
        "prefix": "config:DeliverConfigSnapshot"
    },
    "config:DescribeComplianceByConfigRule": {
        "body": "config:DescribeComplianceByConfigRule",
        "description": "Add 'config:DescribeComplianceByConfigRule' action",
        "prefix": "config:DescribeComplianceByConfigRule"
    },
    "config:DescribeComplianceByResource": {
        "body": "config:DescribeComplianceByResource",
        "description": "Add 'config:DescribeComplianceByResource' action",
        "prefix": "config:DescribeComplianceByResource"
    },
    "config:DescribeConfigRuleEvaluationStatus": {
        "body": "config:DescribeConfigRuleEvaluationStatus",
        "description": "Add 'config:DescribeConfigRuleEvaluationStatus' action",
        "prefix": "config:DescribeConfigRuleEvaluationStatus"
    },
    "config:DescribeConfigRules": {
        "body": "config:DescribeConfigRules",
        "description": "Add 'config:DescribeConfigRules' action",
        "prefix": "config:DescribeConfigRules"
    },
    "config:DescribeConfigurationRecorderStatus": {
        "body": "config:DescribeConfigurationRecorderStatus",
        "description": "Add 'config:DescribeConfigurationRecorderStatus' action",
        "prefix": "config:DescribeConfigurationRecorderStatus"
    },
    "config:DescribeConfigurationRecorders": {
        "body": "config:DescribeConfigurationRecorders",
        "description": "Add 'config:DescribeConfigurationRecorders' action",
        "prefix": "config:DescribeConfigurationRecorders"
    },
    "config:DescribeDeliveryChannelStatus": {
        "body": "config:DescribeDeliveryChannelStatus",
        "description": "Add 'config:DescribeDeliveryChannelStatus' action",
        "prefix": "config:DescribeDeliveryChannelStatus"
    },
    "config:DescribeDeliveryChannels": {
        "body": "config:DescribeDeliveryChannels",
        "description": "Add 'config:DescribeDeliveryChannels' action",
        "prefix": "config:DescribeDeliveryChannels"
    },
    "config:GetComplianceDetailsByConfigRule": {
        "body": "config:GetComplianceDetailsByConfigRule",
        "description": "Add 'config:GetComplianceDetailsByConfigRule' action",
        "prefix": "config:GetComplianceDetailsByConfigRule"
    },
    "config:GetComplianceDetailsByResource": {
        "body": "config:GetComplianceDetailsByResource",
        "description": "Add 'config:GetComplianceDetailsByResource' action",
        "prefix": "config:GetComplianceDetailsByResource"
    },
    "config:GetComplianceSummaryByConfigRule": {
        "body": "config:GetComplianceSummaryByConfigRule",
        "description": "Add 'config:GetComplianceSummaryByConfigRule' action",
        "prefix": "config:GetComplianceSummaryByConfigRule"
    },
    "config:GetComplianceSummaryByResourceType": {
        "body": "config:GetComplianceSummaryByResourceType",
        "description": "Add 'config:GetComplianceSummaryByResourceType' action",
        "prefix": "config:GetComplianceSummaryByResourceType"
    },
    "config:GetResourceConfigHistory": {
        "body": "config:GetResourceConfigHistory",
        "description": "Add 'config:GetResourceConfigHistory' action",
        "prefix": "config:GetResourceConfigHistory"
    },
    "config:GetResources": {
        "body": "config:GetResources",
        "description": "Add 'config:GetResources' action",
        "prefix": "config:GetResources"
    },
    "config:GetTagKeys": {
        "body": "config:GetTagKeys",
        "description": "Add 'config:GetTagKeys' action",
        "prefix": "config:GetTagKeys"
    },
    "config:ListDiscoveredResources": {
        "body": "config:ListDiscoveredResources",
        "description": "Add 'config:ListDiscoveredResources' action",
        "prefix": "config:ListDiscoveredResources"
    },
    "config:PutConfigRule": {
        "body": "config:PutConfigRule",
        "description": "Add 'config:PutConfigRule' action",
        "prefix": "config:PutConfigRule"
    },
    "config:PutConfigurationRecorder": {
        "body": "config:PutConfigurationRecorder",
        "description": "Add 'config:PutConfigurationRecorder' action",
        "prefix": "config:PutConfigurationRecorder"
    },
    "config:PutDeliveryChannel": {
        "body": "config:PutDeliveryChannel",
        "description": "Add 'config:PutDeliveryChannel' action",
        "prefix": "config:PutDeliveryChannel"
    },
    "config:PutEvaluations": {
        "body": "config:PutEvaluations",
        "description": "Add 'config:PutEvaluations' action",
        "prefix": "config:PutEvaluations"
    },
    "config:StartConfigRulesEvaluation": {
        "body": "config:StartConfigRulesEvaluation",
        "description": "Add 'config:StartConfigRulesEvaluation' action",
        "prefix": "config:StartConfigRulesEvaluation"
    },
    "config:StartConfigurationRecorder": {
        "body": "config:StartConfigurationRecorder",
        "description": "Add 'config:StartConfigurationRecorder' action",
        "prefix": "config:StartConfigurationRecorder"
    },
    "config:StopConfigurationRecorder": {
        "body": "config:StopConfigurationRecorder",
        "description": "Add 'config:StopConfigurationRecorder' action",
        "prefix": "config:StopConfigurationRecorder"
    },
    "connect:CreateInstance": {
        "body": "connect:CreateInstance",
        "description": "Add 'connect:CreateInstance' action",
        "prefix": "connect:CreateInstance"
    },
    "connect:DescribeInstance": {
        "body": "connect:DescribeInstance",
        "description": "Add 'connect:DescribeInstance' action",
        "prefix": "connect:DescribeInstance"
    },
    "connect:DestroyInstance": {
        "body": "connect:DestroyInstance",
        "description": "Add 'connect:DestroyInstance' action",
        "prefix": "connect:DestroyInstance"
    },
    "connect:GetFederationToken": {
        "body": "connect:GetFederationToken",
        "description": "Add 'connect:GetFederationToken' action",
        "prefix": "connect:GetFederationToken"
    },
    "connect:GetFederationTokens": {
        "body": "connect:GetFederationTokens",
        "description": "Add 'connect:GetFederationTokens' action",
        "prefix": "connect:GetFederationTokens"
    },
    "connect:ListInstances": {
        "body": "connect:ListInstances",
        "description": "Add 'connect:ListInstances' action",
        "prefix": "connect:ListInstances"
    },
    "connect:ModifyInstance": {
        "body": "connect:ModifyInstance",
        "description": "Add 'connect:ModifyInstance' action",
        "prefix": "connect:ModifyInstance"
    },
    "crowd:GetTask": {
        "body": "crowd:GetTask",
        "description": "Add 'crowd:GetTask' action",
        "prefix": "crowd:GetTask"
    },
    "crowd:PutTask": {
        "body": "crowd:PutTask",
        "description": "Add 'crowd:PutTask' action",
        "prefix": "crowd:PutTask"
    },
    "cur:DeleteReportDefinition": {
        "body": "cur:DeleteReportDefinition",
        "description": "Add 'cur:DeleteReportDefinition' action",
        "prefix": "cur:DeleteReportDefinition"
    },
    "cur:DescribeReportDefinitions": {
        "body": "cur:DescribeReportDefinitions",
        "description": "Add 'cur:DescribeReportDefinitions' action",
        "prefix": "cur:DescribeReportDefinitions"
    },
    "cur:PutReportDefinition": {
        "body": "cur:PutReportDefinition",
        "description": "Add 'cur:PutReportDefinition' action",
        "prefix": "cur:PutReportDefinition"
    },
    "datapipeline:ActivatePipeline": {
        "body": "datapipeline:ActivatePipeline",
        "description": "Add 'datapipeline:ActivatePipeline' action",
        "prefix": "datapipeline:ActivatePipeline"
    },
    "datapipeline:AddTags": {
        "body": "datapipeline:AddTags",
        "description": "Add 'datapipeline:AddTags' action",
        "prefix": "datapipeline:AddTags"
    },
    "datapipeline:CreatePipeline": {
        "body": "datapipeline:CreatePipeline",
        "description": "Add 'datapipeline:CreatePipeline' action",
        "prefix": "datapipeline:CreatePipeline"
    },
    "datapipeline:DeactivatePipeline": {
        "body": "datapipeline:DeactivatePipeline",
        "description": "Add 'datapipeline:DeactivatePipeline' action",
        "prefix": "datapipeline:DeactivatePipeline"
    },
    "datapipeline:DeletePipeline": {
        "body": "datapipeline:DeletePipeline",
        "description": "Add 'datapipeline:DeletePipeline' action",
        "prefix": "datapipeline:DeletePipeline"
    },
    "datapipeline:DescribeObjects": {
        "body": "datapipeline:DescribeObjects",
        "description": "Add 'datapipeline:DescribeObjects' action",
        "prefix": "datapipeline:DescribeObjects"
    },
    "datapipeline:DescribePipelines": {
        "body": "datapipeline:DescribePipelines",
        "description": "Add 'datapipeline:DescribePipelines' action",
        "prefix": "datapipeline:DescribePipelines"
    },
    "datapipeline:EvaluateExpression": {
        "body": "datapipeline:EvaluateExpression",
        "description": "Add 'datapipeline:EvaluateExpression' action",
        "prefix": "datapipeline:EvaluateExpression"
    },
    "datapipeline:GetAccountLimits": {
        "body": "datapipeline:GetAccountLimits",
        "description": "Add 'datapipeline:GetAccountLimits' action",
        "prefix": "datapipeline:GetAccountLimits"
    },
    "datapipeline:GetPipelineDefinition": {
        "body": "datapipeline:GetPipelineDefinition",
        "description": "Add 'datapipeline:GetPipelineDefinition' action",
        "prefix": "datapipeline:GetPipelineDefinition"
    },
    "datapipeline:ListPipelines": {
        "body": "datapipeline:ListPipelines",
        "description": "Add 'datapipeline:ListPipelines' action",
        "prefix": "datapipeline:ListPipelines"
    },
    "datapipeline:PollForTask": {
        "body": "datapipeline:PollForTask",
        "description": "Add 'datapipeline:PollForTask' action",
        "prefix": "datapipeline:PollForTask"
    },
    "datapipeline:PutAccountLimits": {
        "body": "datapipeline:PutAccountLimits",
        "description": "Add 'datapipeline:PutAccountLimits' action",
        "prefix": "datapipeline:PutAccountLimits"
    },
    "datapipeline:PutPipelineDefinition": {
        "body": "datapipeline:PutPipelineDefinition",
        "description": "Add 'datapipeline:PutPipelineDefinition' action",
        "prefix": "datapipeline:PutPipelineDefinition"
    },
    "datapipeline:QueryObjects": {
        "body": "datapipeline:QueryObjects",
        "description": "Add 'datapipeline:QueryObjects' action",
        "prefix": "datapipeline:QueryObjects"
    },
    "datapipeline:RemoveTags": {
        "body": "datapipeline:RemoveTags",
        "description": "Add 'datapipeline:RemoveTags' action",
        "prefix": "datapipeline:RemoveTags"
    },
    "datapipeline:ReportTaskProgress": {
        "body": "datapipeline:ReportTaskProgress",
        "description": "Add 'datapipeline:ReportTaskProgress' action",
        "prefix": "datapipeline:ReportTaskProgress"
    },
    "datapipeline:ReportTaskRunnerHeartbeat": {
        "body": "datapipeline:ReportTaskRunnerHeartbeat",
        "description": "Add 'datapipeline:ReportTaskRunnerHeartbeat' action",
        "prefix": "datapipeline:ReportTaskRunnerHeartbeat"
    },
    "datapipeline:SetStatus": {
        "body": "datapipeline:SetStatus",
        "description": "Add 'datapipeline:SetStatus' action",
        "prefix": "datapipeline:SetStatus"
    },
    "datapipeline:SetTaskStatus": {
        "body": "datapipeline:SetTaskStatus",
        "description": "Add 'datapipeline:SetTaskStatus' action",
        "prefix": "datapipeline:SetTaskStatus"
    },
    "datapipeline:ValidatePipelineDefinition": {
        "body": "datapipeline:ValidatePipelineDefinition",
        "description": "Add 'datapipeline:ValidatePipelineDefinition' action",
        "prefix": "datapipeline:ValidatePipelineDefinition"
    },
    "dax:BatchGetItem": {
        "body": "dax:BatchGetItem",
        "description": "Add 'dax:BatchGetItem' action",
        "prefix": "dax:BatchGetItem"
    },
    "dax:BatchWriteItem": {
        "body": "dax:BatchWriteItem",
        "description": "Add 'dax:BatchWriteItem' action",
        "prefix": "dax:BatchWriteItem"
    },
    "dax:CreateCluster": {
        "body": "dax:CreateCluster",
        "description": "Add 'dax:CreateCluster' action",
        "prefix": "dax:CreateCluster"
    },
    "dax:CreateParameterGroup": {
        "body": "dax:CreateParameterGroup",
        "description": "Add 'dax:CreateParameterGroup' action",
        "prefix": "dax:CreateParameterGroup"
    },
    "dax:CreateSubnetGroup": {
        "body": "dax:CreateSubnetGroup",
        "description": "Add 'dax:CreateSubnetGroup' action",
        "prefix": "dax:CreateSubnetGroup"
    },
    "dax:DecreaseReplicationFactor": {
        "body": "dax:DecreaseReplicationFactor",
        "description": "Add 'dax:DecreaseReplicationFactor' action",
        "prefix": "dax:DecreaseReplicationFactor"
    },
    "dax:DeleteCluster": {
        "body": "dax:DeleteCluster",
        "description": "Add 'dax:DeleteCluster' action",
        "prefix": "dax:DeleteCluster"
    },
    "dax:DeleteItem": {
        "body": "dax:DeleteItem",
        "description": "Add 'dax:DeleteItem' action",
        "prefix": "dax:DeleteItem"
    },
    "dax:DeleteParameterGroup": {
        "body": "dax:DeleteParameterGroup",
        "description": "Add 'dax:DeleteParameterGroup' action",
        "prefix": "dax:DeleteParameterGroup"
    },
    "dax:DeleteSubnetGroup": {
        "body": "dax:DeleteSubnetGroup",
        "description": "Add 'dax:DeleteSubnetGroup' action",
        "prefix": "dax:DeleteSubnetGroup"
    },
    "dax:DescribeClusters": {
        "body": "dax:DescribeClusters",
        "description": "Add 'dax:DescribeClusters' action",
        "prefix": "dax:DescribeClusters"
    },
    "dax:DescribeDefaultParameters": {
        "body": "dax:DescribeDefaultParameters",
        "description": "Add 'dax:DescribeDefaultParameters' action",
        "prefix": "dax:DescribeDefaultParameters"
    },
    "dax:DescribeEvents": {
        "body": "dax:DescribeEvents",
        "description": "Add 'dax:DescribeEvents' action",
        "prefix": "dax:DescribeEvents"
    },
    "dax:DescribeParameterGroups": {
        "body": "dax:DescribeParameterGroups",
        "description": "Add 'dax:DescribeParameterGroups' action",
        "prefix": "dax:DescribeParameterGroups"
    },
    "dax:DescribeParameters": {
        "body": "dax:DescribeParameters",
        "description": "Add 'dax:DescribeParameters' action",
        "prefix": "dax:DescribeParameters"
    },
    "dax:DescribeSubnetGroups": {
        "body": "dax:DescribeSubnetGroups",
        "description": "Add 'dax:DescribeSubnetGroups' action",
        "prefix": "dax:DescribeSubnetGroups"
    },
    "dax:DescribeTable": {
        "body": "dax:DescribeTable",
        "description": "Add 'dax:DescribeTable' action",
        "prefix": "dax:DescribeTable"
    },
    "dax:GetItem": {
        "body": "dax:GetItem",
        "description": "Add 'dax:GetItem' action",
        "prefix": "dax:GetItem"
    },
    "dax:IncreaseReplicationFactor": {
        "body": "dax:IncreaseReplicationFactor",
        "description": "Add 'dax:IncreaseReplicationFactor' action",
        "prefix": "dax:IncreaseReplicationFactor"
    },
    "dax:ListTables": {
        "body": "dax:ListTables",
        "description": "Add 'dax:ListTables' action",
        "prefix": "dax:ListTables"
    },
    "dax:ListTags": {
        "body": "dax:ListTags",
        "description": "Add 'dax:ListTags' action",
        "prefix": "dax:ListTags"
    },
    "dax:PutItem": {
        "body": "dax:PutItem",
        "description": "Add 'dax:PutItem' action",
        "prefix": "dax:PutItem"
    },
    "dax:Query": {
        "body": "dax:Query",
        "description": "Add 'dax:Query' action",
        "prefix": "dax:Query"
    },
    "dax:RebootNode": {
        "body": "dax:RebootNode",
        "description": "Add 'dax:RebootNode' action",
        "prefix": "dax:RebootNode"
    },
    "dax:Scan": {
        "body": "dax:Scan",
        "description": "Add 'dax:Scan' action",
        "prefix": "dax:Scan"
    },
    "dax:TagResource": {
        "body": "dax:TagResource",
        "description": "Add 'dax:TagResource' action",
        "prefix": "dax:TagResource"
    },
    "dax:UntagResource": {
        "body": "dax:UntagResource",
        "description": "Add 'dax:UntagResource' action",
        "prefix": "dax:UntagResource"
    },
    "dax:UpdateCluster": {
        "body": "dax:UpdateCluster",
        "description": "Add 'dax:UpdateCluster' action",
        "prefix": "dax:UpdateCluster"
    },
    "dax:UpdateItem": {
        "body": "dax:UpdateItem",
        "description": "Add 'dax:UpdateItem' action",
        "prefix": "dax:UpdateItem"
    },
    "dax:UpdateParameterGroup": {
        "body": "dax:UpdateParameterGroup",
        "description": "Add 'dax:UpdateParameterGroup' action",
        "prefix": "dax:UpdateParameterGroup"
    },
    "dax:UpdateSubnetGroup": {
        "body": "dax:UpdateSubnetGroup",
        "description": "Add 'dax:UpdateSubnetGroup' action",
        "prefix": "dax:UpdateSubnetGroup"
    },
    "devicefarm:CreateDevicePool": {
        "body": "devicefarm:CreateDevicePool",
        "description": "Add 'devicefarm:CreateDevicePool' action",
        "prefix": "devicefarm:CreateDevicePool"
    },
    "devicefarm:CreateNetworkProfile": {
        "body": "devicefarm:CreateNetworkProfile",
        "description": "Add 'devicefarm:CreateNetworkProfile' action",
        "prefix": "devicefarm:CreateNetworkProfile"
    },
    "devicefarm:CreateProject": {
        "body": "devicefarm:CreateProject",
        "description": "Add 'devicefarm:CreateProject' action",
        "prefix": "devicefarm:CreateProject"
    },
    "devicefarm:CreateRemoteAccessSession": {
        "body": "devicefarm:CreateRemoteAccessSession",
        "description": "Add 'devicefarm:CreateRemoteAccessSession' action",
        "prefix": "devicefarm:CreateRemoteAccessSession"
    },
    "devicefarm:CreateUpload": {
        "body": "devicefarm:CreateUpload",
        "description": "Add 'devicefarm:CreateUpload' action",
        "prefix": "devicefarm:CreateUpload"
    },
    "devicefarm:DeleteDevicePool": {
        "body": "devicefarm:DeleteDevicePool",
        "description": "Add 'devicefarm:DeleteDevicePool' action",
        "prefix": "devicefarm:DeleteDevicePool"
    },
    "devicefarm:DeleteNetworkProfile": {
        "body": "devicefarm:DeleteNetworkProfile",
        "description": "Add 'devicefarm:DeleteNetworkProfile' action",
        "prefix": "devicefarm:DeleteNetworkProfile"
    },
    "devicefarm:DeleteProject": {
        "body": "devicefarm:DeleteProject",
        "description": "Add 'devicefarm:DeleteProject' action",
        "prefix": "devicefarm:DeleteProject"
    },
    "devicefarm:DeleteRemoteAccessSession": {
        "body": "devicefarm:DeleteRemoteAccessSession",
        "description": "Add 'devicefarm:DeleteRemoteAccessSession' action",
        "prefix": "devicefarm:DeleteRemoteAccessSession"
    },
    "devicefarm:DeleteRun": {
        "body": "devicefarm:DeleteRun",
        "description": "Add 'devicefarm:DeleteRun' action",
        "prefix": "devicefarm:DeleteRun"
    },
    "devicefarm:DeleteUpload": {
        "body": "devicefarm:DeleteUpload",
        "description": "Add 'devicefarm:DeleteUpload' action",
        "prefix": "devicefarm:DeleteUpload"
    },
    "devicefarm:GetAccountSettings": {
        "body": "devicefarm:GetAccountSettings",
        "description": "Add 'devicefarm:GetAccountSettings' action",
        "prefix": "devicefarm:GetAccountSettings"
    },
    "devicefarm:GetDevice": {
        "body": "devicefarm:GetDevice",
        "description": "Add 'devicefarm:GetDevice' action",
        "prefix": "devicefarm:GetDevice"
    },
    "devicefarm:GetDevicePool": {
        "body": "devicefarm:GetDevicePool",
        "description": "Add 'devicefarm:GetDevicePool' action",
        "prefix": "devicefarm:GetDevicePool"
    },
    "devicefarm:GetDevicePoolCompatibility": {
        "body": "devicefarm:GetDevicePoolCompatibility",
        "description": "Add 'devicefarm:GetDevicePoolCompatibility' action",
        "prefix": "devicefarm:GetDevicePoolCompatibility"
    },
    "devicefarm:GetJob": {
        "body": "devicefarm:GetJob",
        "description": "Add 'devicefarm:GetJob' action",
        "prefix": "devicefarm:GetJob"
    },
    "devicefarm:GetNetworkProfile": {
        "body": "devicefarm:GetNetworkProfile",
        "description": "Add 'devicefarm:GetNetworkProfile' action",
        "prefix": "devicefarm:GetNetworkProfile"
    },
    "devicefarm:GetOfferingStatus": {
        "body": "devicefarm:GetOfferingStatus",
        "description": "Add 'devicefarm:GetOfferingStatus' action",
        "prefix": "devicefarm:GetOfferingStatus"
    },
    "devicefarm:GetProject": {
        "body": "devicefarm:GetProject",
        "description": "Add 'devicefarm:GetProject' action",
        "prefix": "devicefarm:GetProject"
    },
    "devicefarm:GetRemoteAccessSession": {
        "body": "devicefarm:GetRemoteAccessSession",
        "description": "Add 'devicefarm:GetRemoteAccessSession' action",
        "prefix": "devicefarm:GetRemoteAccessSession"
    },
    "devicefarm:GetRun": {
        "body": "devicefarm:GetRun",
        "description": "Add 'devicefarm:GetRun' action",
        "prefix": "devicefarm:GetRun"
    },
    "devicefarm:GetSuite": {
        "body": "devicefarm:GetSuite",
        "description": "Add 'devicefarm:GetSuite' action",
        "prefix": "devicefarm:GetSuite"
    },
    "devicefarm:GetTest": {
        "body": "devicefarm:GetTest",
        "description": "Add 'devicefarm:GetTest' action",
        "prefix": "devicefarm:GetTest"
    },
    "devicefarm:GetUpload": {
        "body": "devicefarm:GetUpload",
        "description": "Add 'devicefarm:GetUpload' action",
        "prefix": "devicefarm:GetUpload"
    },
    "devicefarm:InstallToRemoteAccessSession": {
        "body": "devicefarm:InstallToRemoteAccessSession",
        "description": "Add 'devicefarm:InstallToRemoteAccessSession' action",
        "prefix": "devicefarm:InstallToRemoteAccessSession"
    },
    "devicefarm:ListArtifacts": {
        "body": "devicefarm:ListArtifacts",
        "description": "Add 'devicefarm:ListArtifacts' action",
        "prefix": "devicefarm:ListArtifacts"
    },
    "devicefarm:ListDevicePools": {
        "body": "devicefarm:ListDevicePools",
        "description": "Add 'devicefarm:ListDevicePools' action",
        "prefix": "devicefarm:ListDevicePools"
    },
    "devicefarm:ListDevices": {
        "body": "devicefarm:ListDevices",
        "description": "Add 'devicefarm:ListDevices' action",
        "prefix": "devicefarm:ListDevices"
    },
    "devicefarm:ListJobs": {
        "body": "devicefarm:ListJobs",
        "description": "Add 'devicefarm:ListJobs' action",
        "prefix": "devicefarm:ListJobs"
    },
    "devicefarm:ListNetworkProfiles": {
        "body": "devicefarm:ListNetworkProfiles",
        "description": "Add 'devicefarm:ListNetworkProfiles' action",
        "prefix": "devicefarm:ListNetworkProfiles"
    },
    "devicefarm:ListOfferingTransactions": {
        "body": "devicefarm:ListOfferingTransactions",
        "description": "Add 'devicefarm:ListOfferingTransactions' action",
        "prefix": "devicefarm:ListOfferingTransactions"
    },
    "devicefarm:ListOfferings": {
        "body": "devicefarm:ListOfferings",
        "description": "Add 'devicefarm:ListOfferings' action",
        "prefix": "devicefarm:ListOfferings"
    },
    "devicefarm:ListProjects": {
        "body": "devicefarm:ListProjects",
        "description": "Add 'devicefarm:ListProjects' action",
        "prefix": "devicefarm:ListProjects"
    },
    "devicefarm:ListRemoteAccessSessions": {
        "body": "devicefarm:ListRemoteAccessSessions",
        "description": "Add 'devicefarm:ListRemoteAccessSessions' action",
        "prefix": "devicefarm:ListRemoteAccessSessions"
    },
    "devicefarm:ListRuns": {
        "body": "devicefarm:ListRuns",
        "description": "Add 'devicefarm:ListRuns' action",
        "prefix": "devicefarm:ListRuns"
    },
    "devicefarm:ListSamples": {
        "body": "devicefarm:ListSamples",
        "description": "Add 'devicefarm:ListSamples' action",
        "prefix": "devicefarm:ListSamples"
    },
    "devicefarm:ListSuites": {
        "body": "devicefarm:ListSuites",
        "description": "Add 'devicefarm:ListSuites' action",
        "prefix": "devicefarm:ListSuites"
    },
    "devicefarm:ListTests": {
        "body": "devicefarm:ListTests",
        "description": "Add 'devicefarm:ListTests' action",
        "prefix": "devicefarm:ListTests"
    },
    "devicefarm:ListUniqueProblems": {
        "body": "devicefarm:ListUniqueProblems",
        "description": "Add 'devicefarm:ListUniqueProblems' action",
        "prefix": "devicefarm:ListUniqueProblems"
    },
    "devicefarm:ListUploads": {
        "body": "devicefarm:ListUploads",
        "description": "Add 'devicefarm:ListUploads' action",
        "prefix": "devicefarm:ListUploads"
    },
    "devicefarm:PurchaseOffering": {
        "body": "devicefarm:PurchaseOffering",
        "description": "Add 'devicefarm:PurchaseOffering' action",
        "prefix": "devicefarm:PurchaseOffering"
    },
    "devicefarm:RenewOffering": {
        "body": "devicefarm:RenewOffering",
        "description": "Add 'devicefarm:RenewOffering' action",
        "prefix": "devicefarm:RenewOffering"
    },
    "devicefarm:ScheduleRun": {
        "body": "devicefarm:ScheduleRun",
        "description": "Add 'devicefarm:ScheduleRun' action",
        "prefix": "devicefarm:ScheduleRun"
    },
    "devicefarm:StopRemoteAccessSession": {
        "body": "devicefarm:StopRemoteAccessSession",
        "description": "Add 'devicefarm:StopRemoteAccessSession' action",
        "prefix": "devicefarm:StopRemoteAccessSession"
    },
    "devicefarm:StopRun": {
        "body": "devicefarm:StopRun",
        "description": "Add 'devicefarm:StopRun' action",
        "prefix": "devicefarm:StopRun"
    },
    "devicefarm:UpdateDevicePool": {
        "body": "devicefarm:UpdateDevicePool",
        "description": "Add 'devicefarm:UpdateDevicePool' action",
        "prefix": "devicefarm:UpdateDevicePool"
    },
    "devicefarm:UpdateNetworkProfile": {
        "body": "devicefarm:UpdateNetworkProfile",
        "description": "Add 'devicefarm:UpdateNetworkProfile' action",
        "prefix": "devicefarm:UpdateNetworkProfile"
    },
    "devicefarm:UpdateProject": {
        "body": "devicefarm:UpdateProject",
        "description": "Add 'devicefarm:UpdateProject' action",
        "prefix": "devicefarm:UpdateProject"
    },
    "directconnect:AllocateConnectionOnInterconnect": {
        "body": "directconnect:AllocateConnectionOnInterconnect",
        "description": "Add 'directconnect:AllocateConnectionOnInterconnect' action",
        "prefix": "directconnect:AllocateConnectionOnInterconnect"
    },
    "directconnect:AllocatePrivateVirtualInterface": {
        "body": "directconnect:AllocatePrivateVirtualInterface",
        "description": "Add 'directconnect:AllocatePrivateVirtualInterface' action",
        "prefix": "directconnect:AllocatePrivateVirtualInterface"
    },
    "directconnect:AllocatePublicVirtualInterface": {
        "body": "directconnect:AllocatePublicVirtualInterface",
        "description": "Add 'directconnect:AllocatePublicVirtualInterface' action",
        "prefix": "directconnect:AllocatePublicVirtualInterface"
    },
    "directconnect:ConfirmConnection": {
        "body": "directconnect:ConfirmConnection",
        "description": "Add 'directconnect:ConfirmConnection' action",
        "prefix": "directconnect:ConfirmConnection"
    },
    "directconnect:ConfirmPrivateVirtualInterface": {
        "body": "directconnect:ConfirmPrivateVirtualInterface",
        "description": "Add 'directconnect:ConfirmPrivateVirtualInterface' action",
        "prefix": "directconnect:ConfirmPrivateVirtualInterface"
    },
    "directconnect:ConfirmPublicVirtualInterface": {
        "body": "directconnect:ConfirmPublicVirtualInterface",
        "description": "Add 'directconnect:ConfirmPublicVirtualInterface' action",
        "prefix": "directconnect:ConfirmPublicVirtualInterface"
    },
    "directconnect:CreateConnection": {
        "body": "directconnect:CreateConnection",
        "description": "Add 'directconnect:CreateConnection' action",
        "prefix": "directconnect:CreateConnection"
    },
    "directconnect:CreateInterconnect": {
        "body": "directconnect:CreateInterconnect",
        "description": "Add 'directconnect:CreateInterconnect' action",
        "prefix": "directconnect:CreateInterconnect"
    },
    "directconnect:CreatePrivateVirtualInterface": {
        "body": "directconnect:CreatePrivateVirtualInterface",
        "description": "Add 'directconnect:CreatePrivateVirtualInterface' action",
        "prefix": "directconnect:CreatePrivateVirtualInterface"
    },
    "directconnect:CreatePublicVirtualInterface": {
        "body": "directconnect:CreatePublicVirtualInterface",
        "description": "Add 'directconnect:CreatePublicVirtualInterface' action",
        "prefix": "directconnect:CreatePublicVirtualInterface"
    },
    "directconnect:DeleteConnection": {
        "body": "directconnect:DeleteConnection",
        "description": "Add 'directconnect:DeleteConnection' action",
        "prefix": "directconnect:DeleteConnection"
    },
    "directconnect:DeleteInterconnect": {
        "body": "directconnect:DeleteInterconnect",
        "description": "Add 'directconnect:DeleteInterconnect' action",
        "prefix": "directconnect:DeleteInterconnect"
    },
    "directconnect:DeleteVirtualInterface": {
        "body": "directconnect:DeleteVirtualInterface",
        "description": "Add 'directconnect:DeleteVirtualInterface' action",
        "prefix": "directconnect:DeleteVirtualInterface"
    },
    "directconnect:DescribeConnectionLoa": {
        "body": "directconnect:DescribeConnectionLoa",
        "description": "Add 'directconnect:DescribeConnectionLoa' action",
        "prefix": "directconnect:DescribeConnectionLoa"
    },
    "directconnect:DescribeConnections": {
        "body": "directconnect:DescribeConnections",
        "description": "Add 'directconnect:DescribeConnections' action",
        "prefix": "directconnect:DescribeConnections"
    },
    "directconnect:DescribeConnectionsOnInterconnect": {
        "body": "directconnect:DescribeConnectionsOnInterconnect",
        "description": "Add 'directconnect:DescribeConnectionsOnInterconnect' action",
        "prefix": "directconnect:DescribeConnectionsOnInterconnect"
    },
    "directconnect:DescribeInterconnectLoa": {
        "body": "directconnect:DescribeInterconnectLoa",
        "description": "Add 'directconnect:DescribeInterconnectLoa' action",
        "prefix": "directconnect:DescribeInterconnectLoa"
    },
    "directconnect:DescribeInterconnects": {
        "body": "directconnect:DescribeInterconnects",
        "description": "Add 'directconnect:DescribeInterconnects' action",
        "prefix": "directconnect:DescribeInterconnects"
    },
    "directconnect:DescribeLocations": {
        "body": "directconnect:DescribeLocations",
        "description": "Add 'directconnect:DescribeLocations' action",
        "prefix": "directconnect:DescribeLocations"
    },
    "directconnect:DescribeVirtualGateways": {
        "body": "directconnect:DescribeVirtualGateways",
        "description": "Add 'directconnect:DescribeVirtualGateways' action",
        "prefix": "directconnect:DescribeVirtualGateways"
    },
    "directconnect:DescribeVirtualInterfaces": {
        "body": "directconnect:DescribeVirtualInterfaces",
        "description": "Add 'directconnect:DescribeVirtualInterfaces' action",
        "prefix": "directconnect:DescribeVirtualInterfaces"
    },
    "discovery:AssociateConfigurationItemsToApplication": {
        "body": "discovery:AssociateConfigurationItemsToApplication",
        "description": "Add 'discovery:AssociateConfigurationItemsToApplication' action",
        "prefix": "discovery:AssociateConfigurationItemsToApplication"
    },
    "discovery:CreateApplication": {
        "body": "discovery:CreateApplication",
        "description": "Add 'discovery:CreateApplication' action",
        "prefix": "discovery:CreateApplication"
    },
    "discovery:CreateTags": {
        "body": "discovery:CreateTags",
        "description": "Add 'discovery:CreateTags' action",
        "prefix": "discovery:CreateTags"
    },
    "discovery:DeleteApplications": {
        "body": "discovery:DeleteApplications",
        "description": "Add 'discovery:DeleteApplications' action",
        "prefix": "discovery:DeleteApplications"
    },
    "discovery:DeleteTags": {
        "body": "discovery:DeleteTags",
        "description": "Add 'discovery:DeleteTags' action",
        "prefix": "discovery:DeleteTags"
    },
    "discovery:DescribeAgents": {
        "body": "discovery:DescribeAgents",
        "description": "Add 'discovery:DescribeAgents' action",
        "prefix": "discovery:DescribeAgents"
    },
    "discovery:DescribeConfigurations": {
        "body": "discovery:DescribeConfigurations",
        "description": "Add 'discovery:DescribeConfigurations' action",
        "prefix": "discovery:DescribeConfigurations"
    },
    "discovery:DescribeExportConfigurations": {
        "body": "discovery:DescribeExportConfigurations",
        "description": "Add 'discovery:DescribeExportConfigurations' action",
        "prefix": "discovery:DescribeExportConfigurations"
    },
    "discovery:DescribeTags": {
        "body": "discovery:DescribeTags",
        "description": "Add 'discovery:DescribeTags' action",
        "prefix": "discovery:DescribeTags"
    },
    "discovery:DisassociateConfigurationItemsFromApplication": {
        "body": "discovery:DisassociateConfigurationItemsFromApplication",
        "description": "Add 'discovery:DisassociateConfigurationItemsFromApplication' action",
        "prefix": "discovery:DisassociateConfigurationItemsFromApplication"
    },
    "discovery:ExportConfigurations": {
        "body": "discovery:ExportConfigurations",
        "description": "Add 'discovery:ExportConfigurations' action",
        "prefix": "discovery:ExportConfigurations"
    },
    "discovery:GetDiscoverySummary": {
        "body": "discovery:GetDiscoverySummary",
        "description": "Add 'discovery:GetDiscoverySummary' action",
        "prefix": "discovery:GetDiscoverySummary"
    },
    "discovery:ListConfigurations": {
        "body": "discovery:ListConfigurations",
        "description": "Add 'discovery:ListConfigurations' action",
        "prefix": "discovery:ListConfigurations"
    },
    "discovery:ListServerNeighbors": {
        "body": "discovery:ListServerNeighbors",
        "description": "Add 'discovery:ListServerNeighbors' action",
        "prefix": "discovery:ListServerNeighbors"
    },
    "discovery:StartDataCollectionByAgentIds": {
        "body": "discovery:StartDataCollectionByAgentIds",
        "description": "Add 'discovery:StartDataCollectionByAgentIds' action",
        "prefix": "discovery:StartDataCollectionByAgentIds"
    },
    "discovery:StartExportTask": {
        "body": "discovery:StartExportTask",
        "description": "Add 'discovery:StartExportTask' action",
        "prefix": "discovery:StartExportTask"
    },
    "discovery:StopDataCollectionByAgentIds": {
        "body": "discovery:StopDataCollectionByAgentIds",
        "description": "Add 'discovery:StopDataCollectionByAgentIds' action",
        "prefix": "discovery:StopDataCollectionByAgentIds"
    },
    "discovery:UpdateApplication": {
        "body": "discovery:UpdateApplication",
        "description": "Add 'discovery:UpdateApplication' action",
        "prefix": "discovery:UpdateApplication"
    },
    "dms:AddTagsToResource": {
        "body": "dms:AddTagsToResource",
        "description": "Add 'dms:AddTagsToResource' action",
        "prefix": "dms:AddTagsToResource"
    },
    "dms:CreateEndpoint": {
        "body": "dms:CreateEndpoint",
        "description": "Add 'dms:CreateEndpoint' action",
        "prefix": "dms:CreateEndpoint"
    },
    "dms:CreateReplicationInstance": {
        "body": "dms:CreateReplicationInstance",
        "description": "Add 'dms:CreateReplicationInstance' action",
        "prefix": "dms:CreateReplicationInstance"
    },
    "dms:CreateReplicationSubnetGroup": {
        "body": "dms:CreateReplicationSubnetGroup",
        "description": "Add 'dms:CreateReplicationSubnetGroup' action",
        "prefix": "dms:CreateReplicationSubnetGroup"
    },
    "dms:CreateReplicationTask": {
        "body": "dms:CreateReplicationTask",
        "description": "Add 'dms:CreateReplicationTask' action",
        "prefix": "dms:CreateReplicationTask"
    },
    "dms:DeleteEndpoint": {
        "body": "dms:DeleteEndpoint",
        "description": "Add 'dms:DeleteEndpoint' action",
        "prefix": "dms:DeleteEndpoint"
    },
    "dms:DeleteEventSubscription": {
        "body": "dms:DeleteEventSubscription",
        "description": "Add 'dms:DeleteEventSubscription' action",
        "prefix": "dms:DeleteEventSubscription"
    },
    "dms:DeleteReplicationInstance": {
        "body": "dms:DeleteReplicationInstance",
        "description": "Add 'dms:DeleteReplicationInstance' action",
        "prefix": "dms:DeleteReplicationInstance"
    },
    "dms:DeleteReplicationSubnetGroup": {
        "body": "dms:DeleteReplicationSubnetGroup",
        "description": "Add 'dms:DeleteReplicationSubnetGroup' action",
        "prefix": "dms:DeleteReplicationSubnetGroup"
    },
    "dms:DeleteReplicationTask": {
        "body": "dms:DeleteReplicationTask",
        "description": "Add 'dms:DeleteReplicationTask' action",
        "prefix": "dms:DeleteReplicationTask"
    },
    "dms:DescribeAccountAttributes": {
        "body": "dms:DescribeAccountAttributes",
        "description": "Add 'dms:DescribeAccountAttributes' action",
        "prefix": "dms:DescribeAccountAttributes"
    },
    "dms:DescribeCertificates": {
        "body": "dms:DescribeCertificates",
        "description": "Add 'dms:DescribeCertificates' action",
        "prefix": "dms:DescribeCertificates"
    },
    "dms:DescribeConnections": {
        "body": "dms:DescribeConnections",
        "description": "Add 'dms:DescribeConnections' action",
        "prefix": "dms:DescribeConnections"
    },
    "dms:DescribeEndpointTypes": {
        "body": "dms:DescribeEndpointTypes",
        "description": "Add 'dms:DescribeEndpointTypes' action",
        "prefix": "dms:DescribeEndpointTypes"
    },
    "dms:DescribeEndpoints": {
        "body": "dms:DescribeEndpoints",
        "description": "Add 'dms:DescribeEndpoints' action",
        "prefix": "dms:DescribeEndpoints"
    },
    "dms:DescribeEventCategories": {
        "body": "dms:DescribeEventCategories",
        "description": "Add 'dms:DescribeEventCategories' action",
        "prefix": "dms:DescribeEventCategories"
    },
    "dms:DescribeEventSubscriptions": {
        "body": "dms:DescribeEventSubscriptions",
        "description": "Add 'dms:DescribeEventSubscriptions' action",
        "prefix": "dms:DescribeEventSubscriptions"
    },
    "dms:DescribeEvents": {
        "body": "dms:DescribeEvents",
        "description": "Add 'dms:DescribeEvents' action",
        "prefix": "dms:DescribeEvents"
    },
    "dms:DescribeOrderableReplicationInstances": {
        "body": "dms:DescribeOrderableReplicationInstances",
        "description": "Add 'dms:DescribeOrderableReplicationInstances' action",
        "prefix": "dms:DescribeOrderableReplicationInstances"
    },
    "dms:DescribeRefreshSchemasStatus": {
        "body": "dms:DescribeRefreshSchemasStatus",
        "description": "Add 'dms:DescribeRefreshSchemasStatus' action",
        "prefix": "dms:DescribeRefreshSchemasStatus"
    },
    "dms:DescribeReplicationInstances": {
        "body": "dms:DescribeReplicationInstances",
        "description": "Add 'dms:DescribeReplicationInstances' action",
        "prefix": "dms:DescribeReplicationInstances"
    },
    "dms:DescribeReplicationSubnetGroups": {
        "body": "dms:DescribeReplicationSubnetGroups",
        "description": "Add 'dms:DescribeReplicationSubnetGroups' action",
        "prefix": "dms:DescribeReplicationSubnetGroups"
    },
    "dms:DescribeReplicationTasks": {
        "body": "dms:DescribeReplicationTasks",
        "description": "Add 'dms:DescribeReplicationTasks' action",
        "prefix": "dms:DescribeReplicationTasks"
    },
    "dms:DescribeSchemas": {
        "body": "dms:DescribeSchemas",
        "description": "Add 'dms:DescribeSchemas' action",
        "prefix": "dms:DescribeSchemas"
    },
    "dms:DescribeTableStatistics": {
        "body": "dms:DescribeTableStatistics",
        "description": "Add 'dms:DescribeTableStatistics' action",
        "prefix": "dms:DescribeTableStatistics"
    },
    "dms:ListTagsForResource": {
        "body": "dms:ListTagsForResource",
        "description": "Add 'dms:ListTagsForResource' action",
        "prefix": "dms:ListTagsForResource"
    },
    "dms:ModifyEndpoint": {
        "body": "dms:ModifyEndpoint",
        "description": "Add 'dms:ModifyEndpoint' action",
        "prefix": "dms:ModifyEndpoint"
    },
    "dms:ModifyEventSubscription": {
        "body": "dms:ModifyEventSubscription",
        "description": "Add 'dms:ModifyEventSubscription' action",
        "prefix": "dms:ModifyEventSubscription"
    },
    "dms:ModifyReplicationInstance": {
        "body": "dms:ModifyReplicationInstance",
        "description": "Add 'dms:ModifyReplicationInstance' action",
        "prefix": "dms:ModifyReplicationInstance"
    },
    "dms:ModifyReplicationSubnetGroup": {
        "body": "dms:ModifyReplicationSubnetGroup",
        "description": "Add 'dms:ModifyReplicationSubnetGroup' action",
        "prefix": "dms:ModifyReplicationSubnetGroup"
    },
    "dms:ModifyReplicationTask": {
        "body": "dms:ModifyReplicationTask",
        "description": "Add 'dms:ModifyReplicationTask' action",
        "prefix": "dms:ModifyReplicationTask"
    },
    "dms:RefreshSchemas": {
        "body": "dms:RefreshSchemas",
        "description": "Add 'dms:RefreshSchemas' action",
        "prefix": "dms:RefreshSchemas"
    },
    "dms:RemoveTagsFromResource": {
        "body": "dms:RemoveTagsFromResource",
        "description": "Add 'dms:RemoveTagsFromResource' action",
        "prefix": "dms:RemoveTagsFromResource"
    },
    "dms:StartReplicationTask": {
        "body": "dms:StartReplicationTask",
        "description": "Add 'dms:StartReplicationTask' action",
        "prefix": "dms:StartReplicationTask"
    },
    "dms:StopReplicationTask": {
        "body": "dms:StopReplicationTask",
        "description": "Add 'dms:StopReplicationTask' action",
        "prefix": "dms:StopReplicationTask"
    },
    "dms:TestConnection": {
        "body": "dms:TestConnection",
        "description": "Add 'dms:TestConnection' action",
        "prefix": "dms:TestConnection"
    },
    "ds:AddIpRoutes": {
        "body": "ds:AddIpRoutes",
        "description": "Add 'ds:AddIpRoutes' action",
        "prefix": "ds:AddIpRoutes"
    },
    "ds:AddTagsToResource": {
        "body": "ds:AddTagsToResource",
        "description": "Add 'ds:AddTagsToResource' action",
        "prefix": "ds:AddTagsToResource"
    },
    "ds:AuthorizeApplication": {
        "body": "ds:AuthorizeApplication",
        "description": "Add 'ds:AuthorizeApplication' action",
        "prefix": "ds:AuthorizeApplication"
    },
    "ds:CancelSchemaExtension": {
        "body": "ds:CancelSchemaExtension",
        "description": "Add 'ds:CancelSchemaExtension' action",
        "prefix": "ds:CancelSchemaExtension"
    },
    "ds:ConnectDirectory": {
        "body": "ds:ConnectDirectory",
        "description": "Add 'ds:ConnectDirectory' action",
        "prefix": "ds:ConnectDirectory"
    },
    "ds:CreateAlias": {
        "body": "ds:CreateAlias",
        "description": "Add 'ds:CreateAlias' action",
        "prefix": "ds:CreateAlias"
    },
    "ds:CreateComputer": {
        "body": "ds:CreateComputer",
        "description": "Add 'ds:CreateComputer' action",
        "prefix": "ds:CreateComputer"
    },
    "ds:CreateConditionalForwarder": {
        "body": "ds:CreateConditionalForwarder",
        "description": "Add 'ds:CreateConditionalForwarder' action",
        "prefix": "ds:CreateConditionalForwarder"
    },
    "ds:CreateDirectory": {
        "body": "ds:CreateDirectory",
        "description": "Add 'ds:CreateDirectory' action",
        "prefix": "ds:CreateDirectory"
    },
    "ds:CreateMicrosoftAD": {
        "body": "ds:CreateMicrosoftAD",
        "description": "Add 'ds:CreateMicrosoftAD' action",
        "prefix": "ds:CreateMicrosoftAD"
    },
    "ds:CreateSnapshot": {
        "body": "ds:CreateSnapshot",
        "description": "Add 'ds:CreateSnapshot' action",
        "prefix": "ds:CreateSnapshot"
    },
    "ds:CreateTrust": {
        "body": "ds:CreateTrust",
        "description": "Add 'ds:CreateTrust' action",
        "prefix": "ds:CreateTrust"
    },
    "ds:DeleteConditionalForwarder": {
        "body": "ds:DeleteConditionalForwarder",
        "description": "Add 'ds:DeleteConditionalForwarder' action",
        "prefix": "ds:DeleteConditionalForwarder"
    },
    "ds:DeleteDirectory": {
        "body": "ds:DeleteDirectory",
        "description": "Add 'ds:DeleteDirectory' action",
        "prefix": "ds:DeleteDirectory"
    },
    "ds:DeleteSnapshot": {
        "body": "ds:DeleteSnapshot",
        "description": "Add 'ds:DeleteSnapshot' action",
        "prefix": "ds:DeleteSnapshot"
    },
    "ds:DeleteTrust": {
        "body": "ds:DeleteTrust",
        "description": "Add 'ds:DeleteTrust' action",
        "prefix": "ds:DeleteTrust"
    },
    "ds:DeregisterEventTopic": {
        "body": "ds:DeregisterEventTopic",
        "description": "Add 'ds:DeregisterEventTopic' action",
        "prefix": "ds:DeregisterEventTopic"
    },
    "ds:DescribeConditionalForwarders": {
        "body": "ds:DescribeConditionalForwarders",
        "description": "Add 'ds:DescribeConditionalForwarders' action",
        "prefix": "ds:DescribeConditionalForwarders"
    },
    "ds:DescribeDirectories": {
        "body": "ds:DescribeDirectories",
        "description": "Add 'ds:DescribeDirectories' action",
        "prefix": "ds:DescribeDirectories"
    },
    "ds:DescribeEventTopics": {
        "body": "ds:DescribeEventTopics",
        "description": "Add 'ds:DescribeEventTopics' action",
        "prefix": "ds:DescribeEventTopics"
    },
    "ds:DescribeSnapshots": {
        "body": "ds:DescribeSnapshots",
        "description": "Add 'ds:DescribeSnapshots' action",
        "prefix": "ds:DescribeSnapshots"
    },
    "ds:DescribeTrusts": {
        "body": "ds:DescribeTrusts",
        "description": "Add 'ds:DescribeTrusts' action",
        "prefix": "ds:DescribeTrusts"
    },
    "ds:DisableRadius": {
        "body": "ds:DisableRadius",
        "description": "Add 'ds:DisableRadius' action",
        "prefix": "ds:DisableRadius"
    },
    "ds:DisableSso": {
        "body": "ds:DisableSso",
        "description": "Add 'ds:DisableSso' action",
        "prefix": "ds:DisableSso"
    },
    "ds:EnableRadius": {
        "body": "ds:EnableRadius",
        "description": "Add 'ds:EnableRadius' action",
        "prefix": "ds:EnableRadius"
    },
    "ds:EnableSso": {
        "body": "ds:EnableSso",
        "description": "Add 'ds:EnableSso' action",
        "prefix": "ds:EnableSso"
    },
    "ds:GetDirectoryLimits": {
        "body": "ds:GetDirectoryLimits",
        "description": "Add 'ds:GetDirectoryLimits' action",
        "prefix": "ds:GetDirectoryLimits"
    },
    "ds:GetSnapshotLimits": {
        "body": "ds:GetSnapshotLimits",
        "description": "Add 'ds:GetSnapshotLimits' action",
        "prefix": "ds:GetSnapshotLimits"
    },
    "ds:ListAuthorizedApplications": {
        "body": "ds:ListAuthorizedApplications",
        "description": "Add 'ds:ListAuthorizedApplications' action",
        "prefix": "ds:ListAuthorizedApplications"
    },
    "ds:ListIpRoutes": {
        "body": "ds:ListIpRoutes",
        "description": "Add 'ds:ListIpRoutes' action",
        "prefix": "ds:ListIpRoutes"
    },
    "ds:ListSchemaExtensions": {
        "body": "ds:ListSchemaExtensions",
        "description": "Add 'ds:ListSchemaExtensions' action",
        "prefix": "ds:ListSchemaExtensions"
    },
    "ds:ListTagsForResource": {
        "body": "ds:ListTagsForResource",
        "description": "Add 'ds:ListTagsForResource' action",
        "prefix": "ds:ListTagsForResource"
    },
    "ds:RegisterEventTopic": {
        "body": "ds:RegisterEventTopic",
        "description": "Add 'ds:RegisterEventTopic' action",
        "prefix": "ds:RegisterEventTopic"
    },
    "ds:RemoveIpRoutes": {
        "body": "ds:RemoveIpRoutes",
        "description": "Add 'ds:RemoveIpRoutes' action",
        "prefix": "ds:RemoveIpRoutes"
    },
    "ds:RemoveTagsFromResource": {
        "body": "ds:RemoveTagsFromResource",
        "description": "Add 'ds:RemoveTagsFromResource' action",
        "prefix": "ds:RemoveTagsFromResource"
    },
    "ds:RestoreFromSnapshot": {
        "body": "ds:RestoreFromSnapshot",
        "description": "Add 'ds:RestoreFromSnapshot' action",
        "prefix": "ds:RestoreFromSnapshot"
    },
    "ds:StartSchemaExtension": {
        "body": "ds:StartSchemaExtension",
        "description": "Add 'ds:StartSchemaExtension' action",
        "prefix": "ds:StartSchemaExtension"
    },
    "ds:UnauthorizeApplication": {
        "body": "ds:UnauthorizeApplication",
        "description": "Add 'ds:UnauthorizeApplication' action",
        "prefix": "ds:UnauthorizeApplication"
    },
    "ds:UpdateConditionalForwarder": {
        "body": "ds:UpdateConditionalForwarder",
        "description": "Add 'ds:UpdateConditionalForwarder' action",
        "prefix": "ds:UpdateConditionalForwarder"
    },
    "ds:UpdateRadius": {
        "body": "ds:UpdateRadius",
        "description": "Add 'ds:UpdateRadius' action",
        "prefix": "ds:UpdateRadius"
    },
    "ds:VerifyTrust": {
        "body": "ds:VerifyTrust",
        "description": "Add 'ds:VerifyTrust' action",
        "prefix": "ds:VerifyTrust"
    },
    "dynamodb:BatchGetItem": {
        "body": "dynamodb:BatchGetItem",
        "description": "Add 'dynamodb:BatchGetItem' action",
        "prefix": "dynamodb:BatchGetItem"
    },
    "dynamodb:BatchWriteItem": {
        "body": "dynamodb:BatchWriteItem",
        "description": "Add 'dynamodb:BatchWriteItem' action",
        "prefix": "dynamodb:BatchWriteItem"
    },
    "dynamodb:CreateBackup": {
        "body": "dynamodb:CreateBackup",
        "description": "Add 'dynamodb:CreateBackup' action",
        "prefix": "dynamodb:CreateBackup"
    },
    "dynamodb:CreateTable": {
        "body": "dynamodb:CreateTable",
        "description": "Add 'dynamodb:CreateTable' action",
        "prefix": "dynamodb:CreateTable"
    },
    "dynamodb:DeleteBackup": {
        "body": "dynamodb:DeleteBackup",
        "description": "Add 'dynamodb:DeleteBackup' action",
        "prefix": "dynamodb:DeleteBackup"
    },
    "dynamodb:DeleteItem": {
        "body": "dynamodb:DeleteItem",
        "description": "Add 'dynamodb:DeleteItem' action",
        "prefix": "dynamodb:DeleteItem"
    },
    "dynamodb:DeleteTable": {
        "body": "dynamodb:DeleteTable",
        "description": "Add 'dynamodb:DeleteTable' action",
        "prefix": "dynamodb:DeleteTable"
    },
    "dynamodb:DescribeBackup": {
        "body": "dynamodb:DescribeBackup",
        "description": "Add 'dynamodb:DescribeBackup' action",
        "prefix": "dynamodb:DescribeBackup"
    },
    "dynamodb:DescribeContinuousBackups": {
        "body": "dynamodb:DescribeContinuousBackups",
        "description": "Add 'dynamodb:DescribeContinuousBackups' action",
        "prefix": "dynamodb:DescribeContinuousBackups"
    },
    "dynamodb:DescribeLimits": {
        "body": "dynamodb:DescribeLimits",
        "description": "Add 'dynamodb:DescribeLimits' action",
        "prefix": "dynamodb:DescribeLimits"
    },
    "dynamodb:DescribeReservedCapacity": {
        "body": "dynamodb:DescribeReservedCapacity",
        "description": "Add 'dynamodb:DescribeReservedCapacity' action",
        "prefix": "dynamodb:DescribeReservedCapacity"
    },
    "dynamodb:DescribeReservedCapacityOfferings": {
        "body": "dynamodb:DescribeReservedCapacityOfferings",
        "description": "Add 'dynamodb:DescribeReservedCapacityOfferings' action",
        "prefix": "dynamodb:DescribeReservedCapacityOfferings"
    },
    "dynamodb:DescribeStream": {
        "body": "dynamodb:DescribeStream",
        "description": "Add 'dynamodb:DescribeStream' action",
        "prefix": "dynamodb:DescribeStream"
    },
    "dynamodb:DescribeTable": {
        "body": "dynamodb:DescribeTable",
        "description": "Add 'dynamodb:DescribeTable' action",
        "prefix": "dynamodb:DescribeTable"
    },
    "dynamodb:DescribeTimeToLive": {
        "body": "dynamodb:DescribeTimeToLive",
        "description": "Add 'dynamodb:DescribeTimeToLive' action",
        "prefix": "dynamodb:DescribeTimeToLive"
    },
    "dynamodb:GetItem": {
        "body": "dynamodb:GetItem",
        "description": "Add 'dynamodb:GetItem' action",
        "prefix": "dynamodb:GetItem"
    },
    "dynamodb:GetRecords": {
        "body": "dynamodb:GetRecords",
        "description": "Add 'dynamodb:GetRecords' action",
        "prefix": "dynamodb:GetRecords"
    },
    "dynamodb:GetShardIterator": {
        "body": "dynamodb:GetShardIterator",
        "description": "Add 'dynamodb:GetShardIterator' action",
        "prefix": "dynamodb:GetShardIterator"
    },
    "dynamodb:ListBackups": {
        "body": "dynamodb:ListBackups",
        "description": "Add 'dynamodb:ListBackups' action",
        "prefix": "dynamodb:ListBackups"
    },
    "dynamodb:ListStreams": {
        "body": "dynamodb:ListStreams",
        "description": "Add 'dynamodb:ListStreams' action",
        "prefix": "dynamodb:ListStreams"
    },
    "dynamodb:ListTables": {
        "body": "dynamodb:ListTables",
        "description": "Add 'dynamodb:ListTables' action",
        "prefix": "dynamodb:ListTables"
    },
    "dynamodb:ListTagsOfResource": {
        "body": "dynamodb:ListTagsOfResource",
        "description": "Add 'dynamodb:ListTagsOfResource' action",
        "prefix": "dynamodb:ListTagsOfResource"
    },
    "dynamodb:PurchaseReservedCapacityOfferings": {
        "body": "dynamodb:PurchaseReservedCapacityOfferings",
        "description": "Add 'dynamodb:PurchaseReservedCapacityOfferings' action",
        "prefix": "dynamodb:PurchaseReservedCapacityOfferings"
    },
    "dynamodb:PutItem": {
        "body": "dynamodb:PutItem",
        "description": "Add 'dynamodb:PutItem' action",
        "prefix": "dynamodb:PutItem"
    },
    "dynamodb:Query": {
        "body": "dynamodb:Query",
        "description": "Add 'dynamodb:Query' action",
        "prefix": "dynamodb:Query"
    },
    "dynamodb:RestoreTableFromBackup": {
        "body": "dynamodb:RestoreTableFromBackup",
        "description": "Add 'dynamodb:RestoreTableFromBackup' action",
        "prefix": "dynamodb:RestoreTableFromBackup"
    },
    "dynamodb:RestoreTableToPointInTime": {
        "body": "dynamodb:RestoreTableToPointInTime",
        "description": "Add 'dynamodb:RestoreTableToPointInTime' action",
        "prefix": "dynamodb:RestoreTableToPointInTime"
    },
    "dynamodb:Scan": {
        "body": "dynamodb:Scan",
        "description": "Add 'dynamodb:Scan' action",
        "prefix": "dynamodb:Scan"
    },
    "dynamodb:TagResource": {
        "body": "dynamodb:TagResource",
        "description": "Add 'dynamodb:TagResource' action",
        "prefix": "dynamodb:TagResource"
    },
    "dynamodb:UntagResource": {
        "body": "dynamodb:UntagResource",
        "description": "Add 'dynamodb:UntagResource' action",
        "prefix": "dynamodb:UntagResource"
    },
    "dynamodb:UpdateContinuousBackups": {
        "body": "dynamodb:UpdateContinuousBackups",
        "description": "Add 'dynamodb:UpdateContinuousBackups' action",
        "prefix": "dynamodb:UpdateContinuousBackups"
    },
    "dynamodb:UpdateItem": {
        "body": "dynamodb:UpdateItem",
        "description": "Add 'dynamodb:UpdateItem' action",
        "prefix": "dynamodb:UpdateItem"
    },
    "dynamodb:UpdateTable": {
        "body": "dynamodb:UpdateTable",
        "description": "Add 'dynamodb:UpdateTable' action",
        "prefix": "dynamodb:UpdateTable"
    },
    "dynamodb:UpdateTimeToLive": {
        "body": "dynamodb:UpdateTimeToLive",
        "description": "Add 'dynamodb:UpdateTimeToLive' action",
        "prefix": "dynamodb:UpdateTimeToLive"
    },
    "ec2:AcceptReservedInstancesExchangeQuote": {
        "body": "ec2:AcceptReservedInstancesExchangeQuote",
        "description": "Add 'ec2:AcceptReservedInstancesExchangeQuote' action",
        "prefix": "ec2:AcceptReservedInstancesExchangeQuote"
    },
    "ec2:AcceptVpcEndpointConnections": {
        "body": "ec2:AcceptVpcEndpointConnections",
        "description": "Add 'ec2:AcceptVpcEndpointConnections' action",
        "prefix": "ec2:AcceptVpcEndpointConnections"
    },
    "ec2:AcceptVpcPeeringConnection": {
        "body": "ec2:AcceptVpcPeeringConnection",
        "description": "Add 'ec2:AcceptVpcPeeringConnection' action",
        "prefix": "ec2:AcceptVpcPeeringConnection"
    },
    "ec2:AllocateAddress": {
        "body": "ec2:AllocateAddress",
        "description": "Add 'ec2:AllocateAddress' action",
        "prefix": "ec2:AllocateAddress"
    },
    "ec2:AllocateHosts": {
        "body": "ec2:AllocateHosts",
        "description": "Add 'ec2:AllocateHosts' action",
        "prefix": "ec2:AllocateHosts"
    },
    "ec2:AssignIpv6Addresses": {
        "body": "ec2:AssignIpv6Addresses",
        "description": "Add 'ec2:AssignIpv6Addresses' action",
        "prefix": "ec2:AssignIpv6Addresses"
    },
    "ec2:AssignPrivateIpAddresses": {
        "body": "ec2:AssignPrivateIpAddresses",
        "description": "Add 'ec2:AssignPrivateIpAddresses' action",
        "prefix": "ec2:AssignPrivateIpAddresses"
    },
    "ec2:AssociateAddress": {
        "body": "ec2:AssociateAddress",
        "description": "Add 'ec2:AssociateAddress' action",
        "prefix": "ec2:AssociateAddress"
    },
    "ec2:AssociateDhcpOptions": {
        "body": "ec2:AssociateDhcpOptions",
        "description": "Add 'ec2:AssociateDhcpOptions' action",
        "prefix": "ec2:AssociateDhcpOptions"
    },
    "ec2:AssociateIamInstanceProfile": {
        "body": "ec2:AssociateIamInstanceProfile",
        "description": "Add 'ec2:AssociateIamInstanceProfile' action",
        "prefix": "ec2:AssociateIamInstanceProfile"
    },
    "ec2:AssociateRouteTable": {
        "body": "ec2:AssociateRouteTable",
        "description": "Add 'ec2:AssociateRouteTable' action",
        "prefix": "ec2:AssociateRouteTable"
    },
    "ec2:AssociateSubnetCidrBlock": {
        "body": "ec2:AssociateSubnetCidrBlock",
        "description": "Add 'ec2:AssociateSubnetCidrBlock' action",
        "prefix": "ec2:AssociateSubnetCidrBlock"
    },
    "ec2:AssociateVpcCidrBlock": {
        "body": "ec2:AssociateVpcCidrBlock",
        "description": "Add 'ec2:AssociateVpcCidrBlock' action",
        "prefix": "ec2:AssociateVpcCidrBlock"
    },
    "ec2:AttachClassicLinkVpc": {
        "body": "ec2:AttachClassicLinkVpc",
        "description": "Add 'ec2:AttachClassicLinkVpc' action",
        "prefix": "ec2:AttachClassicLinkVpc"
    },
    "ec2:AttachInternetGateway": {
        "body": "ec2:AttachInternetGateway",
        "description": "Add 'ec2:AttachInternetGateway' action",
        "prefix": "ec2:AttachInternetGateway"
    },
    "ec2:AttachNetworkInterface": {
        "body": "ec2:AttachNetworkInterface",
        "description": "Add 'ec2:AttachNetworkInterface' action",
        "prefix": "ec2:AttachNetworkInterface"
    },
    "ec2:AttachVolume": {
        "body": "ec2:AttachVolume",
        "description": "Add 'ec2:AttachVolume' action",
        "prefix": "ec2:AttachVolume"
    },
    "ec2:AttachVpnGateway": {
        "body": "ec2:AttachVpnGateway",
        "description": "Add 'ec2:AttachVpnGateway' action",
        "prefix": "ec2:AttachVpnGateway"
    },
    "ec2:AuthorizeSecurityGroupEgress": {
        "body": "ec2:AuthorizeSecurityGroupEgress",
        "description": "Add 'ec2:AuthorizeSecurityGroupEgress' action",
        "prefix": "ec2:AuthorizeSecurityGroupEgress"
    },
    "ec2:AuthorizeSecurityGroupIngress": {
        "body": "ec2:AuthorizeSecurityGroupIngress",
        "description": "Add 'ec2:AuthorizeSecurityGroupIngress' action",
        "prefix": "ec2:AuthorizeSecurityGroupIngress"
    },
    "ec2:BundleInstance": {
        "body": "ec2:BundleInstance",
        "description": "Add 'ec2:BundleInstance' action",
        "prefix": "ec2:BundleInstance"
    },
    "ec2:CancelBundleTask": {
        "body": "ec2:CancelBundleTask",
        "description": "Add 'ec2:CancelBundleTask' action",
        "prefix": "ec2:CancelBundleTask"
    },
    "ec2:CancelConversionTask": {
        "body": "ec2:CancelConversionTask",
        "description": "Add 'ec2:CancelConversionTask' action",
        "prefix": "ec2:CancelConversionTask"
    },
    "ec2:CancelExportTask": {
        "body": "ec2:CancelExportTask",
        "description": "Add 'ec2:CancelExportTask' action",
        "prefix": "ec2:CancelExportTask"
    },
    "ec2:CancelImportTask": {
        "body": "ec2:CancelImportTask",
        "description": "Add 'ec2:CancelImportTask' action",
        "prefix": "ec2:CancelImportTask"
    },
    "ec2:CancelReservedInstancesListing": {
        "body": "ec2:CancelReservedInstancesListing",
        "description": "Add 'ec2:CancelReservedInstancesListing' action",
        "prefix": "ec2:CancelReservedInstancesListing"
    },
    "ec2:CancelSpotFleetRequests": {
        "body": "ec2:CancelSpotFleetRequests",
        "description": "Add 'ec2:CancelSpotFleetRequests' action",
        "prefix": "ec2:CancelSpotFleetRequests"
    },
    "ec2:CancelSpotInstanceRequests": {
        "body": "ec2:CancelSpotInstanceRequests",
        "description": "Add 'ec2:CancelSpotInstanceRequests' action",
        "prefix": "ec2:CancelSpotInstanceRequests"
    },
    "ec2:ConfirmProductInstance": {
        "body": "ec2:ConfirmProductInstance",
        "description": "Add 'ec2:ConfirmProductInstance' action",
        "prefix": "ec2:ConfirmProductInstance"
    },
    "ec2:CopyFpgaImage": {
        "body": "ec2:CopyFpgaImage",
        "description": "Add 'ec2:CopyFpgaImage' action",
        "prefix": "ec2:CopyFpgaImage"
    },
    "ec2:CopyImage": {
        "body": "ec2:CopyImage",
        "description": "Add 'ec2:CopyImage' action",
        "prefix": "ec2:CopyImage"
    },
    "ec2:CopySnapshot": {
        "body": "ec2:CopySnapshot",
        "description": "Add 'ec2:CopySnapshot' action",
        "prefix": "ec2:CopySnapshot"
    },
    "ec2:CreateCustomerGateway": {
        "body": "ec2:CreateCustomerGateway",
        "description": "Add 'ec2:CreateCustomerGateway' action",
        "prefix": "ec2:CreateCustomerGateway"
    },
    "ec2:CreateDefaultSubnet": {
        "body": "ec2:CreateDefaultSubnet",
        "description": "Add 'ec2:CreateDefaultSubnet' action",
        "prefix": "ec2:CreateDefaultSubnet"
    },
    "ec2:CreateDefaultVpc": {
        "body": "ec2:CreateDefaultVpc",
        "description": "Add 'ec2:CreateDefaultVpc' action",
        "prefix": "ec2:CreateDefaultVpc"
    },
    "ec2:CreateDhcpOptions": {
        "body": "ec2:CreateDhcpOptions",
        "description": "Add 'ec2:CreateDhcpOptions' action",
        "prefix": "ec2:CreateDhcpOptions"
    },
    "ec2:CreateEgressOnlyInternetGateway": {
        "body": "ec2:CreateEgressOnlyInternetGateway",
        "description": "Add 'ec2:CreateEgressOnlyInternetGateway' action",
        "prefix": "ec2:CreateEgressOnlyInternetGateway"
    },
    "ec2:CreateFlowLogs": {
        "body": "ec2:CreateFlowLogs",
        "description": "Add 'ec2:CreateFlowLogs' action",
        "prefix": "ec2:CreateFlowLogs"
    },
    "ec2:CreateFpgaImage": {
        "body": "ec2:CreateFpgaImage",
        "description": "Add 'ec2:CreateFpgaImage' action",
        "prefix": "ec2:CreateFpgaImage"
    },
    "ec2:CreateImage": {
        "body": "ec2:CreateImage",
        "description": "Add 'ec2:CreateImage' action",
        "prefix": "ec2:CreateImage"
    },
    "ec2:CreateInstanceExportTask": {
        "body": "ec2:CreateInstanceExportTask",
        "description": "Add 'ec2:CreateInstanceExportTask' action",
        "prefix": "ec2:CreateInstanceExportTask"
    },
    "ec2:CreateInternetGateway": {
        "body": "ec2:CreateInternetGateway",
        "description": "Add 'ec2:CreateInternetGateway' action",
        "prefix": "ec2:CreateInternetGateway"
    },
    "ec2:CreateKeyPair": {
        "body": "ec2:CreateKeyPair",
        "description": "Add 'ec2:CreateKeyPair' action",
        "prefix": "ec2:CreateKeyPair"
    },
    "ec2:CreateLaunchTemplate": {
        "body": "ec2:CreateLaunchTemplate",
        "description": "Add 'ec2:CreateLaunchTemplate' action",
        "prefix": "ec2:CreateLaunchTemplate"
    },
    "ec2:CreateLaunchTemplateVersion": {
        "body": "ec2:CreateLaunchTemplateVersion",
        "description": "Add 'ec2:CreateLaunchTemplateVersion' action",
        "prefix": "ec2:CreateLaunchTemplateVersion"
    },
    "ec2:CreateNatGateway": {
        "body": "ec2:CreateNatGateway",
        "description": "Add 'ec2:CreateNatGateway' action",
        "prefix": "ec2:CreateNatGateway"
    },
    "ec2:CreateNetworkAcl": {
        "body": "ec2:CreateNetworkAcl",
        "description": "Add 'ec2:CreateNetworkAcl' action",
        "prefix": "ec2:CreateNetworkAcl"
    },
    "ec2:CreateNetworkAclEntry": {
        "body": "ec2:CreateNetworkAclEntry",
        "description": "Add 'ec2:CreateNetworkAclEntry' action",
        "prefix": "ec2:CreateNetworkAclEntry"
    },
    "ec2:CreateNetworkInterface": {
        "body": "ec2:CreateNetworkInterface",
        "description": "Add 'ec2:CreateNetworkInterface' action",
        "prefix": "ec2:CreateNetworkInterface"
    },
    "ec2:CreateNetworkInterfacePermission": {
        "body": "ec2:CreateNetworkInterfacePermission",
        "description": "Add 'ec2:CreateNetworkInterfacePermission' action",
        "prefix": "ec2:CreateNetworkInterfacePermission"
    },
    "ec2:CreatePlacementGroup": {
        "body": "ec2:CreatePlacementGroup",
        "description": "Add 'ec2:CreatePlacementGroup' action",
        "prefix": "ec2:CreatePlacementGroup"
    },
    "ec2:CreateReservedInstancesListing": {
        "body": "ec2:CreateReservedInstancesListing",
        "description": "Add 'ec2:CreateReservedInstancesListing' action",
        "prefix": "ec2:CreateReservedInstancesListing"
    },
    "ec2:CreateRoute": {
        "body": "ec2:CreateRoute",
        "description": "Add 'ec2:CreateRoute' action",
        "prefix": "ec2:CreateRoute"
    },
    "ec2:CreateRouteTable": {
        "body": "ec2:CreateRouteTable",
        "description": "Add 'ec2:CreateRouteTable' action",
        "prefix": "ec2:CreateRouteTable"
    },
    "ec2:CreateSecurityGroup": {
        "body": "ec2:CreateSecurityGroup",
        "description": "Add 'ec2:CreateSecurityGroup' action",
        "prefix": "ec2:CreateSecurityGroup"
    },
    "ec2:CreateSnapshot": {
        "body": "ec2:CreateSnapshot",
        "description": "Add 'ec2:CreateSnapshot' action",
        "prefix": "ec2:CreateSnapshot"
    },
    "ec2:CreateSpotDatafeedSubscription": {
        "body": "ec2:CreateSpotDatafeedSubscription",
        "description": "Add 'ec2:CreateSpotDatafeedSubscription' action",
        "prefix": "ec2:CreateSpotDatafeedSubscription"
    },
    "ec2:CreateSubnet": {
        "body": "ec2:CreateSubnet",
        "description": "Add 'ec2:CreateSubnet' action",
        "prefix": "ec2:CreateSubnet"
    },
    "ec2:CreateTags": {
        "body": "ec2:CreateTags",
        "description": "Add 'ec2:CreateTags' action",
        "prefix": "ec2:CreateTags"
    },
    "ec2:CreateVolume": {
        "body": "ec2:CreateVolume",
        "description": "Add 'ec2:CreateVolume' action",
        "prefix": "ec2:CreateVolume"
    },
    "ec2:CreateVpc": {
        "body": "ec2:CreateVpc",
        "description": "Add 'ec2:CreateVpc' action",
        "prefix": "ec2:CreateVpc"
    },
    "ec2:CreateVpcEndpoint": {
        "body": "ec2:CreateVpcEndpoint",
        "description": "Add 'ec2:CreateVpcEndpoint' action",
        "prefix": "ec2:CreateVpcEndpoint"
    },
    "ec2:CreateVpcEndpointConnectionNotification": {
        "body": "ec2:CreateVpcEndpointConnectionNotification",
        "description": "Add 'ec2:CreateVpcEndpointConnectionNotification' action",
        "prefix": "ec2:CreateVpcEndpointConnectionNotification"
    },
    "ec2:CreateVpcEndpointServiceConfiguration": {
        "body": "ec2:CreateVpcEndpointServiceConfiguration",
        "description": "Add 'ec2:CreateVpcEndpointServiceConfiguration' action",
        "prefix": "ec2:CreateVpcEndpointServiceConfiguration"
    },
    "ec2:CreateVpcPeeringConnection": {
        "body": "ec2:CreateVpcPeeringConnection",
        "description": "Add 'ec2:CreateVpcPeeringConnection' action",
        "prefix": "ec2:CreateVpcPeeringConnection"
    },
    "ec2:CreateVpnConnection": {
        "body": "ec2:CreateVpnConnection",
        "description": "Add 'ec2:CreateVpnConnection' action",
        "prefix": "ec2:CreateVpnConnection"
    },
    "ec2:CreateVpnConnectionRoute": {
        "body": "ec2:CreateVpnConnectionRoute",
        "description": "Add 'ec2:CreateVpnConnectionRoute' action",
        "prefix": "ec2:CreateVpnConnectionRoute"
    },
    "ec2:CreateVpnGateway": {
        "body": "ec2:CreateVpnGateway",
        "description": "Add 'ec2:CreateVpnGateway' action",
        "prefix": "ec2:CreateVpnGateway"
    },
    "ec2:DeleteCustomerGateway": {
        "body": "ec2:DeleteCustomerGateway",
        "description": "Add 'ec2:DeleteCustomerGateway' action",
        "prefix": "ec2:DeleteCustomerGateway"
    },
    "ec2:DeleteDhcpOptions": {
        "body": "ec2:DeleteDhcpOptions",
        "description": "Add 'ec2:DeleteDhcpOptions' action",
        "prefix": "ec2:DeleteDhcpOptions"
    },
    "ec2:DeleteEgressOnlyInternetGateway": {
        "body": "ec2:DeleteEgressOnlyInternetGateway",
        "description": "Add 'ec2:DeleteEgressOnlyInternetGateway' action",
        "prefix": "ec2:DeleteEgressOnlyInternetGateway"
    },
    "ec2:DeleteFlowLogs": {
        "body": "ec2:DeleteFlowLogs",
        "description": "Add 'ec2:DeleteFlowLogs' action",
        "prefix": "ec2:DeleteFlowLogs"
    },
    "ec2:DeleteFpgaImage": {
        "body": "ec2:DeleteFpgaImage",
        "description": "Add 'ec2:DeleteFpgaImage' action",
        "prefix": "ec2:DeleteFpgaImage"
    },
    "ec2:DeleteInternetGateway": {
        "body": "ec2:DeleteInternetGateway",
        "description": "Add 'ec2:DeleteInternetGateway' action",
        "prefix": "ec2:DeleteInternetGateway"
    },
    "ec2:DeleteKeyPair": {
        "body": "ec2:DeleteKeyPair",
        "description": "Add 'ec2:DeleteKeyPair' action",
        "prefix": "ec2:DeleteKeyPair"
    },
    "ec2:DeleteLaunchTemplate": {
        "body": "ec2:DeleteLaunchTemplate",
        "description": "Add 'ec2:DeleteLaunchTemplate' action",
        "prefix": "ec2:DeleteLaunchTemplate"
    },
    "ec2:DeleteLaunchTemplateVersions": {
        "body": "ec2:DeleteLaunchTemplateVersions",
        "description": "Add 'ec2:DeleteLaunchTemplateVersions' action",
        "prefix": "ec2:DeleteLaunchTemplateVersions"
    },
    "ec2:DeleteNatGateway": {
        "body": "ec2:DeleteNatGateway",
        "description": "Add 'ec2:DeleteNatGateway' action",
        "prefix": "ec2:DeleteNatGateway"
    },
    "ec2:DeleteNetworkAcl": {
        "body": "ec2:DeleteNetworkAcl",
        "description": "Add 'ec2:DeleteNetworkAcl' action",
        "prefix": "ec2:DeleteNetworkAcl"
    },
    "ec2:DeleteNetworkAclEntry": {
        "body": "ec2:DeleteNetworkAclEntry",
        "description": "Add 'ec2:DeleteNetworkAclEntry' action",
        "prefix": "ec2:DeleteNetworkAclEntry"
    },
    "ec2:DeleteNetworkInterface": {
        "body": "ec2:DeleteNetworkInterface",
        "description": "Add 'ec2:DeleteNetworkInterface' action",
        "prefix": "ec2:DeleteNetworkInterface"
    },
    "ec2:DeleteNetworkInterfacePermission": {
        "body": "ec2:DeleteNetworkInterfacePermission",
        "description": "Add 'ec2:DeleteNetworkInterfacePermission' action",
        "prefix": "ec2:DeleteNetworkInterfacePermission"
    },
    "ec2:DeletePlacementGroup": {
        "body": "ec2:DeletePlacementGroup",
        "description": "Add 'ec2:DeletePlacementGroup' action",
        "prefix": "ec2:DeletePlacementGroup"
    },
    "ec2:DeleteRoute": {
        "body": "ec2:DeleteRoute",
        "description": "Add 'ec2:DeleteRoute' action",
        "prefix": "ec2:DeleteRoute"
    },
    "ec2:DeleteRouteTable": {
        "body": "ec2:DeleteRouteTable",
        "description": "Add 'ec2:DeleteRouteTable' action",
        "prefix": "ec2:DeleteRouteTable"
    },
    "ec2:DeleteSecurityGroup": {
        "body": "ec2:DeleteSecurityGroup",
        "description": "Add 'ec2:DeleteSecurityGroup' action",
        "prefix": "ec2:DeleteSecurityGroup"
    },
    "ec2:DeleteSnapshot": {
        "body": "ec2:DeleteSnapshot",
        "description": "Add 'ec2:DeleteSnapshot' action",
        "prefix": "ec2:DeleteSnapshot"
    },
    "ec2:DeleteSpotDatafeedSubscription": {
        "body": "ec2:DeleteSpotDatafeedSubscription",
        "description": "Add 'ec2:DeleteSpotDatafeedSubscription' action",
        "prefix": "ec2:DeleteSpotDatafeedSubscription"
    },
    "ec2:DeleteSubnet": {
        "body": "ec2:DeleteSubnet",
        "description": "Add 'ec2:DeleteSubnet' action",
        "prefix": "ec2:DeleteSubnet"
    },
    "ec2:DeleteTags": {
        "body": "ec2:DeleteTags",
        "description": "Add 'ec2:DeleteTags' action",
        "prefix": "ec2:DeleteTags"
    },
    "ec2:DeleteVolume": {
        "body": "ec2:DeleteVolume",
        "description": "Add 'ec2:DeleteVolume' action",
        "prefix": "ec2:DeleteVolume"
    },
    "ec2:DeleteVpc": {
        "body": "ec2:DeleteVpc",
        "description": "Add 'ec2:DeleteVpc' action",
        "prefix": "ec2:DeleteVpc"
    },
    "ec2:DeleteVpcEndpointConnectionNotifications": {
        "body": "ec2:DeleteVpcEndpointConnectionNotifications",
        "description": "Add 'ec2:DeleteVpcEndpointConnectionNotifications' action",
        "prefix": "ec2:DeleteVpcEndpointConnectionNotifications"
    },
    "ec2:DeleteVpcEndpointServiceConfigurations": {
        "body": "ec2:DeleteVpcEndpointServiceConfigurations",
        "description": "Add 'ec2:DeleteVpcEndpointServiceConfigurations' action",
        "prefix": "ec2:DeleteVpcEndpointServiceConfigurations"
    },
    "ec2:DeleteVpcEndpoints": {
        "body": "ec2:DeleteVpcEndpoints",
        "description": "Add 'ec2:DeleteVpcEndpoints' action",
        "prefix": "ec2:DeleteVpcEndpoints"
    },
    "ec2:DeleteVpcPeeringConnection": {
        "body": "ec2:DeleteVpcPeeringConnection",
        "description": "Add 'ec2:DeleteVpcPeeringConnection' action",
        "prefix": "ec2:DeleteVpcPeeringConnection"
    },
    "ec2:DeleteVpnConnection": {
        "body": "ec2:DeleteVpnConnection",
        "description": "Add 'ec2:DeleteVpnConnection' action",
        "prefix": "ec2:DeleteVpnConnection"
    },
    "ec2:DeleteVpnConnectionRoute": {
        "body": "ec2:DeleteVpnConnectionRoute",
        "description": "Add 'ec2:DeleteVpnConnectionRoute' action",
        "prefix": "ec2:DeleteVpnConnectionRoute"
    },
    "ec2:DeleteVpnGateway": {
        "body": "ec2:DeleteVpnGateway",
        "description": "Add 'ec2:DeleteVpnGateway' action",
        "prefix": "ec2:DeleteVpnGateway"
    },
    "ec2:DeregisterImage": {
        "body": "ec2:DeregisterImage",
        "description": "Add 'ec2:DeregisterImage' action",
        "prefix": "ec2:DeregisterImage"
    },
    "ec2:DescribeAccountAttributes": {
        "body": "ec2:DescribeAccountAttributes",
        "description": "Add 'ec2:DescribeAccountAttributes' action",
        "prefix": "ec2:DescribeAccountAttributes"
    },
    "ec2:DescribeAddresses": {
        "body": "ec2:DescribeAddresses",
        "description": "Add 'ec2:DescribeAddresses' action",
        "prefix": "ec2:DescribeAddresses"
    },
    "ec2:DescribeAvailabilityZones": {
        "body": "ec2:DescribeAvailabilityZones",
        "description": "Add 'ec2:DescribeAvailabilityZones' action",
        "prefix": "ec2:DescribeAvailabilityZones"
    },
    "ec2:DescribeBundleTasks": {
        "body": "ec2:DescribeBundleTasks",
        "description": "Add 'ec2:DescribeBundleTasks' action",
        "prefix": "ec2:DescribeBundleTasks"
    },
    "ec2:DescribeClassicLinkInstances": {
        "body": "ec2:DescribeClassicLinkInstances",
        "description": "Add 'ec2:DescribeClassicLinkInstances' action",
        "prefix": "ec2:DescribeClassicLinkInstances"
    },
    "ec2:DescribeConversionTasks": {
        "body": "ec2:DescribeConversionTasks",
        "description": "Add 'ec2:DescribeConversionTasks' action",
        "prefix": "ec2:DescribeConversionTasks"
    },
    "ec2:DescribeCustomerGateways": {
        "body": "ec2:DescribeCustomerGateways",
        "description": "Add 'ec2:DescribeCustomerGateways' action",
        "prefix": "ec2:DescribeCustomerGateways"
    },
    "ec2:DescribeDhcpOptions": {
        "body": "ec2:DescribeDhcpOptions",
        "description": "Add 'ec2:DescribeDhcpOptions' action",
        "prefix": "ec2:DescribeDhcpOptions"
    },
    "ec2:DescribeEgressOnlyInternetGateways": {
        "body": "ec2:DescribeEgressOnlyInternetGateways",
        "description": "Add 'ec2:DescribeEgressOnlyInternetGateways' action",
        "prefix": "ec2:DescribeEgressOnlyInternetGateways"
    },
    "ec2:DescribeElasticGpus": {
        "body": "ec2:DescribeElasticGpus",
        "description": "Add 'ec2:DescribeElasticGpus' action",
        "prefix": "ec2:DescribeElasticGpus"
    },
    "ec2:DescribeExportTasks": {
        "body": "ec2:DescribeExportTasks",
        "description": "Add 'ec2:DescribeExportTasks' action",
        "prefix": "ec2:DescribeExportTasks"
    },
    "ec2:DescribeFlowLogs": {
        "body": "ec2:DescribeFlowLogs",
        "description": "Add 'ec2:DescribeFlowLogs' action",
        "prefix": "ec2:DescribeFlowLogs"
    },
    "ec2:DescribeFpgaImageAttribute": {
        "body": "ec2:DescribeFpgaImageAttribute",
        "description": "Add 'ec2:DescribeFpgaImageAttribute' action",
        "prefix": "ec2:DescribeFpgaImageAttribute"
    },
    "ec2:DescribeFpgaImages": {
        "body": "ec2:DescribeFpgaImages",
        "description": "Add 'ec2:DescribeFpgaImages' action",
        "prefix": "ec2:DescribeFpgaImages"
    },
    "ec2:DescribeHostReservationOfferings": {
        "body": "ec2:DescribeHostReservationOfferings",
        "description": "Add 'ec2:DescribeHostReservationOfferings' action",
        "prefix": "ec2:DescribeHostReservationOfferings"
    },
    "ec2:DescribeHostReservations": {
        "body": "ec2:DescribeHostReservations",
        "description": "Add 'ec2:DescribeHostReservations' action",
        "prefix": "ec2:DescribeHostReservations"
    },
    "ec2:DescribeHosts": {
        "body": "ec2:DescribeHosts",
        "description": "Add 'ec2:DescribeHosts' action",
        "prefix": "ec2:DescribeHosts"
    },
    "ec2:DescribeIamInstanceProfileAssociations": {
        "body": "ec2:DescribeIamInstanceProfileAssociations",
        "description": "Add 'ec2:DescribeIamInstanceProfileAssociations' action",
        "prefix": "ec2:DescribeIamInstanceProfileAssociations"
    },
    "ec2:DescribeIdFormat": {
        "body": "ec2:DescribeIdFormat",
        "description": "Add 'ec2:DescribeIdFormat' action",
        "prefix": "ec2:DescribeIdFormat"
    },
    "ec2:DescribeIdentityIdFormat": {
        "body": "ec2:DescribeIdentityIdFormat",
        "description": "Add 'ec2:DescribeIdentityIdFormat' action",
        "prefix": "ec2:DescribeIdentityIdFormat"
    },
    "ec2:DescribeImageAttribute": {
        "body": "ec2:DescribeImageAttribute",
        "description": "Add 'ec2:DescribeImageAttribute' action",
        "prefix": "ec2:DescribeImageAttribute"
    },
    "ec2:DescribeImages": {
        "body": "ec2:DescribeImages",
        "description": "Add 'ec2:DescribeImages' action",
        "prefix": "ec2:DescribeImages"
    },
    "ec2:DescribeImportImageTasks": {
        "body": "ec2:DescribeImportImageTasks",
        "description": "Add 'ec2:DescribeImportImageTasks' action",
        "prefix": "ec2:DescribeImportImageTasks"
    },
    "ec2:DescribeImportSnapshotTasks": {
        "body": "ec2:DescribeImportSnapshotTasks",
        "description": "Add 'ec2:DescribeImportSnapshotTasks' action",
        "prefix": "ec2:DescribeImportSnapshotTasks"
    },
    "ec2:DescribeInstanceAttribute": {
        "body": "ec2:DescribeInstanceAttribute",
        "description": "Add 'ec2:DescribeInstanceAttribute' action",
        "prefix": "ec2:DescribeInstanceAttribute"
    },
    "ec2:DescribeInstanceCreditSpecifications": {
        "body": "ec2:DescribeInstanceCreditSpecifications",
        "description": "Add 'ec2:DescribeInstanceCreditSpecifications' action",
        "prefix": "ec2:DescribeInstanceCreditSpecifications"
    },
    "ec2:DescribeInstanceStatus": {
        "body": "ec2:DescribeInstanceStatus",
        "description": "Add 'ec2:DescribeInstanceStatus' action",
        "prefix": "ec2:DescribeInstanceStatus"
    },
    "ec2:DescribeInstances": {
        "body": "ec2:DescribeInstances",
        "description": "Add 'ec2:DescribeInstances' action",
        "prefix": "ec2:DescribeInstances"
    },
    "ec2:DescribeInternetGateways": {
        "body": "ec2:DescribeInternetGateways",
        "description": "Add 'ec2:DescribeInternetGateways' action",
        "prefix": "ec2:DescribeInternetGateways"
    },
    "ec2:DescribeKeyPairs": {
        "body": "ec2:DescribeKeyPairs",
        "description": "Add 'ec2:DescribeKeyPairs' action",
        "prefix": "ec2:DescribeKeyPairs"
    },
    "ec2:DescribeLaunchTemplateVersions": {
        "body": "ec2:DescribeLaunchTemplateVersions",
        "description": "Add 'ec2:DescribeLaunchTemplateVersions' action",
        "prefix": "ec2:DescribeLaunchTemplateVersions"
    },
    "ec2:DescribeLaunchTemplates": {
        "body": "ec2:DescribeLaunchTemplates",
        "description": "Add 'ec2:DescribeLaunchTemplates' action",
        "prefix": "ec2:DescribeLaunchTemplates"
    },
    "ec2:DescribeMovingAddresses": {
        "body": "ec2:DescribeMovingAddresses",
        "description": "Add 'ec2:DescribeMovingAddresses' action",
        "prefix": "ec2:DescribeMovingAddresses"
    },
    "ec2:DescribeNatGateways": {
        "body": "ec2:DescribeNatGateways",
        "description": "Add 'ec2:DescribeNatGateways' action",
        "prefix": "ec2:DescribeNatGateways"
    },
    "ec2:DescribeNetworkAcls": {
        "body": "ec2:DescribeNetworkAcls",
        "description": "Add 'ec2:DescribeNetworkAcls' action",
        "prefix": "ec2:DescribeNetworkAcls"
    },
    "ec2:DescribeNetworkInterfaceAttribute": {
        "body": "ec2:DescribeNetworkInterfaceAttribute",
        "description": "Add 'ec2:DescribeNetworkInterfaceAttribute' action",
        "prefix": "ec2:DescribeNetworkInterfaceAttribute"
    },
    "ec2:DescribeNetworkInterfacePermissions": {
        "body": "ec2:DescribeNetworkInterfacePermissions",
        "description": "Add 'ec2:DescribeNetworkInterfacePermissions' action",
        "prefix": "ec2:DescribeNetworkInterfacePermissions"
    },
    "ec2:DescribeNetworkInterfaces": {
        "body": "ec2:DescribeNetworkInterfaces",
        "description": "Add 'ec2:DescribeNetworkInterfaces' action",
        "prefix": "ec2:DescribeNetworkInterfaces"
    },
    "ec2:DescribePlacementGroups": {
        "body": "ec2:DescribePlacementGroups",
        "description": "Add 'ec2:DescribePlacementGroups' action",
        "prefix": "ec2:DescribePlacementGroups"
    },
    "ec2:DescribePrefixLists": {
        "body": "ec2:DescribePrefixLists",
        "description": "Add 'ec2:DescribePrefixLists' action",
        "prefix": "ec2:DescribePrefixLists"
    },
    "ec2:DescribeRegions": {
        "body": "ec2:DescribeRegions",
        "description": "Add 'ec2:DescribeRegions' action",
        "prefix": "ec2:DescribeRegions"
    },
    "ec2:DescribeReservedInstances": {
        "body": "ec2:DescribeReservedInstances",
        "description": "Add 'ec2:DescribeReservedInstances' action",
        "prefix": "ec2:DescribeReservedInstances"
    },
    "ec2:DescribeReservedInstancesListings": {
        "body": "ec2:DescribeReservedInstancesListings",
        "description": "Add 'ec2:DescribeReservedInstancesListings' action",
        "prefix": "ec2:DescribeReservedInstancesListings"
    },
    "ec2:DescribeReservedInstancesModifications": {
        "body": "ec2:DescribeReservedInstancesModifications",
        "description": "Add 'ec2:DescribeReservedInstancesModifications' action",
        "prefix": "ec2:DescribeReservedInstancesModifications"
    },
    "ec2:DescribeReservedInstancesOfferings": {
        "body": "ec2:DescribeReservedInstancesOfferings",
        "description": "Add 'ec2:DescribeReservedInstancesOfferings' action",
        "prefix": "ec2:DescribeReservedInstancesOfferings"
    },
    "ec2:DescribeRouteTables": {
        "body": "ec2:DescribeRouteTables",
        "description": "Add 'ec2:DescribeRouteTables' action",
        "prefix": "ec2:DescribeRouteTables"
    },
    "ec2:DescribeScheduledInstanceAvailability": {
        "body": "ec2:DescribeScheduledInstanceAvailability",
        "description": "Add 'ec2:DescribeScheduledInstanceAvailability' action",
        "prefix": "ec2:DescribeScheduledInstanceAvailability"
    },
    "ec2:DescribeScheduledInstances": {
        "body": "ec2:DescribeScheduledInstances",
        "description": "Add 'ec2:DescribeScheduledInstances' action",
        "prefix": "ec2:DescribeScheduledInstances"
    },
    "ec2:DescribeSecurityGroupReferences": {
        "body": "ec2:DescribeSecurityGroupReferences",
        "description": "Add 'ec2:DescribeSecurityGroupReferences' action",
        "prefix": "ec2:DescribeSecurityGroupReferences"
    },
    "ec2:DescribeSecurityGroups": {
        "body": "ec2:DescribeSecurityGroups",
        "description": "Add 'ec2:DescribeSecurityGroups' action",
        "prefix": "ec2:DescribeSecurityGroups"
    },
    "ec2:DescribeSnapshotAttribute": {
        "body": "ec2:DescribeSnapshotAttribute",
        "description": "Add 'ec2:DescribeSnapshotAttribute' action",
        "prefix": "ec2:DescribeSnapshotAttribute"
    },
    "ec2:DescribeSnapshots": {
        "body": "ec2:DescribeSnapshots",
        "description": "Add 'ec2:DescribeSnapshots' action",
        "prefix": "ec2:DescribeSnapshots"
    },
    "ec2:DescribeSpotDatafeedSubscription": {
        "body": "ec2:DescribeSpotDatafeedSubscription",
        "description": "Add 'ec2:DescribeSpotDatafeedSubscription' action",
        "prefix": "ec2:DescribeSpotDatafeedSubscription"
    },
    "ec2:DescribeSpotFleetInstances": {
        "body": "ec2:DescribeSpotFleetInstances",
        "description": "Add 'ec2:DescribeSpotFleetInstances' action",
        "prefix": "ec2:DescribeSpotFleetInstances"
    },
    "ec2:DescribeSpotFleetRequestHistory": {
        "body": "ec2:DescribeSpotFleetRequestHistory",
        "description": "Add 'ec2:DescribeSpotFleetRequestHistory' action",
        "prefix": "ec2:DescribeSpotFleetRequestHistory"
    },
    "ec2:DescribeSpotFleetRequests": {
        "body": "ec2:DescribeSpotFleetRequests",
        "description": "Add 'ec2:DescribeSpotFleetRequests' action",
        "prefix": "ec2:DescribeSpotFleetRequests"
    },
    "ec2:DescribeSpotInstanceRequests": {
        "body": "ec2:DescribeSpotInstanceRequests",
        "description": "Add 'ec2:DescribeSpotInstanceRequests' action",
        "prefix": "ec2:DescribeSpotInstanceRequests"
    },
    "ec2:DescribeSpotPriceHistory": {
        "body": "ec2:DescribeSpotPriceHistory",
        "description": "Add 'ec2:DescribeSpotPriceHistory' action",
        "prefix": "ec2:DescribeSpotPriceHistory"
    },
    "ec2:DescribeStaleSecurityGroups": {
        "body": "ec2:DescribeStaleSecurityGroups",
        "description": "Add 'ec2:DescribeStaleSecurityGroups' action",
        "prefix": "ec2:DescribeStaleSecurityGroups"
    },
    "ec2:DescribeSubnets": {
        "body": "ec2:DescribeSubnets",
        "description": "Add 'ec2:DescribeSubnets' action",
        "prefix": "ec2:DescribeSubnets"
    },
    "ec2:DescribeTags": {
        "body": "ec2:DescribeTags",
        "description": "Add 'ec2:DescribeTags' action",
        "prefix": "ec2:DescribeTags"
    },
    "ec2:DescribeVolumeAttribute": {
        "body": "ec2:DescribeVolumeAttribute",
        "description": "Add 'ec2:DescribeVolumeAttribute' action",
        "prefix": "ec2:DescribeVolumeAttribute"
    },
    "ec2:DescribeVolumeStatus": {
        "body": "ec2:DescribeVolumeStatus",
        "description": "Add 'ec2:DescribeVolumeStatus' action",
        "prefix": "ec2:DescribeVolumeStatus"
    },
    "ec2:DescribeVolumes": {
        "body": "ec2:DescribeVolumes",
        "description": "Add 'ec2:DescribeVolumes' action",
        "prefix": "ec2:DescribeVolumes"
    },
    "ec2:DescribeVolumesModifications": {
        "body": "ec2:DescribeVolumesModifications",
        "description": "Add 'ec2:DescribeVolumesModifications' action",
        "prefix": "ec2:DescribeVolumesModifications"
    },
    "ec2:DescribeVpcAttribute": {
        "body": "ec2:DescribeVpcAttribute",
        "description": "Add 'ec2:DescribeVpcAttribute' action",
        "prefix": "ec2:DescribeVpcAttribute"
    },
    "ec2:DescribeVpcClassicLink": {
        "body": "ec2:DescribeVpcClassicLink",
        "description": "Add 'ec2:DescribeVpcClassicLink' action",
        "prefix": "ec2:DescribeVpcClassicLink"
    },
    "ec2:DescribeVpcClassicLinkDnsSupport": {
        "body": "ec2:DescribeVpcClassicLinkDnsSupport",
        "description": "Add 'ec2:DescribeVpcClassicLinkDnsSupport' action",
        "prefix": "ec2:DescribeVpcClassicLinkDnsSupport"
    },
    "ec2:DescribeVpcEndpointConnectionNotifications": {
        "body": "ec2:DescribeVpcEndpointConnectionNotifications",
        "description": "Add 'ec2:DescribeVpcEndpointConnectionNotifications' action",
        "prefix": "ec2:DescribeVpcEndpointConnectionNotifications"
    },
    "ec2:DescribeVpcEndpointConnections": {
        "body": "ec2:DescribeVpcEndpointConnections",
        "description": "Add 'ec2:DescribeVpcEndpointConnections' action",
        "prefix": "ec2:DescribeVpcEndpointConnections"
    },
    "ec2:DescribeVpcEndpointServiceConfigurations": {
        "body": "ec2:DescribeVpcEndpointServiceConfigurations",
        "description": "Add 'ec2:DescribeVpcEndpointServiceConfigurations' action",
        "prefix": "ec2:DescribeVpcEndpointServiceConfigurations"
    },
    "ec2:DescribeVpcEndpointServicePermissions": {
        "body": "ec2:DescribeVpcEndpointServicePermissions",
        "description": "Add 'ec2:DescribeVpcEndpointServicePermissions' action",
        "prefix": "ec2:DescribeVpcEndpointServicePermissions"
    },
    "ec2:DescribeVpcEndpointServices": {
        "body": "ec2:DescribeVpcEndpointServices",
        "description": "Add 'ec2:DescribeVpcEndpointServices' action",
        "prefix": "ec2:DescribeVpcEndpointServices"
    },
    "ec2:DescribeVpcEndpoints": {
        "body": "ec2:DescribeVpcEndpoints",
        "description": "Add 'ec2:DescribeVpcEndpoints' action",
        "prefix": "ec2:DescribeVpcEndpoints"
    },
    "ec2:DescribeVpcPeeringConnections": {
        "body": "ec2:DescribeVpcPeeringConnections",
        "description": "Add 'ec2:DescribeVpcPeeringConnections' action",
        "prefix": "ec2:DescribeVpcPeeringConnections"
    },
    "ec2:DescribeVpcs": {
        "body": "ec2:DescribeVpcs",
        "description": "Add 'ec2:DescribeVpcs' action",
        "prefix": "ec2:DescribeVpcs"
    },
    "ec2:DescribeVpnConnections": {
        "body": "ec2:DescribeVpnConnections",
        "description": "Add 'ec2:DescribeVpnConnections' action",
        "prefix": "ec2:DescribeVpnConnections"
    },
    "ec2:DescribeVpnGateways": {
        "body": "ec2:DescribeVpnGateways",
        "description": "Add 'ec2:DescribeVpnGateways' action",
        "prefix": "ec2:DescribeVpnGateways"
    },
    "ec2:DetachClassicLinkVpc": {
        "body": "ec2:DetachClassicLinkVpc",
        "description": "Add 'ec2:DetachClassicLinkVpc' action",
        "prefix": "ec2:DetachClassicLinkVpc"
    },
    "ec2:DetachInternetGateway": {
        "body": "ec2:DetachInternetGateway",
        "description": "Add 'ec2:DetachInternetGateway' action",
        "prefix": "ec2:DetachInternetGateway"
    },
    "ec2:DetachNetworkInterface": {
        "body": "ec2:DetachNetworkInterface",
        "description": "Add 'ec2:DetachNetworkInterface' action",
        "prefix": "ec2:DetachNetworkInterface"
    },
    "ec2:DetachVolume": {
        "body": "ec2:DetachVolume",
        "description": "Add 'ec2:DetachVolume' action",
        "prefix": "ec2:DetachVolume"
    },
    "ec2:DetachVpnGateway": {
        "body": "ec2:DetachVpnGateway",
        "description": "Add 'ec2:DetachVpnGateway' action",
        "prefix": "ec2:DetachVpnGateway"
    },
    "ec2:DisableVgwRoutePropagation": {
        "body": "ec2:DisableVgwRoutePropagation",
        "description": "Add 'ec2:DisableVgwRoutePropagation' action",
        "prefix": "ec2:DisableVgwRoutePropagation"
    },
    "ec2:DisableVpcClassicLink": {
        "body": "ec2:DisableVpcClassicLink",
        "description": "Add 'ec2:DisableVpcClassicLink' action",
        "prefix": "ec2:DisableVpcClassicLink"
    },
    "ec2:DisableVpcClassicLinkDnsSupport": {
        "body": "ec2:DisableVpcClassicLinkDnsSupport",
        "description": "Add 'ec2:DisableVpcClassicLinkDnsSupport' action",
        "prefix": "ec2:DisableVpcClassicLinkDnsSupport"
    },
    "ec2:DisassociateAddress": {
        "body": "ec2:DisassociateAddress",
        "description": "Add 'ec2:DisassociateAddress' action",
        "prefix": "ec2:DisassociateAddress"
    },
    "ec2:DisassociateIamInstanceProfile": {
        "body": "ec2:DisassociateIamInstanceProfile",
        "description": "Add 'ec2:DisassociateIamInstanceProfile' action",
        "prefix": "ec2:DisassociateIamInstanceProfile"
    },
    "ec2:DisassociateRouteTable": {
        "body": "ec2:DisassociateRouteTable",
        "description": "Add 'ec2:DisassociateRouteTable' action",
        "prefix": "ec2:DisassociateRouteTable"
    },
    "ec2:DisassociateSubnetCidrBlock": {
        "body": "ec2:DisassociateSubnetCidrBlock",
        "description": "Add 'ec2:DisassociateSubnetCidrBlock' action",
        "prefix": "ec2:DisassociateSubnetCidrBlock"
    },
    "ec2:DisassociateVpcCidrBlock": {
        "body": "ec2:DisassociateVpcCidrBlock",
        "description": "Add 'ec2:DisassociateVpcCidrBlock' action",
        "prefix": "ec2:DisassociateVpcCidrBlock"
    },
    "ec2:EnableVgwRoutePropagation": {
        "body": "ec2:EnableVgwRoutePropagation",
        "description": "Add 'ec2:EnableVgwRoutePropagation' action",
        "prefix": "ec2:EnableVgwRoutePropagation"
    },
    "ec2:EnableVolumeIO": {
        "body": "ec2:EnableVolumeIO",
        "description": "Add 'ec2:EnableVolumeIO' action",
        "prefix": "ec2:EnableVolumeIO"
    },
    "ec2:EnableVpcClassicLink": {
        "body": "ec2:EnableVpcClassicLink",
        "description": "Add 'ec2:EnableVpcClassicLink' action",
        "prefix": "ec2:EnableVpcClassicLink"
    },
    "ec2:EnableVpcClassicLinkDnsSupport": {
        "body": "ec2:EnableVpcClassicLinkDnsSupport",
        "description": "Add 'ec2:EnableVpcClassicLinkDnsSupport' action",
        "prefix": "ec2:EnableVpcClassicLinkDnsSupport"
    },
    "ec2:GetConsoleOutput": {
        "body": "ec2:GetConsoleOutput",
        "description": "Add 'ec2:GetConsoleOutput' action",
        "prefix": "ec2:GetConsoleOutput"
    },
    "ec2:GetConsoleScreenshot": {
        "body": "ec2:GetConsoleScreenshot",
        "description": "Add 'ec2:GetConsoleScreenshot' action",
        "prefix": "ec2:GetConsoleScreenshot"
    },
    "ec2:GetHostReservationPurchasePreview": {
        "body": "ec2:GetHostReservationPurchasePreview",
        "description": "Add 'ec2:GetHostReservationPurchasePreview' action",
        "prefix": "ec2:GetHostReservationPurchasePreview"
    },
    "ec2:GetLaunchTemplateData": {
        "body": "ec2:GetLaunchTemplateData",
        "description": "Add 'ec2:GetLaunchTemplateData' action",
        "prefix": "ec2:GetLaunchTemplateData"
    },
    "ec2:GetPasswordData": {
        "body": "ec2:GetPasswordData",
        "description": "Add 'ec2:GetPasswordData' action",
        "prefix": "ec2:GetPasswordData"
    },
    "ec2:GetReservedInstancesExchangeQuote": {
        "body": "ec2:GetReservedInstancesExchangeQuote",
        "description": "Add 'ec2:GetReservedInstancesExchangeQuote' action",
        "prefix": "ec2:GetReservedInstancesExchangeQuote"
    },
    "ec2:ImportImage": {
        "body": "ec2:ImportImage",
        "description": "Add 'ec2:ImportImage' action",
        "prefix": "ec2:ImportImage"
    },
    "ec2:ImportInstance": {
        "body": "ec2:ImportInstance",
        "description": "Add 'ec2:ImportInstance' action",
        "prefix": "ec2:ImportInstance"
    },
    "ec2:ImportKeyPair": {
        "body": "ec2:ImportKeyPair",
        "description": "Add 'ec2:ImportKeyPair' action",
        "prefix": "ec2:ImportKeyPair"
    },
    "ec2:ImportSnapshot": {
        "body": "ec2:ImportSnapshot",
        "description": "Add 'ec2:ImportSnapshot' action",
        "prefix": "ec2:ImportSnapshot"
    },
    "ec2:ImportVolume": {
        "body": "ec2:ImportVolume",
        "description": "Add 'ec2:ImportVolume' action",
        "prefix": "ec2:ImportVolume"
    },
    "ec2:ModifyFpgaImageAttribute": {
        "body": "ec2:ModifyFpgaImageAttribute",
        "description": "Add 'ec2:ModifyFpgaImageAttribute' action",
        "prefix": "ec2:ModifyFpgaImageAttribute"
    },
    "ec2:ModifyHosts": {
        "body": "ec2:ModifyHosts",
        "description": "Add 'ec2:ModifyHosts' action",
        "prefix": "ec2:ModifyHosts"
    },
    "ec2:ModifyIdFormat": {
        "body": "ec2:ModifyIdFormat",
        "description": "Add 'ec2:ModifyIdFormat' action",
        "prefix": "ec2:ModifyIdFormat"
    },
    "ec2:ModifyIdentityIdFormat": {
        "body": "ec2:ModifyIdentityIdFormat",
        "description": "Add 'ec2:ModifyIdentityIdFormat' action",
        "prefix": "ec2:ModifyIdentityIdFormat"
    },
    "ec2:ModifyImageAttribute": {
        "body": "ec2:ModifyImageAttribute",
        "description": "Add 'ec2:ModifyImageAttribute' action",
        "prefix": "ec2:ModifyImageAttribute"
    },
    "ec2:ModifyInstanceAttribute": {
        "body": "ec2:ModifyInstanceAttribute",
        "description": "Add 'ec2:ModifyInstanceAttribute' action",
        "prefix": "ec2:ModifyInstanceAttribute"
    },
    "ec2:ModifyInstanceCreditSpecification": {
        "body": "ec2:ModifyInstanceCreditSpecification",
        "description": "Add 'ec2:ModifyInstanceCreditSpecification' action",
        "prefix": "ec2:ModifyInstanceCreditSpecification"
    },
    "ec2:ModifyInstancePlacement": {
        "body": "ec2:ModifyInstancePlacement",
        "description": "Add 'ec2:ModifyInstancePlacement' action",
        "prefix": "ec2:ModifyInstancePlacement"
    },
    "ec2:ModifyLaunchTemplate": {
        "body": "ec2:ModifyLaunchTemplate",
        "description": "Add 'ec2:ModifyLaunchTemplate' action",
        "prefix": "ec2:ModifyLaunchTemplate"
    },
    "ec2:ModifyNetworkInterfaceAttribute": {
        "body": "ec2:ModifyNetworkInterfaceAttribute",
        "description": "Add 'ec2:ModifyNetworkInterfaceAttribute' action",
        "prefix": "ec2:ModifyNetworkInterfaceAttribute"
    },
    "ec2:ModifyReservedInstances": {
        "body": "ec2:ModifyReservedInstances",
        "description": "Add 'ec2:ModifyReservedInstances' action",
        "prefix": "ec2:ModifyReservedInstances"
    },
    "ec2:ModifySnapshotAttribute": {
        "body": "ec2:ModifySnapshotAttribute",
        "description": "Add 'ec2:ModifySnapshotAttribute' action",
        "prefix": "ec2:ModifySnapshotAttribute"
    },
    "ec2:ModifySpotFleetRequest": {
        "body": "ec2:ModifySpotFleetRequest",
        "description": "Add 'ec2:ModifySpotFleetRequest' action",
        "prefix": "ec2:ModifySpotFleetRequest"
    },
    "ec2:ModifySubnetAttribute": {
        "body": "ec2:ModifySubnetAttribute",
        "description": "Add 'ec2:ModifySubnetAttribute' action",
        "prefix": "ec2:ModifySubnetAttribute"
    },
    "ec2:ModifyVolume": {
        "body": "ec2:ModifyVolume",
        "description": "Add 'ec2:ModifyVolume' action",
        "prefix": "ec2:ModifyVolume"
    },
    "ec2:ModifyVolumeAttribute": {
        "body": "ec2:ModifyVolumeAttribute",
        "description": "Add 'ec2:ModifyVolumeAttribute' action",
        "prefix": "ec2:ModifyVolumeAttribute"
    },
    "ec2:ModifyVpcAttribute": {
        "body": "ec2:ModifyVpcAttribute",
        "description": "Add 'ec2:ModifyVpcAttribute' action",
        "prefix": "ec2:ModifyVpcAttribute"
    },
    "ec2:ModifyVpcEndpoint": {
        "body": "ec2:ModifyVpcEndpoint",
        "description": "Add 'ec2:ModifyVpcEndpoint' action",
        "prefix": "ec2:ModifyVpcEndpoint"
    },
    "ec2:ModifyVpcEndpointConnectionNotification": {
        "body": "ec2:ModifyVpcEndpointConnectionNotification",
        "description": "Add 'ec2:ModifyVpcEndpointConnectionNotification' action",
        "prefix": "ec2:ModifyVpcEndpointConnectionNotification"
    },
    "ec2:ModifyVpcEndpointServiceConfiguration": {
        "body": "ec2:ModifyVpcEndpointServiceConfiguration",
        "description": "Add 'ec2:ModifyVpcEndpointServiceConfiguration' action",
        "prefix": "ec2:ModifyVpcEndpointServiceConfiguration"
    },
    "ec2:ModifyVpcEndpointServicePermissions": {
        "body": "ec2:ModifyVpcEndpointServicePermissions",
        "description": "Add 'ec2:ModifyVpcEndpointServicePermissions' action",
        "prefix": "ec2:ModifyVpcEndpointServicePermissions"
    },
    "ec2:ModifyVpcPeeringConnectionOptions": {
        "body": "ec2:ModifyVpcPeeringConnectionOptions",
        "description": "Add 'ec2:ModifyVpcPeeringConnectionOptions' action",
        "prefix": "ec2:ModifyVpcPeeringConnectionOptions"
    },
    "ec2:ModifyVpcTenancy": {
        "body": "ec2:ModifyVpcTenancy",
        "description": "Add 'ec2:ModifyVpcTenancy' action",
        "prefix": "ec2:ModifyVpcTenancy"
    },
    "ec2:MonitorInstances": {
        "body": "ec2:MonitorInstances",
        "description": "Add 'ec2:MonitorInstances' action",
        "prefix": "ec2:MonitorInstances"
    },
    "ec2:MoveAddressToVpc": {
        "body": "ec2:MoveAddressToVpc",
        "description": "Add 'ec2:MoveAddressToVpc' action",
        "prefix": "ec2:MoveAddressToVpc"
    },
    "ec2:PurchaseHostReservation": {
        "body": "ec2:PurchaseHostReservation",
        "description": "Add 'ec2:PurchaseHostReservation' action",
        "prefix": "ec2:PurchaseHostReservation"
    },
    "ec2:PurchaseReservedInstancesOffering": {
        "body": "ec2:PurchaseReservedInstancesOffering",
        "description": "Add 'ec2:PurchaseReservedInstancesOffering' action",
        "prefix": "ec2:PurchaseReservedInstancesOffering"
    },
    "ec2:PurchaseScheduledInstances": {
        "body": "ec2:PurchaseScheduledInstances",
        "description": "Add 'ec2:PurchaseScheduledInstances' action",
        "prefix": "ec2:PurchaseScheduledInstances"
    },
    "ec2:RebootInstances": {
        "body": "ec2:RebootInstances",
        "description": "Add 'ec2:RebootInstances' action",
        "prefix": "ec2:RebootInstances"
    },
    "ec2:RegisterImage": {
        "body": "ec2:RegisterImage",
        "description": "Add 'ec2:RegisterImage' action",
        "prefix": "ec2:RegisterImage"
    },
    "ec2:RejectVpcEndpointConnections": {
        "body": "ec2:RejectVpcEndpointConnections",
        "description": "Add 'ec2:RejectVpcEndpointConnections' action",
        "prefix": "ec2:RejectVpcEndpointConnections"
    },
    "ec2:RejectVpcPeeringConnection": {
        "body": "ec2:RejectVpcPeeringConnection",
        "description": "Add 'ec2:RejectVpcPeeringConnection' action",
        "prefix": "ec2:RejectVpcPeeringConnection"
    },
    "ec2:ReleaseAddress": {
        "body": "ec2:ReleaseAddress",
        "description": "Add 'ec2:ReleaseAddress' action",
        "prefix": "ec2:ReleaseAddress"
    },
    "ec2:ReleaseHosts": {
        "body": "ec2:ReleaseHosts",
        "description": "Add 'ec2:ReleaseHosts' action",
        "prefix": "ec2:ReleaseHosts"
    },
    "ec2:ReplaceIamInstanceProfileAssociation": {
        "body": "ec2:ReplaceIamInstanceProfileAssociation",
        "description": "Add 'ec2:ReplaceIamInstanceProfileAssociation' action",
        "prefix": "ec2:ReplaceIamInstanceProfileAssociation"
    },
    "ec2:ReplaceNetworkAclAssociation": {
        "body": "ec2:ReplaceNetworkAclAssociation",
        "description": "Add 'ec2:ReplaceNetworkAclAssociation' action",
        "prefix": "ec2:ReplaceNetworkAclAssociation"
    },
    "ec2:ReplaceNetworkAclEntry": {
        "body": "ec2:ReplaceNetworkAclEntry",
        "description": "Add 'ec2:ReplaceNetworkAclEntry' action",
        "prefix": "ec2:ReplaceNetworkAclEntry"
    },
    "ec2:ReplaceRoute": {
        "body": "ec2:ReplaceRoute",
        "description": "Add 'ec2:ReplaceRoute' action",
        "prefix": "ec2:ReplaceRoute"
    },
    "ec2:ReplaceRouteTableAssociation": {
        "body": "ec2:ReplaceRouteTableAssociation",
        "description": "Add 'ec2:ReplaceRouteTableAssociation' action",
        "prefix": "ec2:ReplaceRouteTableAssociation"
    },
    "ec2:ReportInstanceStatus": {
        "body": "ec2:ReportInstanceStatus",
        "description": "Add 'ec2:ReportInstanceStatus' action",
        "prefix": "ec2:ReportInstanceStatus"
    },
    "ec2:RequestSpotFleet": {
        "body": "ec2:RequestSpotFleet",
        "description": "Add 'ec2:RequestSpotFleet' action",
        "prefix": "ec2:RequestSpotFleet"
    },
    "ec2:RequestSpotInstances": {
        "body": "ec2:RequestSpotInstances",
        "description": "Add 'ec2:RequestSpotInstances' action",
        "prefix": "ec2:RequestSpotInstances"
    },
    "ec2:ResetFpgaImageAttribute": {
        "body": "ec2:ResetFpgaImageAttribute",
        "description": "Add 'ec2:ResetFpgaImageAttribute' action",
        "prefix": "ec2:ResetFpgaImageAttribute"
    },
    "ec2:ResetImageAttribute": {
        "body": "ec2:ResetImageAttribute",
        "description": "Add 'ec2:ResetImageAttribute' action",
        "prefix": "ec2:ResetImageAttribute"
    },
    "ec2:ResetInstanceAttribute": {
        "body": "ec2:ResetInstanceAttribute",
        "description": "Add 'ec2:ResetInstanceAttribute' action",
        "prefix": "ec2:ResetInstanceAttribute"
    },
    "ec2:ResetNetworkInterfaceAttribute": {
        "body": "ec2:ResetNetworkInterfaceAttribute",
        "description": "Add 'ec2:ResetNetworkInterfaceAttribute' action",
        "prefix": "ec2:ResetNetworkInterfaceAttribute"
    },
    "ec2:ResetSnapshotAttribute": {
        "body": "ec2:ResetSnapshotAttribute",
        "description": "Add 'ec2:ResetSnapshotAttribute' action",
        "prefix": "ec2:ResetSnapshotAttribute"
    },
    "ec2:RestoreAddressToClassic": {
        "body": "ec2:RestoreAddressToClassic",
        "description": "Add 'ec2:RestoreAddressToClassic' action",
        "prefix": "ec2:RestoreAddressToClassic"
    },
    "ec2:RevokeSecurityGroupEgress": {
        "body": "ec2:RevokeSecurityGroupEgress",
        "description": "Add 'ec2:RevokeSecurityGroupEgress' action",
        "prefix": "ec2:RevokeSecurityGroupEgress"
    },
    "ec2:RevokeSecurityGroupIngress": {
        "body": "ec2:RevokeSecurityGroupIngress",
        "description": "Add 'ec2:RevokeSecurityGroupIngress' action",
        "prefix": "ec2:RevokeSecurityGroupIngress"
    },
    "ec2:RunInstances": {
        "body": "ec2:RunInstances",
        "description": "Add 'ec2:RunInstances' action",
        "prefix": "ec2:RunInstances"
    },
    "ec2:RunScheduledInstances": {
        "body": "ec2:RunScheduledInstances",
        "description": "Add 'ec2:RunScheduledInstances' action",
        "prefix": "ec2:RunScheduledInstances"
    },
    "ec2:StartInstances": {
        "body": "ec2:StartInstances",
        "description": "Add 'ec2:StartInstances' action",
        "prefix": "ec2:StartInstances"
    },
    "ec2:StopInstances": {
        "body": "ec2:StopInstances",
        "description": "Add 'ec2:StopInstances' action",
        "prefix": "ec2:StopInstances"
    },
    "ec2:TerminateInstances": {
        "body": "ec2:TerminateInstances",
        "description": "Add 'ec2:TerminateInstances' action",
        "prefix": "ec2:TerminateInstances"
    },
    "ec2:UnassignIpv6Addresses": {
        "body": "ec2:UnassignIpv6Addresses",
        "description": "Add 'ec2:UnassignIpv6Addresses' action",
        "prefix": "ec2:UnassignIpv6Addresses"
    },
    "ec2:UnassignPrivateIpAddresses": {
        "body": "ec2:UnassignPrivateIpAddresses",
        "description": "Add 'ec2:UnassignPrivateIpAddresses' action",
        "prefix": "ec2:UnassignPrivateIpAddresses"
    },
    "ec2:UnmonitorInstances": {
        "body": "ec2:UnmonitorInstances",
        "description": "Add 'ec2:UnmonitorInstances' action",
        "prefix": "ec2:UnmonitorInstances"
    },
    "ec2:UpdateSecurityGroupRuleDescriptionsEgress": {
        "body": "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
        "description": "Add 'ec2:UpdateSecurityGroupRuleDescriptionsEgress' action",
        "prefix": "ec2:UpdateSecurityGroupRuleDescriptionsEgress"
    },
    "ec2:UpdateSecurityGroupRuleDescriptionsIngress": {
        "body": "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
        "description": "Add 'ec2:UpdateSecurityGroupRuleDescriptionsIngress' action",
        "prefix": "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
    },
    "ec2messages:AcknowledgeMessage": {
        "body": "ec2messages:AcknowledgeMessage",
        "description": "Add 'ec2messages:AcknowledgeMessage' action",
        "prefix": "ec2messages:AcknowledgeMessage"
    },
    "ec2messages:DeleteMessage": {
        "body": "ec2messages:DeleteMessage",
        "description": "Add 'ec2messages:DeleteMessage' action",
        "prefix": "ec2messages:DeleteMessage"
    },
    "ec2messages:FailMessage": {
        "body": "ec2messages:FailMessage",
        "description": "Add 'ec2messages:FailMessage' action",
        "prefix": "ec2messages:FailMessage"
    },
    "ec2messages:GetEndpoint": {
        "body": "ec2messages:GetEndpoint",
        "description": "Add 'ec2messages:GetEndpoint' action",
        "prefix": "ec2messages:GetEndpoint"
    },
    "ec2messages:GetMessages": {
        "body": "ec2messages:GetMessages",
        "description": "Add 'ec2messages:GetMessages' action",
        "prefix": "ec2messages:GetMessages"
    },
    "ec2messages:SendReply": {
        "body": "ec2messages:SendReply",
        "description": "Add 'ec2messages:SendReply' action",
        "prefix": "ec2messages:SendReply"
    },
    "ecr:BatchCheckLayerAvailability": {
        "body": "ecr:BatchCheckLayerAvailability",
        "description": "Add 'ecr:BatchCheckLayerAvailability' action",
        "prefix": "ecr:BatchCheckLayerAvailability"
    },
    "ecr:BatchDeleteImage": {
        "body": "ecr:BatchDeleteImage",
        "description": "Add 'ecr:BatchDeleteImage' action",
        "prefix": "ecr:BatchDeleteImage"
    },
    "ecr:BatchGetImage": {
        "body": "ecr:BatchGetImage",
        "description": "Add 'ecr:BatchGetImage' action",
        "prefix": "ecr:BatchGetImage"
    },
    "ecr:CompleteLayerUpload": {
        "body": "ecr:CompleteLayerUpload",
        "description": "Add 'ecr:CompleteLayerUpload' action",
        "prefix": "ecr:CompleteLayerUpload"
    },
    "ecr:CreateRepository": {
        "body": "ecr:CreateRepository",
        "description": "Add 'ecr:CreateRepository' action",
        "prefix": "ecr:CreateRepository"
    },
    "ecr:DeleteRepository": {
        "body": "ecr:DeleteRepository",
        "description": "Add 'ecr:DeleteRepository' action",
        "prefix": "ecr:DeleteRepository"
    },
    "ecr:DeleteRepositoryPolicy": {
        "body": "ecr:DeleteRepositoryPolicy",
        "description": "Add 'ecr:DeleteRepositoryPolicy' action",
        "prefix": "ecr:DeleteRepositoryPolicy"
    },
    "ecr:DescribeImages": {
        "body": "ecr:DescribeImages",
        "description": "Add 'ecr:DescribeImages' action",
        "prefix": "ecr:DescribeImages"
    },
    "ecr:DescribeRepositories": {
        "body": "ecr:DescribeRepositories",
        "description": "Add 'ecr:DescribeRepositories' action",
        "prefix": "ecr:DescribeRepositories"
    },
    "ecr:GetAuthorizationToken": {
        "body": "ecr:GetAuthorizationToken",
        "description": "Add 'ecr:GetAuthorizationToken' action",
        "prefix": "ecr:GetAuthorizationToken"
    },
    "ecr:GetDownloadUrlForLayer": {
        "body": "ecr:GetDownloadUrlForLayer",
        "description": "Add 'ecr:GetDownloadUrlForLayer' action",
        "prefix": "ecr:GetDownloadUrlForLayer"
    },
    "ecr:GetRepositoryPolicy": {
        "body": "ecr:GetRepositoryPolicy",
        "description": "Add 'ecr:GetRepositoryPolicy' action",
        "prefix": "ecr:GetRepositoryPolicy"
    },
    "ecr:InitiateLayerUpload": {
        "body": "ecr:InitiateLayerUpload",
        "description": "Add 'ecr:InitiateLayerUpload' action",
        "prefix": "ecr:InitiateLayerUpload"
    },
    "ecr:ListImages": {
        "body": "ecr:ListImages",
        "description": "Add 'ecr:ListImages' action",
        "prefix": "ecr:ListImages"
    },
    "ecr:PutImage": {
        "body": "ecr:PutImage",
        "description": "Add 'ecr:PutImage' action",
        "prefix": "ecr:PutImage"
    },
    "ecr:SetRepositoryPolicy": {
        "body": "ecr:SetRepositoryPolicy",
        "description": "Add 'ecr:SetRepositoryPolicy' action",
        "prefix": "ecr:SetRepositoryPolicy"
    },
    "ecr:UploadLayerPart": {
        "body": "ecr:UploadLayerPart",
        "description": "Add 'ecr:UploadLayerPart' action",
        "prefix": "ecr:UploadLayerPart"
    },
    "ecs:CreateCluster": {
        "body": "ecs:CreateCluster",
        "description": "Add 'ecs:CreateCluster' action",
        "prefix": "ecs:CreateCluster"
    },
    "ecs:CreateService": {
        "body": "ecs:CreateService",
        "description": "Add 'ecs:CreateService' action",
        "prefix": "ecs:CreateService"
    },
    "ecs:DeleteCluster": {
        "body": "ecs:DeleteCluster",
        "description": "Add 'ecs:DeleteCluster' action",
        "prefix": "ecs:DeleteCluster"
    },
    "ecs:DeleteService": {
        "body": "ecs:DeleteService",
        "description": "Add 'ecs:DeleteService' action",
        "prefix": "ecs:DeleteService"
    },
    "ecs:DeregisterContainerInstance": {
        "body": "ecs:DeregisterContainerInstance",
        "description": "Add 'ecs:DeregisterContainerInstance' action",
        "prefix": "ecs:DeregisterContainerInstance"
    },
    "ecs:DeregisterTaskDefinition": {
        "body": "ecs:DeregisterTaskDefinition",
        "description": "Add 'ecs:DeregisterTaskDefinition' action",
        "prefix": "ecs:DeregisterTaskDefinition"
    },
    "ecs:DescribeClusters": {
        "body": "ecs:DescribeClusters",
        "description": "Add 'ecs:DescribeClusters' action",
        "prefix": "ecs:DescribeClusters"
    },
    "ecs:DescribeContainerInstances": {
        "body": "ecs:DescribeContainerInstances",
        "description": "Add 'ecs:DescribeContainerInstances' action",
        "prefix": "ecs:DescribeContainerInstances"
    },
    "ecs:DescribeServices": {
        "body": "ecs:DescribeServices",
        "description": "Add 'ecs:DescribeServices' action",
        "prefix": "ecs:DescribeServices"
    },
    "ecs:DescribeTaskDefinition": {
        "body": "ecs:DescribeTaskDefinition",
        "description": "Add 'ecs:DescribeTaskDefinition' action",
        "prefix": "ecs:DescribeTaskDefinition"
    },
    "ecs:DescribeTasks": {
        "body": "ecs:DescribeTasks",
        "description": "Add 'ecs:DescribeTasks' action",
        "prefix": "ecs:DescribeTasks"
    },
    "ecs:DiscoverPollEndpoint": {
        "body": "ecs:DiscoverPollEndpoint",
        "description": "Add 'ecs:DiscoverPollEndpoint' action",
        "prefix": "ecs:DiscoverPollEndpoint"
    },
    "ecs:ListClusters": {
        "body": "ecs:ListClusters",
        "description": "Add 'ecs:ListClusters' action",
        "prefix": "ecs:ListClusters"
    },
    "ecs:ListContainerInstances": {
        "body": "ecs:ListContainerInstances",
        "description": "Add 'ecs:ListContainerInstances' action",
        "prefix": "ecs:ListContainerInstances"
    },
    "ecs:ListServices": {
        "body": "ecs:ListServices",
        "description": "Add 'ecs:ListServices' action",
        "prefix": "ecs:ListServices"
    },
    "ecs:ListTaskDefinitionFamilies": {
        "body": "ecs:ListTaskDefinitionFamilies",
        "description": "Add 'ecs:ListTaskDefinitionFamilies' action",
        "prefix": "ecs:ListTaskDefinitionFamilies"
    },
    "ecs:ListTaskDefinitions": {
        "body": "ecs:ListTaskDefinitions",
        "description": "Add 'ecs:ListTaskDefinitions' action",
        "prefix": "ecs:ListTaskDefinitions"
    },
    "ecs:ListTasks": {
        "body": "ecs:ListTasks",
        "description": "Add 'ecs:ListTasks' action",
        "prefix": "ecs:ListTasks"
    },
    "ecs:Poll": {
        "body": "ecs:Poll",
        "description": "Add 'ecs:Poll' action",
        "prefix": "ecs:Poll"
    },
    "ecs:RegisterContainerInstance": {
        "body": "ecs:RegisterContainerInstance",
        "description": "Add 'ecs:RegisterContainerInstance' action",
        "prefix": "ecs:RegisterContainerInstance"
    },
    "ecs:RegisterTaskDefinition": {
        "body": "ecs:RegisterTaskDefinition",
        "description": "Add 'ecs:RegisterTaskDefinition' action",
        "prefix": "ecs:RegisterTaskDefinition"
    },
    "ecs:RunTask": {
        "body": "ecs:RunTask",
        "description": "Add 'ecs:RunTask' action",
        "prefix": "ecs:RunTask"
    },
    "ecs:StartTask": {
        "body": "ecs:StartTask",
        "description": "Add 'ecs:StartTask' action",
        "prefix": "ecs:StartTask"
    },
    "ecs:StartTelemetrySession": {
        "body": "ecs:StartTelemetrySession",
        "description": "Add 'ecs:StartTelemetrySession' action",
        "prefix": "ecs:StartTelemetrySession"
    },
    "ecs:StopTask": {
        "body": "ecs:StopTask",
        "description": "Add 'ecs:StopTask' action",
        "prefix": "ecs:StopTask"
    },
    "ecs:SubmitContainerStateChange": {
        "body": "ecs:SubmitContainerStateChange",
        "description": "Add 'ecs:SubmitContainerStateChange' action",
        "prefix": "ecs:SubmitContainerStateChange"
    },
    "ecs:SubmitTaskStateChange": {
        "body": "ecs:SubmitTaskStateChange",
        "description": "Add 'ecs:SubmitTaskStateChange' action",
        "prefix": "ecs:SubmitTaskStateChange"
    },
    "ecs:UpdateContainerAgent": {
        "body": "ecs:UpdateContainerAgent",
        "description": "Add 'ecs:UpdateContainerAgent' action",
        "prefix": "ecs:UpdateContainerAgent"
    },
    "ecs:UpdateContainerInstancesState": {
        "body": "ecs:UpdateContainerInstancesState",
        "description": "Add 'ecs:UpdateContainerInstancesState' action",
        "prefix": "ecs:UpdateContainerInstancesState"
    },
    "ecs:UpdateService": {
        "body": "ecs:UpdateService",
        "description": "Add 'ecs:UpdateService' action",
        "prefix": "ecs:UpdateService"
    },
    "elasticache:AddTagsToResource": {
        "body": "elasticache:AddTagsToResource",
        "description": "Add 'elasticache:AddTagsToResource' action",
        "prefix": "elasticache:AddTagsToResource"
    },
    "elasticache:AuthorizeCacheSecurityGroupIngress": {
        "body": "elasticache:AuthorizeCacheSecurityGroupIngress",
        "description": "Add 'elasticache:AuthorizeCacheSecurityGroupIngress' action",
        "prefix": "elasticache:AuthorizeCacheSecurityGroupIngress"
    },
    "elasticache:CopySnapshot": {
        "body": "elasticache:CopySnapshot",
        "description": "Add 'elasticache:CopySnapshot' action",
        "prefix": "elasticache:CopySnapshot"
    },
    "elasticache:CreateCacheCluster": {
        "body": "elasticache:CreateCacheCluster",
        "description": "Add 'elasticache:CreateCacheCluster' action",
        "prefix": "elasticache:CreateCacheCluster"
    },
    "elasticache:CreateCacheParameterGroup": {
        "body": "elasticache:CreateCacheParameterGroup",
        "description": "Add 'elasticache:CreateCacheParameterGroup' action",
        "prefix": "elasticache:CreateCacheParameterGroup"
    },
    "elasticache:CreateCacheSecurityGroup": {
        "body": "elasticache:CreateCacheSecurityGroup",
        "description": "Add 'elasticache:CreateCacheSecurityGroup' action",
        "prefix": "elasticache:CreateCacheSecurityGroup"
    },
    "elasticache:CreateCacheSubnetGroup": {
        "body": "elasticache:CreateCacheSubnetGroup",
        "description": "Add 'elasticache:CreateCacheSubnetGroup' action",
        "prefix": "elasticache:CreateCacheSubnetGroup"
    },
    "elasticache:CreateReplicationGroup": {
        "body": "elasticache:CreateReplicationGroup",
        "description": "Add 'elasticache:CreateReplicationGroup' action",
        "prefix": "elasticache:CreateReplicationGroup"
    },
    "elasticache:CreateSnapshot": {
        "body": "elasticache:CreateSnapshot",
        "description": "Add 'elasticache:CreateSnapshot' action",
        "prefix": "elasticache:CreateSnapshot"
    },
    "elasticache:DeleteCacheCluster": {
        "body": "elasticache:DeleteCacheCluster",
        "description": "Add 'elasticache:DeleteCacheCluster' action",
        "prefix": "elasticache:DeleteCacheCluster"
    },
    "elasticache:DeleteCacheParameterGroup": {
        "body": "elasticache:DeleteCacheParameterGroup",
        "description": "Add 'elasticache:DeleteCacheParameterGroup' action",
        "prefix": "elasticache:DeleteCacheParameterGroup"
    },
    "elasticache:DeleteCacheSecurityGroup": {
        "body": "elasticache:DeleteCacheSecurityGroup",
        "description": "Add 'elasticache:DeleteCacheSecurityGroup' action",
        "prefix": "elasticache:DeleteCacheSecurityGroup"
    },
    "elasticache:DeleteCacheSubnetGroup": {
        "body": "elasticache:DeleteCacheSubnetGroup",
        "description": "Add 'elasticache:DeleteCacheSubnetGroup' action",
        "prefix": "elasticache:DeleteCacheSubnetGroup"
    },
    "elasticache:DeleteReplicationGroup": {
        "body": "elasticache:DeleteReplicationGroup",
        "description": "Add 'elasticache:DeleteReplicationGroup' action",
        "prefix": "elasticache:DeleteReplicationGroup"
    },
    "elasticache:DeleteSnapshot": {
        "body": "elasticache:DeleteSnapshot",
        "description": "Add 'elasticache:DeleteSnapshot' action",
        "prefix": "elasticache:DeleteSnapshot"
    },
    "elasticache:DescribeCacheClusters": {
        "body": "elasticache:DescribeCacheClusters",
        "description": "Add 'elasticache:DescribeCacheClusters' action",
        "prefix": "elasticache:DescribeCacheClusters"
    },
    "elasticache:DescribeCacheEngineVersions": {
        "body": "elasticache:DescribeCacheEngineVersions",
        "description": "Add 'elasticache:DescribeCacheEngineVersions' action",
        "prefix": "elasticache:DescribeCacheEngineVersions"
    },
    "elasticache:DescribeCacheParameterGroups": {
        "body": "elasticache:DescribeCacheParameterGroups",
        "description": "Add 'elasticache:DescribeCacheParameterGroups' action",
        "prefix": "elasticache:DescribeCacheParameterGroups"
    },
    "elasticache:DescribeCacheParameters": {
        "body": "elasticache:DescribeCacheParameters",
        "description": "Add 'elasticache:DescribeCacheParameters' action",
        "prefix": "elasticache:DescribeCacheParameters"
    },
    "elasticache:DescribeCacheSecurityGroups": {
        "body": "elasticache:DescribeCacheSecurityGroups",
        "description": "Add 'elasticache:DescribeCacheSecurityGroups' action",
        "prefix": "elasticache:DescribeCacheSecurityGroups"
    },
    "elasticache:DescribeCacheSubnetGroups": {
        "body": "elasticache:DescribeCacheSubnetGroups",
        "description": "Add 'elasticache:DescribeCacheSubnetGroups' action",
        "prefix": "elasticache:DescribeCacheSubnetGroups"
    },
    "elasticache:DescribeEngineDefaultParameters": {
        "body": "elasticache:DescribeEngineDefaultParameters",
        "description": "Add 'elasticache:DescribeEngineDefaultParameters' action",
        "prefix": "elasticache:DescribeEngineDefaultParameters"
    },
    "elasticache:DescribeEvents": {
        "body": "elasticache:DescribeEvents",
        "description": "Add 'elasticache:DescribeEvents' action",
        "prefix": "elasticache:DescribeEvents"
    },
    "elasticache:DescribeReplicationGroups": {
        "body": "elasticache:DescribeReplicationGroups",
        "description": "Add 'elasticache:DescribeReplicationGroups' action",
        "prefix": "elasticache:DescribeReplicationGroups"
    },
    "elasticache:DescribeReservedCacheNodes": {
        "body": "elasticache:DescribeReservedCacheNodes",
        "description": "Add 'elasticache:DescribeReservedCacheNodes' action",
        "prefix": "elasticache:DescribeReservedCacheNodes"
    },
    "elasticache:DescribeReservedCacheNodesOfferings": {
        "body": "elasticache:DescribeReservedCacheNodesOfferings",
        "description": "Add 'elasticache:DescribeReservedCacheNodesOfferings' action",
        "prefix": "elasticache:DescribeReservedCacheNodesOfferings"
    },
    "elasticache:DescribeSnapshots": {
        "body": "elasticache:DescribeSnapshots",
        "description": "Add 'elasticache:DescribeSnapshots' action",
        "prefix": "elasticache:DescribeSnapshots"
    },
    "elasticache:ListAllowedNodeTypeModifications": {
        "body": "elasticache:ListAllowedNodeTypeModifications",
        "description": "Add 'elasticache:ListAllowedNodeTypeModifications' action",
        "prefix": "elasticache:ListAllowedNodeTypeModifications"
    },
    "elasticache:ListTagsForResource": {
        "body": "elasticache:ListTagsForResource",
        "description": "Add 'elasticache:ListTagsForResource' action",
        "prefix": "elasticache:ListTagsForResource"
    },
    "elasticache:ModifyCacheCluster": {
        "body": "elasticache:ModifyCacheCluster",
        "description": "Add 'elasticache:ModifyCacheCluster' action",
        "prefix": "elasticache:ModifyCacheCluster"
    },
    "elasticache:ModifyCacheParameterGroup": {
        "body": "elasticache:ModifyCacheParameterGroup",
        "description": "Add 'elasticache:ModifyCacheParameterGroup' action",
        "prefix": "elasticache:ModifyCacheParameterGroup"
    },
    "elasticache:ModifyCacheSubnetGroup": {
        "body": "elasticache:ModifyCacheSubnetGroup",
        "description": "Add 'elasticache:ModifyCacheSubnetGroup' action",
        "prefix": "elasticache:ModifyCacheSubnetGroup"
    },
    "elasticache:ModifyReplicationGroup": {
        "body": "elasticache:ModifyReplicationGroup",
        "description": "Add 'elasticache:ModifyReplicationGroup' action",
        "prefix": "elasticache:ModifyReplicationGroup"
    },
    "elasticache:PurchaseReservedCacheNodesOffering": {
        "body": "elasticache:PurchaseReservedCacheNodesOffering",
        "description": "Add 'elasticache:PurchaseReservedCacheNodesOffering' action",
        "prefix": "elasticache:PurchaseReservedCacheNodesOffering"
    },
    "elasticache:RebootCacheCluster": {
        "body": "elasticache:RebootCacheCluster",
        "description": "Add 'elasticache:RebootCacheCluster' action",
        "prefix": "elasticache:RebootCacheCluster"
    },
    "elasticache:RemoveTagsFromResource": {
        "body": "elasticache:RemoveTagsFromResource",
        "description": "Add 'elasticache:RemoveTagsFromResource' action",
        "prefix": "elasticache:RemoveTagsFromResource"
    },
    "elasticache:ResetCacheParameterGroup": {
        "body": "elasticache:ResetCacheParameterGroup",
        "description": "Add 'elasticache:ResetCacheParameterGroup' action",
        "prefix": "elasticache:ResetCacheParameterGroup"
    },
    "elasticache:RevokeCacheSecurityGroupIngress": {
        "body": "elasticache:RevokeCacheSecurityGroupIngress",
        "description": "Add 'elasticache:RevokeCacheSecurityGroupIngress' action",
        "prefix": "elasticache:RevokeCacheSecurityGroupIngress"
    },
    "elasticbeanstalk:AbortEnvironmentUpdate": {
        "body": "elasticbeanstalk:AbortEnvironmentUpdate",
        "description": "Add 'elasticbeanstalk:AbortEnvironmentUpdate' action",
        "prefix": "elasticbeanstalk:AbortEnvironmentUpdate"
    },
    "elasticbeanstalk:ApplyEnvironmentManagedAction": {
        "body": "elasticbeanstalk:ApplyEnvironmentManagedAction",
        "description": "Add 'elasticbeanstalk:ApplyEnvironmentManagedAction' action",
        "prefix": "elasticbeanstalk:ApplyEnvironmentManagedAction"
    },
    "elasticbeanstalk:CheckDNSAvailability": {
        "body": "elasticbeanstalk:CheckDNSAvailability",
        "description": "Add 'elasticbeanstalk:CheckDNSAvailability' action",
        "prefix": "elasticbeanstalk:CheckDNSAvailability"
    },
    "elasticbeanstalk:ComposeEnvironments": {
        "body": "elasticbeanstalk:ComposeEnvironments",
        "description": "Add 'elasticbeanstalk:ComposeEnvironments' action",
        "prefix": "elasticbeanstalk:ComposeEnvironments"
    },
    "elasticbeanstalk:CreateApplication": {
        "body": "elasticbeanstalk:CreateApplication",
        "description": "Add 'elasticbeanstalk:CreateApplication' action",
        "prefix": "elasticbeanstalk:CreateApplication"
    },
    "elasticbeanstalk:CreateApplicationVersion": {
        "body": "elasticbeanstalk:CreateApplicationVersion",
        "description": "Add 'elasticbeanstalk:CreateApplicationVersion' action",
        "prefix": "elasticbeanstalk:CreateApplicationVersion"
    },
    "elasticbeanstalk:CreateConfigurationTemplate": {
        "body": "elasticbeanstalk:CreateConfigurationTemplate",
        "description": "Add 'elasticbeanstalk:CreateConfigurationTemplate' action",
        "prefix": "elasticbeanstalk:CreateConfigurationTemplate"
    },
    "elasticbeanstalk:CreateEnvironment": {
        "body": "elasticbeanstalk:CreateEnvironment",
        "description": "Add 'elasticbeanstalk:CreateEnvironment' action",
        "prefix": "elasticbeanstalk:CreateEnvironment"
    },
    "elasticbeanstalk:CreatePlatformVersion": {
        "body": "elasticbeanstalk:CreatePlatformVersion",
        "description": "Add 'elasticbeanstalk:CreatePlatformVersion' action",
        "prefix": "elasticbeanstalk:CreatePlatformVersion"
    },
    "elasticbeanstalk:CreateStorageLocation": {
        "body": "elasticbeanstalk:CreateStorageLocation",
        "description": "Add 'elasticbeanstalk:CreateStorageLocation' action",
        "prefix": "elasticbeanstalk:CreateStorageLocation"
    },
    "elasticbeanstalk:DeleteApplication": {
        "body": "elasticbeanstalk:DeleteApplication",
        "description": "Add 'elasticbeanstalk:DeleteApplication' action",
        "prefix": "elasticbeanstalk:DeleteApplication"
    },
    "elasticbeanstalk:DeleteApplicationVersion": {
        "body": "elasticbeanstalk:DeleteApplicationVersion",
        "description": "Add 'elasticbeanstalk:DeleteApplicationVersion' action",
        "prefix": "elasticbeanstalk:DeleteApplicationVersion"
    },
    "elasticbeanstalk:DeleteConfigurationTemplate": {
        "body": "elasticbeanstalk:DeleteConfigurationTemplate",
        "description": "Add 'elasticbeanstalk:DeleteConfigurationTemplate' action",
        "prefix": "elasticbeanstalk:DeleteConfigurationTemplate"
    },
    "elasticbeanstalk:DeleteEnvironmentConfiguration": {
        "body": "elasticbeanstalk:DeleteEnvironmentConfiguration",
        "description": "Add 'elasticbeanstalk:DeleteEnvironmentConfiguration' action",
        "prefix": "elasticbeanstalk:DeleteEnvironmentConfiguration"
    },
    "elasticbeanstalk:DeletePlatformVersion": {
        "body": "elasticbeanstalk:DeletePlatformVersion",
        "description": "Add 'elasticbeanstalk:DeletePlatformVersion' action",
        "prefix": "elasticbeanstalk:DeletePlatformVersion"
    },
    "elasticbeanstalk:DescribeApplicationVersions": {
        "body": "elasticbeanstalk:DescribeApplicationVersions",
        "description": "Add 'elasticbeanstalk:DescribeApplicationVersions' action",
        "prefix": "elasticbeanstalk:DescribeApplicationVersions"
    },
    "elasticbeanstalk:DescribeApplications": {
        "body": "elasticbeanstalk:DescribeApplications",
        "description": "Add 'elasticbeanstalk:DescribeApplications' action",
        "prefix": "elasticbeanstalk:DescribeApplications"
    },
    "elasticbeanstalk:DescribeConfigurationOptions": {
        "body": "elasticbeanstalk:DescribeConfigurationOptions",
        "description": "Add 'elasticbeanstalk:DescribeConfigurationOptions' action",
        "prefix": "elasticbeanstalk:DescribeConfigurationOptions"
    },
    "elasticbeanstalk:DescribeConfigurationSettings": {
        "body": "elasticbeanstalk:DescribeConfigurationSettings",
        "description": "Add 'elasticbeanstalk:DescribeConfigurationSettings' action",
        "prefix": "elasticbeanstalk:DescribeConfigurationSettings"
    },
    "elasticbeanstalk:DescribeEnvironmentHealth": {
        "body": "elasticbeanstalk:DescribeEnvironmentHealth",
        "description": "Add 'elasticbeanstalk:DescribeEnvironmentHealth' action",
        "prefix": "elasticbeanstalk:DescribeEnvironmentHealth"
    },
    "elasticbeanstalk:DescribeEnvironmentManagedActionHistory": {
        "body": "elasticbeanstalk:DescribeEnvironmentManagedActionHistory",
        "description": "Add 'elasticbeanstalk:DescribeEnvironmentManagedActionHistory' action",
        "prefix": "elasticbeanstalk:DescribeEnvironmentManagedActionHistory"
    },
    "elasticbeanstalk:DescribeEnvironmentManagedActions": {
        "body": "elasticbeanstalk:DescribeEnvironmentManagedActions",
        "description": "Add 'elasticbeanstalk:DescribeEnvironmentManagedActions' action",
        "prefix": "elasticbeanstalk:DescribeEnvironmentManagedActions"
    },
    "elasticbeanstalk:DescribeEnvironmentResources": {
        "body": "elasticbeanstalk:DescribeEnvironmentResources",
        "description": "Add 'elasticbeanstalk:DescribeEnvironmentResources' action",
        "prefix": "elasticbeanstalk:DescribeEnvironmentResources"
    },
    "elasticbeanstalk:DescribeEnvironments": {
        "body": "elasticbeanstalk:DescribeEnvironments",
        "description": "Add 'elasticbeanstalk:DescribeEnvironments' action",
        "prefix": "elasticbeanstalk:DescribeEnvironments"
    },
    "elasticbeanstalk:DescribeEvents": {
        "body": "elasticbeanstalk:DescribeEvents",
        "description": "Add 'elasticbeanstalk:DescribeEvents' action",
        "prefix": "elasticbeanstalk:DescribeEvents"
    },
    "elasticbeanstalk:DescribeInstancesHealth": {
        "body": "elasticbeanstalk:DescribeInstancesHealth",
        "description": "Add 'elasticbeanstalk:DescribeInstancesHealth' action",
        "prefix": "elasticbeanstalk:DescribeInstancesHealth"
    },
    "elasticbeanstalk:DescribePlatformVersion": {
        "body": "elasticbeanstalk:DescribePlatformVersion",
        "description": "Add 'elasticbeanstalk:DescribePlatformVersion' action",
        "prefix": "elasticbeanstalk:DescribePlatformVersion"
    },
    "elasticbeanstalk:ListAvailableSolutionStacks": {
        "body": "elasticbeanstalk:ListAvailableSolutionStacks",
        "description": "Add 'elasticbeanstalk:ListAvailableSolutionStacks' action",
        "prefix": "elasticbeanstalk:ListAvailableSolutionStacks"
    },
    "elasticbeanstalk:ListPlatformVersions": {
        "body": "elasticbeanstalk:ListPlatformVersions",
        "description": "Add 'elasticbeanstalk:ListPlatformVersions' action",
        "prefix": "elasticbeanstalk:ListPlatformVersions"
    },
    "elasticbeanstalk:RebuildEnvironment": {
        "body": "elasticbeanstalk:RebuildEnvironment",
        "description": "Add 'elasticbeanstalk:RebuildEnvironment' action",
        "prefix": "elasticbeanstalk:RebuildEnvironment"
    },
    "elasticbeanstalk:RequestEnvironmentInfo": {
        "body": "elasticbeanstalk:RequestEnvironmentInfo",
        "description": "Add 'elasticbeanstalk:RequestEnvironmentInfo' action",
        "prefix": "elasticbeanstalk:RequestEnvironmentInfo"
    },
    "elasticbeanstalk:RestartAppServer": {
        "body": "elasticbeanstalk:RestartAppServer",
        "description": "Add 'elasticbeanstalk:RestartAppServer' action",
        "prefix": "elasticbeanstalk:RestartAppServer"
    },
    "elasticbeanstalk:RetrieveEnvironmentInfo": {
        "body": "elasticbeanstalk:RetrieveEnvironmentInfo",
        "description": "Add 'elasticbeanstalk:RetrieveEnvironmentInfo' action",
        "prefix": "elasticbeanstalk:RetrieveEnvironmentInfo"
    },
    "elasticbeanstalk:SwapEnvironmentCNAMEs": {
        "body": "elasticbeanstalk:SwapEnvironmentCNAMEs",
        "description": "Add 'elasticbeanstalk:SwapEnvironmentCNAMEs' action",
        "prefix": "elasticbeanstalk:SwapEnvironmentCNAMEs"
    },
    "elasticbeanstalk:TerminateEnvironment": {
        "body": "elasticbeanstalk:TerminateEnvironment",
        "description": "Add 'elasticbeanstalk:TerminateEnvironment' action",
        "prefix": "elasticbeanstalk:TerminateEnvironment"
    },
    "elasticbeanstalk:UpdateApplication": {
        "body": "elasticbeanstalk:UpdateApplication",
        "description": "Add 'elasticbeanstalk:UpdateApplication' action",
        "prefix": "elasticbeanstalk:UpdateApplication"
    },
    "elasticbeanstalk:UpdateApplicationResourceLifecycle": {
        "body": "elasticbeanstalk:UpdateApplicationResourceLifecycle",
        "description": "Add 'elasticbeanstalk:UpdateApplicationResourceLifecycle' action",
        "prefix": "elasticbeanstalk:UpdateApplicationResourceLifecycle"
    },
    "elasticbeanstalk:UpdateApplicationVersion": {
        "body": "elasticbeanstalk:UpdateApplicationVersion",
        "description": "Add 'elasticbeanstalk:UpdateApplicationVersion' action",
        "prefix": "elasticbeanstalk:UpdateApplicationVersion"
    },
    "elasticbeanstalk:UpdateConfigurationTemplate": {
        "body": "elasticbeanstalk:UpdateConfigurationTemplate",
        "description": "Add 'elasticbeanstalk:UpdateConfigurationTemplate' action",
        "prefix": "elasticbeanstalk:UpdateConfigurationTemplate"
    },
    "elasticbeanstalk:UpdateEnvironment": {
        "body": "elasticbeanstalk:UpdateEnvironment",
        "description": "Add 'elasticbeanstalk:UpdateEnvironment' action",
        "prefix": "elasticbeanstalk:UpdateEnvironment"
    },
    "elasticbeanstalk:ValidateConfigurationSettings": {
        "body": "elasticbeanstalk:ValidateConfigurationSettings",
        "description": "Add 'elasticbeanstalk:ValidateConfigurationSettings' action",
        "prefix": "elasticbeanstalk:ValidateConfigurationSettings"
    },
    "elasticfilesystem:CreateFileSystem": {
        "body": "elasticfilesystem:CreateFileSystem",
        "description": "Add 'elasticfilesystem:CreateFileSystem' action",
        "prefix": "elasticfilesystem:CreateFileSystem"
    },
    "elasticfilesystem:CreateMountTarget": {
        "body": "elasticfilesystem:CreateMountTarget",
        "description": "Add 'elasticfilesystem:CreateMountTarget' action",
        "prefix": "elasticfilesystem:CreateMountTarget"
    },
    "elasticfilesystem:CreateTags": {
        "body": "elasticfilesystem:CreateTags",
        "description": "Add 'elasticfilesystem:CreateTags' action",
        "prefix": "elasticfilesystem:CreateTags"
    },
    "elasticfilesystem:DeleteFileSystem": {
        "body": "elasticfilesystem:DeleteFileSystem",
        "description": "Add 'elasticfilesystem:DeleteFileSystem' action",
        "prefix": "elasticfilesystem:DeleteFileSystem"
    },
    "elasticfilesystem:DeleteMountTarget": {
        "body": "elasticfilesystem:DeleteMountTarget",
        "description": "Add 'elasticfilesystem:DeleteMountTarget' action",
        "prefix": "elasticfilesystem:DeleteMountTarget"
    },
    "elasticfilesystem:DeleteTags": {
        "body": "elasticfilesystem:DeleteTags",
        "description": "Add 'elasticfilesystem:DeleteTags' action",
        "prefix": "elasticfilesystem:DeleteTags"
    },
    "elasticfilesystem:DescribeFileSystems": {
        "body": "elasticfilesystem:DescribeFileSystems",
        "description": "Add 'elasticfilesystem:DescribeFileSystems' action",
        "prefix": "elasticfilesystem:DescribeFileSystems"
    },
    "elasticfilesystem:DescribeMountTargetSecurityGroups": {
        "body": "elasticfilesystem:DescribeMountTargetSecurityGroups",
        "description": "Add 'elasticfilesystem:DescribeMountTargetSecurityGroups' action",
        "prefix": "elasticfilesystem:DescribeMountTargetSecurityGroups"
    },
    "elasticfilesystem:DescribeMountTargets": {
        "body": "elasticfilesystem:DescribeMountTargets",
        "description": "Add 'elasticfilesystem:DescribeMountTargets' action",
        "prefix": "elasticfilesystem:DescribeMountTargets"
    },
    "elasticfilesystem:DescribeTags": {
        "body": "elasticfilesystem:DescribeTags",
        "description": "Add 'elasticfilesystem:DescribeTags' action",
        "prefix": "elasticfilesystem:DescribeTags"
    },
    "elasticfilesystem:ModifyMountTargetSecurityGroups": {
        "body": "elasticfilesystem:ModifyMountTargetSecurityGroups",
        "description": "Add 'elasticfilesystem:ModifyMountTargetSecurityGroups' action",
        "prefix": "elasticfilesystem:ModifyMountTargetSecurityGroups"
    },
    "elasticloadbalancing:AddTags": {
        "body": "elasticloadbalancing:AddTags",
        "description": "Add 'elasticloadbalancing:AddTags' action",
        "prefix": "elasticloadbalancing:AddTags"
    },
    "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer": {
        "body": "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
        "description": "Add 'elasticloadbalancing:ApplySecurityGroupsToLoadBalancer' action",
        "prefix": "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer"
    },
    "elasticloadbalancing:AttachLoadBalancerToSubnets": {
        "body": "elasticloadbalancing:AttachLoadBalancerToSubnets",
        "description": "Add 'elasticloadbalancing:AttachLoadBalancerToSubnets' action",
        "prefix": "elasticloadbalancing:AttachLoadBalancerToSubnets"
    },
    "elasticloadbalancing:ConfigureHealthCheck": {
        "body": "elasticloadbalancing:ConfigureHealthCheck",
        "description": "Add 'elasticloadbalancing:ConfigureHealthCheck' action",
        "prefix": "elasticloadbalancing:ConfigureHealthCheck"
    },
    "elasticloadbalancing:CreateAppCookieStickinessPolicy": {
        "body": "elasticloadbalancing:CreateAppCookieStickinessPolicy",
        "description": "Add 'elasticloadbalancing:CreateAppCookieStickinessPolicy' action",
        "prefix": "elasticloadbalancing:CreateAppCookieStickinessPolicy"
    },
    "elasticloadbalancing:CreateLBCookieStickinessPolicy": {
        "body": "elasticloadbalancing:CreateLBCookieStickinessPolicy",
        "description": "Add 'elasticloadbalancing:CreateLBCookieStickinessPolicy' action",
        "prefix": "elasticloadbalancing:CreateLBCookieStickinessPolicy"
    },
    "elasticloadbalancing:CreateListener": {
        "body": "elasticloadbalancing:CreateListener",
        "description": "Add 'elasticloadbalancing:CreateListener' action",
        "prefix": "elasticloadbalancing:CreateListener"
    },
    "elasticloadbalancing:CreateLoadBalancer": {
        "body": "elasticloadbalancing:CreateLoadBalancer",
        "description": "Add 'elasticloadbalancing:CreateLoadBalancer' action",
        "prefix": "elasticloadbalancing:CreateLoadBalancer"
    },
    "elasticloadbalancing:CreateLoadBalancerListeners": {
        "body": "elasticloadbalancing:CreateLoadBalancerListeners",
        "description": "Add 'elasticloadbalancing:CreateLoadBalancerListeners' action",
        "prefix": "elasticloadbalancing:CreateLoadBalancerListeners"
    },
    "elasticloadbalancing:CreateLoadBalancerPolicy": {
        "body": "elasticloadbalancing:CreateLoadBalancerPolicy",
        "description": "Add 'elasticloadbalancing:CreateLoadBalancerPolicy' action",
        "prefix": "elasticloadbalancing:CreateLoadBalancerPolicy"
    },
    "elasticloadbalancing:CreateRule": {
        "body": "elasticloadbalancing:CreateRule",
        "description": "Add 'elasticloadbalancing:CreateRule' action",
        "prefix": "elasticloadbalancing:CreateRule"
    },
    "elasticloadbalancing:CreateTargetGroup": {
        "body": "elasticloadbalancing:CreateTargetGroup",
        "description": "Add 'elasticloadbalancing:CreateTargetGroup' action",
        "prefix": "elasticloadbalancing:CreateTargetGroup"
    },
    "elasticloadbalancing:DeleteListener": {
        "body": "elasticloadbalancing:DeleteListener",
        "description": "Add 'elasticloadbalancing:DeleteListener' action",
        "prefix": "elasticloadbalancing:DeleteListener"
    },
    "elasticloadbalancing:DeleteLoadBalancer": {
        "body": "elasticloadbalancing:DeleteLoadBalancer",
        "description": "Add 'elasticloadbalancing:DeleteLoadBalancer' action",
        "prefix": "elasticloadbalancing:DeleteLoadBalancer"
    },
    "elasticloadbalancing:DeleteLoadBalancerListeners": {
        "body": "elasticloadbalancing:DeleteLoadBalancerListeners",
        "description": "Add 'elasticloadbalancing:DeleteLoadBalancerListeners' action",
        "prefix": "elasticloadbalancing:DeleteLoadBalancerListeners"
    },
    "elasticloadbalancing:DeleteLoadBalancerPolicy": {
        "body": "elasticloadbalancing:DeleteLoadBalancerPolicy",
        "description": "Add 'elasticloadbalancing:DeleteLoadBalancerPolicy' action",
        "prefix": "elasticloadbalancing:DeleteLoadBalancerPolicy"
    },
    "elasticloadbalancing:DeleteRule": {
        "body": "elasticloadbalancing:DeleteRule",
        "description": "Add 'elasticloadbalancing:DeleteRule' action",
        "prefix": "elasticloadbalancing:DeleteRule"
    },
    "elasticloadbalancing:DeleteTargetGroup": {
        "body": "elasticloadbalancing:DeleteTargetGroup",
        "description": "Add 'elasticloadbalancing:DeleteTargetGroup' action",
        "prefix": "elasticloadbalancing:DeleteTargetGroup"
    },
    "elasticloadbalancing:DeregisterInstancesFromLoadBalancer": {
        "body": "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
        "description": "Add 'elasticloadbalancing:DeregisterInstancesFromLoadBalancer' action",
        "prefix": "elasticloadbalancing:DeregisterInstancesFromLoadBalancer"
    },
    "elasticloadbalancing:DeregisterTargets": {
        "body": "elasticloadbalancing:DeregisterTargets",
        "description": "Add 'elasticloadbalancing:DeregisterTargets' action",
        "prefix": "elasticloadbalancing:DeregisterTargets"
    },
    "elasticloadbalancing:DescribeInstanceHealth": {
        "body": "elasticloadbalancing:DescribeInstanceHealth",
        "description": "Add 'elasticloadbalancing:DescribeInstanceHealth' action",
        "prefix": "elasticloadbalancing:DescribeInstanceHealth"
    },
    "elasticloadbalancing:DescribeListeners": {
        "body": "elasticloadbalancing:DescribeListeners",
        "description": "Add 'elasticloadbalancing:DescribeListeners' action",
        "prefix": "elasticloadbalancing:DescribeListeners"
    },
    "elasticloadbalancing:DescribeLoadBalancerAttributes": {
        "body": "elasticloadbalancing:DescribeLoadBalancerAttributes",
        "description": "Add 'elasticloadbalancing:DescribeLoadBalancerAttributes' action",
        "prefix": "elasticloadbalancing:DescribeLoadBalancerAttributes"
    },
    "elasticloadbalancing:DescribeLoadBalancerPolicies": {
        "body": "elasticloadbalancing:DescribeLoadBalancerPolicies",
        "description": "Add 'elasticloadbalancing:DescribeLoadBalancerPolicies' action",
        "prefix": "elasticloadbalancing:DescribeLoadBalancerPolicies"
    },
    "elasticloadbalancing:DescribeLoadBalancerPolicyTypes": {
        "body": "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
        "description": "Add 'elasticloadbalancing:DescribeLoadBalancerPolicyTypes' action",
        "prefix": "elasticloadbalancing:DescribeLoadBalancerPolicyTypes"
    },
    "elasticloadbalancing:DescribeLoadBalancers": {
        "body": "elasticloadbalancing:DescribeLoadBalancers",
        "description": "Add 'elasticloadbalancing:DescribeLoadBalancers' action",
        "prefix": "elasticloadbalancing:DescribeLoadBalancers"
    },
    "elasticloadbalancing:DescribeRules": {
        "body": "elasticloadbalancing:DescribeRules",
        "description": "Add 'elasticloadbalancing:DescribeRules' action",
        "prefix": "elasticloadbalancing:DescribeRules"
    },
    "elasticloadbalancing:DescribeSSLPolicies": {
        "body": "elasticloadbalancing:DescribeSSLPolicies",
        "description": "Add 'elasticloadbalancing:DescribeSSLPolicies' action",
        "prefix": "elasticloadbalancing:DescribeSSLPolicies"
    },
    "elasticloadbalancing:DescribeTags": {
        "body": "elasticloadbalancing:DescribeTags",
        "description": "Add 'elasticloadbalancing:DescribeTags' action",
        "prefix": "elasticloadbalancing:DescribeTags"
    },
    "elasticloadbalancing:DescribeTargetGroupAttributes": {
        "body": "elasticloadbalancing:DescribeTargetGroupAttributes",
        "description": "Add 'elasticloadbalancing:DescribeTargetGroupAttributes' action",
        "prefix": "elasticloadbalancing:DescribeTargetGroupAttributes"
    },
    "elasticloadbalancing:DescribeTargetGroups": {
        "body": "elasticloadbalancing:DescribeTargetGroups",
        "description": "Add 'elasticloadbalancing:DescribeTargetGroups' action",
        "prefix": "elasticloadbalancing:DescribeTargetGroups"
    },
    "elasticloadbalancing:DescribeTargetHealth": {
        "body": "elasticloadbalancing:DescribeTargetHealth",
        "description": "Add 'elasticloadbalancing:DescribeTargetHealth' action",
        "prefix": "elasticloadbalancing:DescribeTargetHealth"
    },
    "elasticloadbalancing:DetachLoadBalancerFromSubnets": {
        "body": "elasticloadbalancing:DetachLoadBalancerFromSubnets",
        "description": "Add 'elasticloadbalancing:DetachLoadBalancerFromSubnets' action",
        "prefix": "elasticloadbalancing:DetachLoadBalancerFromSubnets"
    },
    "elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer": {
        "body": "elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer",
        "description": "Add 'elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer' action",
        "prefix": "elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer"
    },
    "elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer": {
        "body": "elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer",
        "description": "Add 'elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer' action",
        "prefix": "elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer"
    },
    "elasticloadbalancing:ModifyListener": {
        "body": "elasticloadbalancing:ModifyListener",
        "description": "Add 'elasticloadbalancing:ModifyListener' action",
        "prefix": "elasticloadbalancing:ModifyListener"
    },
    "elasticloadbalancing:ModifyLoadBalancerAttributes": {
        "body": "elasticloadbalancing:ModifyLoadBalancerAttributes",
        "description": "Add 'elasticloadbalancing:ModifyLoadBalancerAttributes' action",
        "prefix": "elasticloadbalancing:ModifyLoadBalancerAttributes"
    },
    "elasticloadbalancing:ModifyRule": {
        "body": "elasticloadbalancing:ModifyRule",
        "description": "Add 'elasticloadbalancing:ModifyRule' action",
        "prefix": "elasticloadbalancing:ModifyRule"
    },
    "elasticloadbalancing:ModifyTargetGroup": {
        "body": "elasticloadbalancing:ModifyTargetGroup",
        "description": "Add 'elasticloadbalancing:ModifyTargetGroup' action",
        "prefix": "elasticloadbalancing:ModifyTargetGroup"
    },
    "elasticloadbalancing:ModifyTargetGroupAttributes": {
        "body": "elasticloadbalancing:ModifyTargetGroupAttributes",
        "description": "Add 'elasticloadbalancing:ModifyTargetGroupAttributes' action",
        "prefix": "elasticloadbalancing:ModifyTargetGroupAttributes"
    },
    "elasticloadbalancing:RegisterInstancesWithLoadBalancer": {
        "body": "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
        "description": "Add 'elasticloadbalancing:RegisterInstancesWithLoadBalancer' action",
        "prefix": "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
    },
    "elasticloadbalancing:RegisterTargets": {
        "body": "elasticloadbalancing:RegisterTargets",
        "description": "Add 'elasticloadbalancing:RegisterTargets' action",
        "prefix": "elasticloadbalancing:RegisterTargets"
    },
    "elasticloadbalancing:RemoveTags": {
        "body": "elasticloadbalancing:RemoveTags",
        "description": "Add 'elasticloadbalancing:RemoveTags' action",
        "prefix": "elasticloadbalancing:RemoveTags"
    },
    "elasticloadbalancing:SetIpAddressType": {
        "body": "elasticloadbalancing:SetIpAddressType",
        "description": "Add 'elasticloadbalancing:SetIpAddressType' action",
        "prefix": "elasticloadbalancing:SetIpAddressType"
    },
    "elasticloadbalancing:SetLoadBalancerListenerSSLCertificate": {
        "body": "elasticloadbalancing:SetLoadBalancerListenerSSLCertificate",
        "description": "Add 'elasticloadbalancing:SetLoadBalancerListenerSSLCertificate' action",
        "prefix": "elasticloadbalancing:SetLoadBalancerListenerSSLCertificate"
    },
    "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer": {
        "body": "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
        "description": "Add 'elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer' action",
        "prefix": "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer"
    },
    "elasticloadbalancing:SetLoadBalancerPoliciesOfListener": {
        "body": "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
        "description": "Add 'elasticloadbalancing:SetLoadBalancerPoliciesOfListener' action",
        "prefix": "elasticloadbalancing:SetLoadBalancerPoliciesOfListener"
    },
    "elasticloadbalancing:SetRulePriorities": {
        "body": "elasticloadbalancing:SetRulePriorities",
        "description": "Add 'elasticloadbalancing:SetRulePriorities' action",
        "prefix": "elasticloadbalancing:SetRulePriorities"
    },
    "elasticloadbalancing:SetSecurityGroups": {
        "body": "elasticloadbalancing:SetSecurityGroups",
        "description": "Add 'elasticloadbalancing:SetSecurityGroups' action",
        "prefix": "elasticloadbalancing:SetSecurityGroups"
    },
    "elasticloadbalancing:SetSubnets": {
        "body": "elasticloadbalancing:SetSubnets",
        "description": "Add 'elasticloadbalancing:SetSubnets' action",
        "prefix": "elasticloadbalancing:SetSubnets"
    },
    "elasticmapreduce:AddInstanceGroups": {
        "body": "elasticmapreduce:AddInstanceGroups",
        "description": "Add 'elasticmapreduce:AddInstanceGroups' action",
        "prefix": "elasticmapreduce:AddInstanceGroups"
    },
    "elasticmapreduce:AddJobFlowSteps": {
        "body": "elasticmapreduce:AddJobFlowSteps",
        "description": "Add 'elasticmapreduce:AddJobFlowSteps' action",
        "prefix": "elasticmapreduce:AddJobFlowSteps"
    },
    "elasticmapreduce:AddTags": {
        "body": "elasticmapreduce:AddTags",
        "description": "Add 'elasticmapreduce:AddTags' action",
        "prefix": "elasticmapreduce:AddTags"
    },
    "elasticmapreduce:CancelSteps": {
        "body": "elasticmapreduce:CancelSteps",
        "description": "Add 'elasticmapreduce:CancelSteps' action",
        "prefix": "elasticmapreduce:CancelSteps"
    },
    "elasticmapreduce:CreateSecurityConfiguration": {
        "body": "elasticmapreduce:CreateSecurityConfiguration",
        "description": "Add 'elasticmapreduce:CreateSecurityConfiguration' action",
        "prefix": "elasticmapreduce:CreateSecurityConfiguration"
    },
    "elasticmapreduce:DeleteSecurityConfiguration": {
        "body": "elasticmapreduce:DeleteSecurityConfiguration",
        "description": "Add 'elasticmapreduce:DeleteSecurityConfiguration' action",
        "prefix": "elasticmapreduce:DeleteSecurityConfiguration"
    },
    "elasticmapreduce:DescribeCluster": {
        "body": "elasticmapreduce:DescribeCluster",
        "description": "Add 'elasticmapreduce:DescribeCluster' action",
        "prefix": "elasticmapreduce:DescribeCluster"
    },
    "elasticmapreduce:DescribeJobFlows": {
        "body": "elasticmapreduce:DescribeJobFlows",
        "description": "Add 'elasticmapreduce:DescribeJobFlows' action",
        "prefix": "elasticmapreduce:DescribeJobFlows"
    },
    "elasticmapreduce:DescribeSecurityConfiguration": {
        "body": "elasticmapreduce:DescribeSecurityConfiguration",
        "description": "Add 'elasticmapreduce:DescribeSecurityConfiguration' action",
        "prefix": "elasticmapreduce:DescribeSecurityConfiguration"
    },
    "elasticmapreduce:DescribeStep": {
        "body": "elasticmapreduce:DescribeStep",
        "description": "Add 'elasticmapreduce:DescribeStep' action",
        "prefix": "elasticmapreduce:DescribeStep"
    },
    "elasticmapreduce:ListBootstrapActions": {
        "body": "elasticmapreduce:ListBootstrapActions",
        "description": "Add 'elasticmapreduce:ListBootstrapActions' action",
        "prefix": "elasticmapreduce:ListBootstrapActions"
    },
    "elasticmapreduce:ListClusters": {
        "body": "elasticmapreduce:ListClusters",
        "description": "Add 'elasticmapreduce:ListClusters' action",
        "prefix": "elasticmapreduce:ListClusters"
    },
    "elasticmapreduce:ListInstanceGroups": {
        "body": "elasticmapreduce:ListInstanceGroups",
        "description": "Add 'elasticmapreduce:ListInstanceGroups' action",
        "prefix": "elasticmapreduce:ListInstanceGroups"
    },
    "elasticmapreduce:ListInstances": {
        "body": "elasticmapreduce:ListInstances",
        "description": "Add 'elasticmapreduce:ListInstances' action",
        "prefix": "elasticmapreduce:ListInstances"
    },
    "elasticmapreduce:ListSecurityConfigurations": {
        "body": "elasticmapreduce:ListSecurityConfigurations",
        "description": "Add 'elasticmapreduce:ListSecurityConfigurations' action",
        "prefix": "elasticmapreduce:ListSecurityConfigurations"
    },
    "elasticmapreduce:ListSteps": {
        "body": "elasticmapreduce:ListSteps",
        "description": "Add 'elasticmapreduce:ListSteps' action",
        "prefix": "elasticmapreduce:ListSteps"
    },
    "elasticmapreduce:ModifyInstanceGroups": {
        "body": "elasticmapreduce:ModifyInstanceGroups",
        "description": "Add 'elasticmapreduce:ModifyInstanceGroups' action",
        "prefix": "elasticmapreduce:ModifyInstanceGroups"
    },
    "elasticmapreduce:PutAutoScalingPolicy": {
        "body": "elasticmapreduce:PutAutoScalingPolicy",
        "description": "Add 'elasticmapreduce:PutAutoScalingPolicy' action",
        "prefix": "elasticmapreduce:PutAutoScalingPolicy"
    },
    "elasticmapreduce:RemoveAutoScalingPolicy": {
        "body": "elasticmapreduce:RemoveAutoScalingPolicy",
        "description": "Add 'elasticmapreduce:RemoveAutoScalingPolicy' action",
        "prefix": "elasticmapreduce:RemoveAutoScalingPolicy"
    },
    "elasticmapreduce:RemoveTags": {
        "body": "elasticmapreduce:RemoveTags",
        "description": "Add 'elasticmapreduce:RemoveTags' action",
        "prefix": "elasticmapreduce:RemoveTags"
    },
    "elasticmapreduce:RunJobFlow": {
        "body": "elasticmapreduce:RunJobFlow",
        "description": "Add 'elasticmapreduce:RunJobFlow' action",
        "prefix": "elasticmapreduce:RunJobFlow"
    },
    "elasticmapreduce:SetTerminationProtection": {
        "body": "elasticmapreduce:SetTerminationProtection",
        "description": "Add 'elasticmapreduce:SetTerminationProtection' action",
        "prefix": "elasticmapreduce:SetTerminationProtection"
    },
    "elasticmapreduce:SetVisibleToAllUsers": {
        "body": "elasticmapreduce:SetVisibleToAllUsers",
        "description": "Add 'elasticmapreduce:SetVisibleToAllUsers' action",
        "prefix": "elasticmapreduce:SetVisibleToAllUsers"
    },
    "elasticmapreduce:TerminateJobFlows": {
        "body": "elasticmapreduce:TerminateJobFlows",
        "description": "Add 'elasticmapreduce:TerminateJobFlows' action",
        "prefix": "elasticmapreduce:TerminateJobFlows"
    },
    "elasticmapreduce:ViewEventsFromAllClustersInConsole": {
        "body": "elasticmapreduce:ViewEventsFromAllClustersInConsole",
        "description": "Add 'elasticmapreduce:ViewEventsFromAllClustersInConsole' action",
        "prefix": "elasticmapreduce:ViewEventsFromAllClustersInConsole"
    },
    "elastictranscoder:CancelJob": {
        "body": "elastictranscoder:CancelJob",
        "description": "Add 'elastictranscoder:CancelJob' action",
        "prefix": "elastictranscoder:CancelJob"
    },
    "elastictranscoder:CreateJob": {
        "body": "elastictranscoder:CreateJob",
        "description": "Add 'elastictranscoder:CreateJob' action",
        "prefix": "elastictranscoder:CreateJob"
    },
    "elastictranscoder:CreatePipeline": {
        "body": "elastictranscoder:CreatePipeline",
        "description": "Add 'elastictranscoder:CreatePipeline' action",
        "prefix": "elastictranscoder:CreatePipeline"
    },
    "elastictranscoder:CreatePreset": {
        "body": "elastictranscoder:CreatePreset",
        "description": "Add 'elastictranscoder:CreatePreset' action",
        "prefix": "elastictranscoder:CreatePreset"
    },
    "elastictranscoder:DeletePipeline": {
        "body": "elastictranscoder:DeletePipeline",
        "description": "Add 'elastictranscoder:DeletePipeline' action",
        "prefix": "elastictranscoder:DeletePipeline"
    },
    "elastictranscoder:DeletePreset": {
        "body": "elastictranscoder:DeletePreset",
        "description": "Add 'elastictranscoder:DeletePreset' action",
        "prefix": "elastictranscoder:DeletePreset"
    },
    "elastictranscoder:ListJobsByPipeline": {
        "body": "elastictranscoder:ListJobsByPipeline",
        "description": "Add 'elastictranscoder:ListJobsByPipeline' action",
        "prefix": "elastictranscoder:ListJobsByPipeline"
    },
    "elastictranscoder:ListJobsByStatus": {
        "body": "elastictranscoder:ListJobsByStatus",
        "description": "Add 'elastictranscoder:ListJobsByStatus' action",
        "prefix": "elastictranscoder:ListJobsByStatus"
    },
    "elastictranscoder:ListPipelines": {
        "body": "elastictranscoder:ListPipelines",
        "description": "Add 'elastictranscoder:ListPipelines' action",
        "prefix": "elastictranscoder:ListPipelines"
    },
    "elastictranscoder:ListPresets": {
        "body": "elastictranscoder:ListPresets",
        "description": "Add 'elastictranscoder:ListPresets' action",
        "prefix": "elastictranscoder:ListPresets"
    },
    "elastictranscoder:ReadJob": {
        "body": "elastictranscoder:ReadJob",
        "description": "Add 'elastictranscoder:ReadJob' action",
        "prefix": "elastictranscoder:ReadJob"
    },
    "elastictranscoder:ReadPipeline": {
        "body": "elastictranscoder:ReadPipeline",
        "description": "Add 'elastictranscoder:ReadPipeline' action",
        "prefix": "elastictranscoder:ReadPipeline"
    },
    "elastictranscoder:ReadPreset": {
        "body": "elastictranscoder:ReadPreset",
        "description": "Add 'elastictranscoder:ReadPreset' action",
        "prefix": "elastictranscoder:ReadPreset"
    },
    "elastictranscoder:TestRole": {
        "body": "elastictranscoder:TestRole",
        "description": "Add 'elastictranscoder:TestRole' action",
        "prefix": "elastictranscoder:TestRole"
    },
    "elastictranscoder:UpdatePipeline": {
        "body": "elastictranscoder:UpdatePipeline",
        "description": "Add 'elastictranscoder:UpdatePipeline' action",
        "prefix": "elastictranscoder:UpdatePipeline"
    },
    "elastictranscoder:UpdatePipelineNotifications": {
        "body": "elastictranscoder:UpdatePipelineNotifications",
        "description": "Add 'elastictranscoder:UpdatePipelineNotifications' action",
        "prefix": "elastictranscoder:UpdatePipelineNotifications"
    },
    "elastictranscoder:UpdatePipelineStatus": {
        "body": "elastictranscoder:UpdatePipelineStatus",
        "description": "Add 'elastictranscoder:UpdatePipelineStatus' action",
        "prefix": "elastictranscoder:UpdatePipelineStatus"
    },
    "es:AddTags": {
        "body": "es:AddTags",
        "description": "Add 'es:AddTags' action",
        "prefix": "es:AddTags"
    },
    "es:CreateElasticsearchDomain": {
        "body": "es:CreateElasticsearchDomain",
        "description": "Add 'es:CreateElasticsearchDomain' action",
        "prefix": "es:CreateElasticsearchDomain"
    },
    "es:DeleteElasticsearchDomain": {
        "body": "es:DeleteElasticsearchDomain",
        "description": "Add 'es:DeleteElasticsearchDomain' action",
        "prefix": "es:DeleteElasticsearchDomain"
    },
    "es:DescribeElasticsearchDomain": {
        "body": "es:DescribeElasticsearchDomain",
        "description": "Add 'es:DescribeElasticsearchDomain' action",
        "prefix": "es:DescribeElasticsearchDomain"
    },
    "es:DescribeElasticsearchDomainConfig": {
        "body": "es:DescribeElasticsearchDomainConfig",
        "description": "Add 'es:DescribeElasticsearchDomainConfig' action",
        "prefix": "es:DescribeElasticsearchDomainConfig"
    },
    "es:DescribeElasticsearchDomains": {
        "body": "es:DescribeElasticsearchDomains",
        "description": "Add 'es:DescribeElasticsearchDomains' action",
        "prefix": "es:DescribeElasticsearchDomains"
    },
    "es:ESHttpDelete": {
        "body": "es:ESHttpDelete",
        "description": "Add 'es:ESHttpDelete' action",
        "prefix": "es:ESHttpDelete"
    },
    "es:ESHttpGet": {
        "body": "es:ESHttpGet",
        "description": "Add 'es:ESHttpGet' action",
        "prefix": "es:ESHttpGet"
    },
    "es:ESHttpHead": {
        "body": "es:ESHttpHead",
        "description": "Add 'es:ESHttpHead' action",
        "prefix": "es:ESHttpHead"
    },
    "es:ESHttpPost": {
        "body": "es:ESHttpPost",
        "description": "Add 'es:ESHttpPost' action",
        "prefix": "es:ESHttpPost"
    },
    "es:ESHttpPut": {
        "body": "es:ESHttpPut",
        "description": "Add 'es:ESHttpPut' action",
        "prefix": "es:ESHttpPut"
    },
    "es:ListDomainNames": {
        "body": "es:ListDomainNames",
        "description": "Add 'es:ListDomainNames' action",
        "prefix": "es:ListDomainNames"
    },
    "es:ListTags": {
        "body": "es:ListTags",
        "description": "Add 'es:ListTags' action",
        "prefix": "es:ListTags"
    },
    "es:RemoveTags": {
        "body": "es:RemoveTags",
        "description": "Add 'es:RemoveTags' action",
        "prefix": "es:RemoveTags"
    },
    "es:UpdateElasticsearchDomainConfig": {
        "body": "es:UpdateElasticsearchDomainConfig",
        "description": "Add 'es:UpdateElasticsearchDomainConfig' action",
        "prefix": "es:UpdateElasticsearchDomainConfig"
    },
    "events:DeleteRule": {
        "body": "events:DeleteRule",
        "description": "Add 'events:DeleteRule' action",
        "prefix": "events:DeleteRule"
    },
    "events:DescribeRule": {
        "body": "events:DescribeRule",
        "description": "Add 'events:DescribeRule' action",
        "prefix": "events:DescribeRule"
    },
    "events:DisableRule": {
        "body": "events:DisableRule",
        "description": "Add 'events:DisableRule' action",
        "prefix": "events:DisableRule"
    },
    "events:EnableRule": {
        "body": "events:EnableRule",
        "description": "Add 'events:EnableRule' action",
        "prefix": "events:EnableRule"
    },
    "events:ListRuleNamesByTarget": {
        "body": "events:ListRuleNamesByTarget",
        "description": "Add 'events:ListRuleNamesByTarget' action",
        "prefix": "events:ListRuleNamesByTarget"
    },
    "events:ListRules": {
        "body": "events:ListRules",
        "description": "Add 'events:ListRules' action",
        "prefix": "events:ListRules"
    },
    "events:ListTargetsByRule": {
        "body": "events:ListTargetsByRule",
        "description": "Add 'events:ListTargetsByRule' action",
        "prefix": "events:ListTargetsByRule"
    },
    "events:PutEvents": {
        "body": "events:PutEvents",
        "description": "Add 'events:PutEvents' action",
        "prefix": "events:PutEvents"
    },
    "events:PutRule": {
        "body": "events:PutRule",
        "description": "Add 'events:PutRule' action",
        "prefix": "events:PutRule"
    },
    "events:PutTargets": {
        "body": "events:PutTargets",
        "description": "Add 'events:PutTargets' action",
        "prefix": "events:PutTargets"
    },
    "events:RemoveTargets": {
        "body": "events:RemoveTargets",
        "description": "Add 'events:RemoveTargets' action",
        "prefix": "events:RemoveTargets"
    },
    "events:TestEventPattern": {
        "body": "events:TestEventPattern",
        "description": "Add 'events:TestEventPattern' action",
        "prefix": "events:TestEventPattern"
    },
    "execute-api:InvalidateCache": {
        "body": "execute-api:InvalidateCache",
        "description": "Add 'execute-api:InvalidateCache' action",
        "prefix": "execute-api:InvalidateCache"
    },
    "execute-api:Invoke": {
        "body": "execute-api:Invoke",
        "description": "Add 'execute-api:Invoke' action",
        "prefix": "execute-api:Invoke"
    },
    "firehose:CreateDeliveryStream": {
        "body": "firehose:CreateDeliveryStream",
        "description": "Add 'firehose:CreateDeliveryStream' action",
        "prefix": "firehose:CreateDeliveryStream"
    },
    "firehose:DeleteDeliveryStream": {
        "body": "firehose:DeleteDeliveryStream",
        "description": "Add 'firehose:DeleteDeliveryStream' action",
        "prefix": "firehose:DeleteDeliveryStream"
    },
    "firehose:DescribeDeliveryStream": {
        "body": "firehose:DescribeDeliveryStream",
        "description": "Add 'firehose:DescribeDeliveryStream' action",
        "prefix": "firehose:DescribeDeliveryStream"
    },
    "firehose:ListDeliveryStreams": {
        "body": "firehose:ListDeliveryStreams",
        "description": "Add 'firehose:ListDeliveryStreams' action",
        "prefix": "firehose:ListDeliveryStreams"
    },
    "firehose:PutRecord": {
        "body": "firehose:PutRecord",
        "description": "Add 'firehose:PutRecord' action",
        "prefix": "firehose:PutRecord"
    },
    "firehose:PutRecordBatch": {
        "body": "firehose:PutRecordBatch",
        "description": "Add 'firehose:PutRecordBatch' action",
        "prefix": "firehose:PutRecordBatch"
    },
    "firehose:UpdateDestination": {
        "body": "firehose:UpdateDestination",
        "description": "Add 'firehose:UpdateDestination' action",
        "prefix": "firehose:UpdateDestination"
    },
    "freertos:CreateSoftwareConfiguration": {
        "body": "freertos:CreateSoftwareConfiguration",
        "description": "Add 'freertos:CreateSoftwareConfiguration' action",
        "prefix": "freertos:CreateSoftwareConfiguration"
    },
    "freertos:DeleteSoftwareConfiguration": {
        "body": "freertos:DeleteSoftwareConfiguration",
        "description": "Add 'freertos:DeleteSoftwareConfiguration' action",
        "prefix": "freertos:DeleteSoftwareConfiguration"
    },
    "freertos:DescribeHardwarePlatform": {
        "body": "freertos:DescribeHardwarePlatform",
        "description": "Add 'freertos:DescribeHardwarePlatform' action",
        "prefix": "freertos:DescribeHardwarePlatform"
    },
    "freertos:DescribeSoftwareConfiguration": {
        "body": "freertos:DescribeSoftwareConfiguration",
        "description": "Add 'freertos:DescribeSoftwareConfiguration' action",
        "prefix": "freertos:DescribeSoftwareConfiguration"
    },
    "freertos:GetSoftwareURL": {
        "body": "freertos:GetSoftwareURL",
        "description": "Add 'freertos:GetSoftwareURL' action",
        "prefix": "freertos:GetSoftwareURL"
    },
    "freertos:GetSoftwareURLForConfiguration": {
        "body": "freertos:GetSoftwareURLForConfiguration",
        "description": "Add 'freertos:GetSoftwareURLForConfiguration' action",
        "prefix": "freertos:GetSoftwareURLForConfiguration"
    },
    "freertos:ListFreeRTOSVersions": {
        "body": "freertos:ListFreeRTOSVersions",
        "description": "Add 'freertos:ListFreeRTOSVersions' action",
        "prefix": "freertos:ListFreeRTOSVersions"
    },
    "freertos:ListHardwarePlatforms": {
        "body": "freertos:ListHardwarePlatforms",
        "description": "Add 'freertos:ListHardwarePlatforms' action",
        "prefix": "freertos:ListHardwarePlatforms"
    },
    "freertos:ListHardwareVendors": {
        "body": "freertos:ListHardwareVendors",
        "description": "Add 'freertos:ListHardwareVendors' action",
        "prefix": "freertos:ListHardwareVendors"
    },
    "freertos:ListSoftwareConfigurations": {
        "body": "freertos:ListSoftwareConfigurations",
        "description": "Add 'freertos:ListSoftwareConfigurations' action",
        "prefix": "freertos:ListSoftwareConfigurations"
    },
    "freertos:UpdateSoftwareConfiguration": {
        "body": "freertos:UpdateSoftwareConfiguration",
        "description": "Add 'freertos:UpdateSoftwareConfiguration' action",
        "prefix": "freertos:UpdateSoftwareConfiguration"
    },
    "gamelift:CreateAlias": {
        "body": "gamelift:CreateAlias",
        "description": "Add 'gamelift:CreateAlias' action",
        "prefix": "gamelift:CreateAlias"
    },
    "gamelift:CreateBuild": {
        "body": "gamelift:CreateBuild",
        "description": "Add 'gamelift:CreateBuild' action",
        "prefix": "gamelift:CreateBuild"
    },
    "gamelift:CreateFleet": {
        "body": "gamelift:CreateFleet",
        "description": "Add 'gamelift:CreateFleet' action",
        "prefix": "gamelift:CreateFleet"
    },
    "gamelift:CreateGameSession": {
        "body": "gamelift:CreateGameSession",
        "description": "Add 'gamelift:CreateGameSession' action",
        "prefix": "gamelift:CreateGameSession"
    },
    "gamelift:CreatePlayerSession": {
        "body": "gamelift:CreatePlayerSession",
        "description": "Add 'gamelift:CreatePlayerSession' action",
        "prefix": "gamelift:CreatePlayerSession"
    },
    "gamelift:CreatePlayerSessions": {
        "body": "gamelift:CreatePlayerSessions",
        "description": "Add 'gamelift:CreatePlayerSessions' action",
        "prefix": "gamelift:CreatePlayerSessions"
    },
    "gamelift:DeleteAlias": {
        "body": "gamelift:DeleteAlias",
        "description": "Add 'gamelift:DeleteAlias' action",
        "prefix": "gamelift:DeleteAlias"
    },
    "gamelift:DeleteBuild": {
        "body": "gamelift:DeleteBuild",
        "description": "Add 'gamelift:DeleteBuild' action",
        "prefix": "gamelift:DeleteBuild"
    },
    "gamelift:DeleteFleet": {
        "body": "gamelift:DeleteFleet",
        "description": "Add 'gamelift:DeleteFleet' action",
        "prefix": "gamelift:DeleteFleet"
    },
    "gamelift:DeleteScalingPolicy": {
        "body": "gamelift:DeleteScalingPolicy",
        "description": "Add 'gamelift:DeleteScalingPolicy' action",
        "prefix": "gamelift:DeleteScalingPolicy"
    },
    "gamelift:DescribeAlias": {
        "body": "gamelift:DescribeAlias",
        "description": "Add 'gamelift:DescribeAlias' action",
        "prefix": "gamelift:DescribeAlias"
    },
    "gamelift:DescribeBuild": {
        "body": "gamelift:DescribeBuild",
        "description": "Add 'gamelift:DescribeBuild' action",
        "prefix": "gamelift:DescribeBuild"
    },
    "gamelift:DescribeEC2InstanceLimits": {
        "body": "gamelift:DescribeEC2InstanceLimits",
        "description": "Add 'gamelift:DescribeEC2InstanceLimits' action",
        "prefix": "gamelift:DescribeEC2InstanceLimits"
    },
    "gamelift:DescribeFleetAttributes": {
        "body": "gamelift:DescribeFleetAttributes",
        "description": "Add 'gamelift:DescribeFleetAttributes' action",
        "prefix": "gamelift:DescribeFleetAttributes"
    },
    "gamelift:DescribeFleetCapacity": {
        "body": "gamelift:DescribeFleetCapacity",
        "description": "Add 'gamelift:DescribeFleetCapacity' action",
        "prefix": "gamelift:DescribeFleetCapacity"
    },
    "gamelift:DescribeFleetEvents": {
        "body": "gamelift:DescribeFleetEvents",
        "description": "Add 'gamelift:DescribeFleetEvents' action",
        "prefix": "gamelift:DescribeFleetEvents"
    },
    "gamelift:DescribeFleetPortSettings": {
        "body": "gamelift:DescribeFleetPortSettings",
        "description": "Add 'gamelift:DescribeFleetPortSettings' action",
        "prefix": "gamelift:DescribeFleetPortSettings"
    },
    "gamelift:DescribeFleetUtilization": {
        "body": "gamelift:DescribeFleetUtilization",
        "description": "Add 'gamelift:DescribeFleetUtilization' action",
        "prefix": "gamelift:DescribeFleetUtilization"
    },
    "gamelift:DescribeGameSessionDetails": {
        "body": "gamelift:DescribeGameSessionDetails",
        "description": "Add 'gamelift:DescribeGameSessionDetails' action",
        "prefix": "gamelift:DescribeGameSessionDetails"
    },
    "gamelift:DescribeGameSessions": {
        "body": "gamelift:DescribeGameSessions",
        "description": "Add 'gamelift:DescribeGameSessions' action",
        "prefix": "gamelift:DescribeGameSessions"
    },
    "gamelift:DescribeInstances": {
        "body": "gamelift:DescribeInstances",
        "description": "Add 'gamelift:DescribeInstances' action",
        "prefix": "gamelift:DescribeInstances"
    },
    "gamelift:DescribePlayerSessions": {
        "body": "gamelift:DescribePlayerSessions",
        "description": "Add 'gamelift:DescribePlayerSessions' action",
        "prefix": "gamelift:DescribePlayerSessions"
    },
    "gamelift:DescribeRuntimeConfiguration": {
        "body": "gamelift:DescribeRuntimeConfiguration",
        "description": "Add 'gamelift:DescribeRuntimeConfiguration' action",
        "prefix": "gamelift:DescribeRuntimeConfiguration"
    },
    "gamelift:DescribeScalingPolicies": {
        "body": "gamelift:DescribeScalingPolicies",
        "description": "Add 'gamelift:DescribeScalingPolicies' action",
        "prefix": "gamelift:DescribeScalingPolicies"
    },
    "gamelift:GetGameSessionLogUrl": {
        "body": "gamelift:GetGameSessionLogUrl",
        "description": "Add 'gamelift:GetGameSessionLogUrl' action",
        "prefix": "gamelift:GetGameSessionLogUrl"
    },
    "gamelift:GetInstanceAccess": {
        "body": "gamelift:GetInstanceAccess",
        "description": "Add 'gamelift:GetInstanceAccess' action",
        "prefix": "gamelift:GetInstanceAccess"
    },
    "gamelift:ListAliases": {
        "body": "gamelift:ListAliases",
        "description": "Add 'gamelift:ListAliases' action",
        "prefix": "gamelift:ListAliases"
    },
    "gamelift:ListBuilds": {
        "body": "gamelift:ListBuilds",
        "description": "Add 'gamelift:ListBuilds' action",
        "prefix": "gamelift:ListBuilds"
    },
    "gamelift:ListFleets": {
        "body": "gamelift:ListFleets",
        "description": "Add 'gamelift:ListFleets' action",
        "prefix": "gamelift:ListFleets"
    },
    "gamelift:PutScalingPolicy": {
        "body": "gamelift:PutScalingPolicy",
        "description": "Add 'gamelift:PutScalingPolicy' action",
        "prefix": "gamelift:PutScalingPolicy"
    },
    "gamelift:RequestUploadCredentials": {
        "body": "gamelift:RequestUploadCredentials",
        "description": "Add 'gamelift:RequestUploadCredentials' action",
        "prefix": "gamelift:RequestUploadCredentials"
    },
    "gamelift:ResolveAlias": {
        "body": "gamelift:ResolveAlias",
        "description": "Add 'gamelift:ResolveAlias' action",
        "prefix": "gamelift:ResolveAlias"
    },
    "gamelift:SearchGameSessions": {
        "body": "gamelift:SearchGameSessions",
        "description": "Add 'gamelift:SearchGameSessions' action",
        "prefix": "gamelift:SearchGameSessions"
    },
    "gamelift:UpdateAlias": {
        "body": "gamelift:UpdateAlias",
        "description": "Add 'gamelift:UpdateAlias' action",
        "prefix": "gamelift:UpdateAlias"
    },
    "gamelift:UpdateBuild": {
        "body": "gamelift:UpdateBuild",
        "description": "Add 'gamelift:UpdateBuild' action",
        "prefix": "gamelift:UpdateBuild"
    },
    "gamelift:UpdateFleetAttributes": {
        "body": "gamelift:UpdateFleetAttributes",
        "description": "Add 'gamelift:UpdateFleetAttributes' action",
        "prefix": "gamelift:UpdateFleetAttributes"
    },
    "gamelift:UpdateFleetCapacity": {
        "body": "gamelift:UpdateFleetCapacity",
        "description": "Add 'gamelift:UpdateFleetCapacity' action",
        "prefix": "gamelift:UpdateFleetCapacity"
    },
    "gamelift:UpdateFleetPortSettings": {
        "body": "gamelift:UpdateFleetPortSettings",
        "description": "Add 'gamelift:UpdateFleetPortSettings' action",
        "prefix": "gamelift:UpdateFleetPortSettings"
    },
    "gamelift:UpdateGameSession": {
        "body": "gamelift:UpdateGameSession",
        "description": "Add 'gamelift:UpdateGameSession' action",
        "prefix": "gamelift:UpdateGameSession"
    },
    "gamelift:UpdateRuntimeConfiguration": {
        "body": "gamelift:UpdateRuntimeConfiguration",
        "description": "Add 'gamelift:UpdateRuntimeConfiguration' action",
        "prefix": "gamelift:UpdateRuntimeConfiguration"
    },
    "glacier:AbortMultipartUpload": {
        "body": "glacier:AbortMultipartUpload",
        "description": "Add 'glacier:AbortMultipartUpload' action",
        "prefix": "glacier:AbortMultipartUpload"
    },
    "glacier:AbortVaultLock": {
        "body": "glacier:AbortVaultLock",
        "description": "Add 'glacier:AbortVaultLock' action",
        "prefix": "glacier:AbortVaultLock"
    },
    "glacier:AddTagsToVault": {
        "body": "glacier:AddTagsToVault",
        "description": "Add 'glacier:AddTagsToVault' action",
        "prefix": "glacier:AddTagsToVault"
    },
    "glacier:CompleteMultipartUpload": {
        "body": "glacier:CompleteMultipartUpload",
        "description": "Add 'glacier:CompleteMultipartUpload' action",
        "prefix": "glacier:CompleteMultipartUpload"
    },
    "glacier:CompleteVaultLock": {
        "body": "glacier:CompleteVaultLock",
        "description": "Add 'glacier:CompleteVaultLock' action",
        "prefix": "glacier:CompleteVaultLock"
    },
    "glacier:CreateVault": {
        "body": "glacier:CreateVault",
        "description": "Add 'glacier:CreateVault' action",
        "prefix": "glacier:CreateVault"
    },
    "glacier:DeleteArchive": {
        "body": "glacier:DeleteArchive",
        "description": "Add 'glacier:DeleteArchive' action",
        "prefix": "glacier:DeleteArchive"
    },
    "glacier:DeleteVault": {
        "body": "glacier:DeleteVault",
        "description": "Add 'glacier:DeleteVault' action",
        "prefix": "glacier:DeleteVault"
    },
    "glacier:DeleteVaultAccessPolicy": {
        "body": "glacier:DeleteVaultAccessPolicy",
        "description": "Add 'glacier:DeleteVaultAccessPolicy' action",
        "prefix": "glacier:DeleteVaultAccessPolicy"
    },
    "glacier:DeleteVaultNotifications": {
        "body": "glacier:DeleteVaultNotifications",
        "description": "Add 'glacier:DeleteVaultNotifications' action",
        "prefix": "glacier:DeleteVaultNotifications"
    },
    "glacier:DescribeJob": {
        "body": "glacier:DescribeJob",
        "description": "Add 'glacier:DescribeJob' action",
        "prefix": "glacier:DescribeJob"
    },
    "glacier:DescribeVault": {
        "body": "glacier:DescribeVault",
        "description": "Add 'glacier:DescribeVault' action",
        "prefix": "glacier:DescribeVault"
    },
    "glacier:GetDataRetrievalPolicy": {
        "body": "glacier:GetDataRetrievalPolicy",
        "description": "Add 'glacier:GetDataRetrievalPolicy' action",
        "prefix": "glacier:GetDataRetrievalPolicy"
    },
    "glacier:GetJobOutput": {
        "body": "glacier:GetJobOutput",
        "description": "Add 'glacier:GetJobOutput' action",
        "prefix": "glacier:GetJobOutput"
    },
    "glacier:GetVaultAccessPolicy": {
        "body": "glacier:GetVaultAccessPolicy",
        "description": "Add 'glacier:GetVaultAccessPolicy' action",
        "prefix": "glacier:GetVaultAccessPolicy"
    },
    "glacier:GetVaultLock": {
        "body": "glacier:GetVaultLock",
        "description": "Add 'glacier:GetVaultLock' action",
        "prefix": "glacier:GetVaultLock"
    },
    "glacier:GetVaultNotifications": {
        "body": "glacier:GetVaultNotifications",
        "description": "Add 'glacier:GetVaultNotifications' action",
        "prefix": "glacier:GetVaultNotifications"
    },
    "glacier:InitiateJob": {
        "body": "glacier:InitiateJob",
        "description": "Add 'glacier:InitiateJob' action",
        "prefix": "glacier:InitiateJob"
    },
    "glacier:InitiateMultipartUpload": {
        "body": "glacier:InitiateMultipartUpload",
        "description": "Add 'glacier:InitiateMultipartUpload' action",
        "prefix": "glacier:InitiateMultipartUpload"
    },
    "glacier:InitiateVaultLock": {
        "body": "glacier:InitiateVaultLock",
        "description": "Add 'glacier:InitiateVaultLock' action",
        "prefix": "glacier:InitiateVaultLock"
    },
    "glacier:ListJobs": {
        "body": "glacier:ListJobs",
        "description": "Add 'glacier:ListJobs' action",
        "prefix": "glacier:ListJobs"
    },
    "glacier:ListMultipartUploads": {
        "body": "glacier:ListMultipartUploads",
        "description": "Add 'glacier:ListMultipartUploads' action",
        "prefix": "glacier:ListMultipartUploads"
    },
    "glacier:ListParts": {
        "body": "glacier:ListParts",
        "description": "Add 'glacier:ListParts' action",
        "prefix": "glacier:ListParts"
    },
    "glacier:ListProvisionedCapacity": {
        "body": "glacier:ListProvisionedCapacity",
        "description": "Add 'glacier:ListProvisionedCapacity' action",
        "prefix": "glacier:ListProvisionedCapacity"
    },
    "glacier:ListTagsForVault": {
        "body": "glacier:ListTagsForVault",
        "description": "Add 'glacier:ListTagsForVault' action",
        "prefix": "glacier:ListTagsForVault"
    },
    "glacier:ListVaults": {
        "body": "glacier:ListVaults",
        "description": "Add 'glacier:ListVaults' action",
        "prefix": "glacier:ListVaults"
    },
    "glacier:PurchaseProvisionedCapacity": {
        "body": "glacier:PurchaseProvisionedCapacity",
        "description": "Add 'glacier:PurchaseProvisionedCapacity' action",
        "prefix": "glacier:PurchaseProvisionedCapacity"
    },
    "glacier:RemoveTagsFromVault": {
        "body": "glacier:RemoveTagsFromVault",
        "description": "Add 'glacier:RemoveTagsFromVault' action",
        "prefix": "glacier:RemoveTagsFromVault"
    },
    "glacier:SetDataRetrievalPolicy": {
        "body": "glacier:SetDataRetrievalPolicy",
        "description": "Add 'glacier:SetDataRetrievalPolicy' action",
        "prefix": "glacier:SetDataRetrievalPolicy"
    },
    "glacier:SetVaultAccessPolicy": {
        "body": "glacier:SetVaultAccessPolicy",
        "description": "Add 'glacier:SetVaultAccessPolicy' action",
        "prefix": "glacier:SetVaultAccessPolicy"
    },
    "glacier:SetVaultNotifications": {
        "body": "glacier:SetVaultNotifications",
        "description": "Add 'glacier:SetVaultNotifications' action",
        "prefix": "glacier:SetVaultNotifications"
    },
    "glacier:UploadArchive": {
        "body": "glacier:UploadArchive",
        "description": "Add 'glacier:UploadArchive' action",
        "prefix": "glacier:UploadArchive"
    },
    "glacier:UploadMultipartPart": {
        "body": "glacier:UploadMultipartPart",
        "description": "Add 'glacier:UploadMultipartPart' action",
        "prefix": "glacier:UploadMultipartPart"
    },
    "glue:BatchCreatePartition": {
        "body": "glue:BatchCreatePartition",
        "description": "Add 'glue:BatchCreatePartition' action",
        "prefix": "glue:BatchCreatePartition"
    },
    "glue:BatchDeleteConnection": {
        "body": "glue:BatchDeleteConnection",
        "description": "Add 'glue:BatchDeleteConnection' action",
        "prefix": "glue:BatchDeleteConnection"
    },
    "glue:BatchDeletePartition": {
        "body": "glue:BatchDeletePartition",
        "description": "Add 'glue:BatchDeletePartition' action",
        "prefix": "glue:BatchDeletePartition"
    },
    "glue:BatchDeleteTable": {
        "body": "glue:BatchDeleteTable",
        "description": "Add 'glue:BatchDeleteTable' action",
        "prefix": "glue:BatchDeleteTable"
    },
    "glue:BatchGetPartition": {
        "body": "glue:BatchGetPartition",
        "description": "Add 'glue:BatchGetPartition' action",
        "prefix": "glue:BatchGetPartition"
    },
    "glue:CreateClassifier": {
        "body": "glue:CreateClassifier",
        "description": "Add 'glue:CreateClassifier' action",
        "prefix": "glue:CreateClassifier"
    },
    "glue:CreateConnection": {
        "body": "glue:CreateConnection",
        "description": "Add 'glue:CreateConnection' action",
        "prefix": "glue:CreateConnection"
    },
    "glue:CreateCrawler": {
        "body": "glue:CreateCrawler",
        "description": "Add 'glue:CreateCrawler' action",
        "prefix": "glue:CreateCrawler"
    },
    "glue:CreateDatabase": {
        "body": "glue:CreateDatabase",
        "description": "Add 'glue:CreateDatabase' action",
        "prefix": "glue:CreateDatabase"
    },
    "glue:CreateDevEndpoint": {
        "body": "glue:CreateDevEndpoint",
        "description": "Add 'glue:CreateDevEndpoint' action",
        "prefix": "glue:CreateDevEndpoint"
    },
    "glue:CreateJob": {
        "body": "glue:CreateJob",
        "description": "Add 'glue:CreateJob' action",
        "prefix": "glue:CreateJob"
    },
    "glue:CreatePartition": {
        "body": "glue:CreatePartition",
        "description": "Add 'glue:CreatePartition' action",
        "prefix": "glue:CreatePartition"
    },
    "glue:CreateScript": {
        "body": "glue:CreateScript",
        "description": "Add 'glue:CreateScript' action",
        "prefix": "glue:CreateScript"
    },
    "glue:CreateTable": {
        "body": "glue:CreateTable",
        "description": "Add 'glue:CreateTable' action",
        "prefix": "glue:CreateTable"
    },
    "glue:CreateTrigger": {
        "body": "glue:CreateTrigger",
        "description": "Add 'glue:CreateTrigger' action",
        "prefix": "glue:CreateTrigger"
    },
    "glue:CreateUserDefinedFunction": {
        "body": "glue:CreateUserDefinedFunction",
        "description": "Add 'glue:CreateUserDefinedFunction' action",
        "prefix": "glue:CreateUserDefinedFunction"
    },
    "glue:DeleteClassifier": {
        "body": "glue:DeleteClassifier",
        "description": "Add 'glue:DeleteClassifier' action",
        "prefix": "glue:DeleteClassifier"
    },
    "glue:DeleteConnection": {
        "body": "glue:DeleteConnection",
        "description": "Add 'glue:DeleteConnection' action",
        "prefix": "glue:DeleteConnection"
    },
    "glue:DeleteCrawler": {
        "body": "glue:DeleteCrawler",
        "description": "Add 'glue:DeleteCrawler' action",
        "prefix": "glue:DeleteCrawler"
    },
    "glue:DeleteDatabase": {
        "body": "glue:DeleteDatabase",
        "description": "Add 'glue:DeleteDatabase' action",
        "prefix": "glue:DeleteDatabase"
    },
    "glue:DeleteDevEndpoint": {
        "body": "glue:DeleteDevEndpoint",
        "description": "Add 'glue:DeleteDevEndpoint' action",
        "prefix": "glue:DeleteDevEndpoint"
    },
    "glue:DeleteJob": {
        "body": "glue:DeleteJob",
        "description": "Add 'glue:DeleteJob' action",
        "prefix": "glue:DeleteJob"
    },
    "glue:DeletePartition": {
        "body": "glue:DeletePartition",
        "description": "Add 'glue:DeletePartition' action",
        "prefix": "glue:DeletePartition"
    },
    "glue:DeleteTable": {
        "body": "glue:DeleteTable",
        "description": "Add 'glue:DeleteTable' action",
        "prefix": "glue:DeleteTable"
    },
    "glue:DeleteTrigger": {
        "body": "glue:DeleteTrigger",
        "description": "Add 'glue:DeleteTrigger' action",
        "prefix": "glue:DeleteTrigger"
    },
    "glue:DeleteUserDefinedFunction": {
        "body": "glue:DeleteUserDefinedFunction",
        "description": "Add 'glue:DeleteUserDefinedFunction' action",
        "prefix": "glue:DeleteUserDefinedFunction"
    },
    "glue:GetCatalogImportStatus": {
        "body": "glue:GetCatalogImportStatus",
        "description": "Add 'glue:GetCatalogImportStatus' action",
        "prefix": "glue:GetCatalogImportStatus"
    },
    "glue:GetClassifier": {
        "body": "glue:GetClassifier",
        "description": "Add 'glue:GetClassifier' action",
        "prefix": "glue:GetClassifier"
    },
    "glue:GetClassifiers": {
        "body": "glue:GetClassifiers",
        "description": "Add 'glue:GetClassifiers' action",
        "prefix": "glue:GetClassifiers"
    },
    "glue:GetConnection": {
        "body": "glue:GetConnection",
        "description": "Add 'glue:GetConnection' action",
        "prefix": "glue:GetConnection"
    },
    "glue:GetConnections": {
        "body": "glue:GetConnections",
        "description": "Add 'glue:GetConnections' action",
        "prefix": "glue:GetConnections"
    },
    "glue:GetCrawler": {
        "body": "glue:GetCrawler",
        "description": "Add 'glue:GetCrawler' action",
        "prefix": "glue:GetCrawler"
    },
    "glue:GetCrawlerMetrics": {
        "body": "glue:GetCrawlerMetrics",
        "description": "Add 'glue:GetCrawlerMetrics' action",
        "prefix": "glue:GetCrawlerMetrics"
    },
    "glue:GetCrawlers": {
        "body": "glue:GetCrawlers",
        "description": "Add 'glue:GetCrawlers' action",
        "prefix": "glue:GetCrawlers"
    },
    "glue:GetDatabase": {
        "body": "glue:GetDatabase",
        "description": "Add 'glue:GetDatabase' action",
        "prefix": "glue:GetDatabase"
    },
    "glue:GetDatabases": {
        "body": "glue:GetDatabases",
        "description": "Add 'glue:GetDatabases' action",
        "prefix": "glue:GetDatabases"
    },
    "glue:GetDataflowGraph": {
        "body": "glue:GetDataflowGraph",
        "description": "Add 'glue:GetDataflowGraph' action",
        "prefix": "glue:GetDataflowGraph"
    },
    "glue:GetDevEndpoint": {
        "body": "glue:GetDevEndpoint",
        "description": "Add 'glue:GetDevEndpoint' action",
        "prefix": "glue:GetDevEndpoint"
    },
    "glue:GetDevEndpoints": {
        "body": "glue:GetDevEndpoints",
        "description": "Add 'glue:GetDevEndpoints' action",
        "prefix": "glue:GetDevEndpoints"
    },
    "glue:GetJob": {
        "body": "glue:GetJob",
        "description": "Add 'glue:GetJob' action",
        "prefix": "glue:GetJob"
    },
    "glue:GetJobRun": {
        "body": "glue:GetJobRun",
        "description": "Add 'glue:GetJobRun' action",
        "prefix": "glue:GetJobRun"
    },
    "glue:GetJobRuns": {
        "body": "glue:GetJobRuns",
        "description": "Add 'glue:GetJobRuns' action",
        "prefix": "glue:GetJobRuns"
    },
    "glue:GetJobs": {
        "body": "glue:GetJobs",
        "description": "Add 'glue:GetJobs' action",
        "prefix": "glue:GetJobs"
    },
    "glue:GetMapping": {
        "body": "glue:GetMapping",
        "description": "Add 'glue:GetMapping' action",
        "prefix": "glue:GetMapping"
    },
    "glue:GetPartition": {
        "body": "glue:GetPartition",
        "description": "Add 'glue:GetPartition' action",
        "prefix": "glue:GetPartition"
    },
    "glue:GetPartitions": {
        "body": "glue:GetPartitions",
        "description": "Add 'glue:GetPartitions' action",
        "prefix": "glue:GetPartitions"
    },
    "glue:GetPlan": {
        "body": "glue:GetPlan",
        "description": "Add 'glue:GetPlan' action",
        "prefix": "glue:GetPlan"
    },
    "glue:GetTable": {
        "body": "glue:GetTable",
        "description": "Add 'glue:GetTable' action",
        "prefix": "glue:GetTable"
    },
    "glue:GetTableVersions": {
        "body": "glue:GetTableVersions",
        "description": "Add 'glue:GetTableVersions' action",
        "prefix": "glue:GetTableVersions"
    },
    "glue:GetTables": {
        "body": "glue:GetTables",
        "description": "Add 'glue:GetTables' action",
        "prefix": "glue:GetTables"
    },
    "glue:GetTrigger": {
        "body": "glue:GetTrigger",
        "description": "Add 'glue:GetTrigger' action",
        "prefix": "glue:GetTrigger"
    },
    "glue:GetTriggers": {
        "body": "glue:GetTriggers",
        "description": "Add 'glue:GetTriggers' action",
        "prefix": "glue:GetTriggers"
    },
    "glue:GetUserDefinedFunction": {
        "body": "glue:GetUserDefinedFunction",
        "description": "Add 'glue:GetUserDefinedFunction' action",
        "prefix": "glue:GetUserDefinedFunction"
    },
    "glue:GetUserDefinedFunctions": {
        "body": "glue:GetUserDefinedFunctions",
        "description": "Add 'glue:GetUserDefinedFunctions' action",
        "prefix": "glue:GetUserDefinedFunctions"
    },
    "glue:ImportCatalogToGlue": {
        "body": "glue:ImportCatalogToGlue",
        "description": "Add 'glue:ImportCatalogToGlue' action",
        "prefix": "glue:ImportCatalogToGlue"
    },
    "glue:ResetJobBookmark": {
        "body": "glue:ResetJobBookmark",
        "description": "Add 'glue:ResetJobBookmark' action",
        "prefix": "glue:ResetJobBookmark"
    },
    "glue:StartCrawler": {
        "body": "glue:StartCrawler",
        "description": "Add 'glue:StartCrawler' action",
        "prefix": "glue:StartCrawler"
    },
    "glue:StartCrawlerSchedule": {
        "body": "glue:StartCrawlerSchedule",
        "description": "Add 'glue:StartCrawlerSchedule' action",
        "prefix": "glue:StartCrawlerSchedule"
    },
    "glue:StartJobRun": {
        "body": "glue:StartJobRun",
        "description": "Add 'glue:StartJobRun' action",
        "prefix": "glue:StartJobRun"
    },
    "glue:StartTrigger": {
        "body": "glue:StartTrigger",
        "description": "Add 'glue:StartTrigger' action",
        "prefix": "glue:StartTrigger"
    },
    "glue:StopCrawler": {
        "body": "glue:StopCrawler",
        "description": "Add 'glue:StopCrawler' action",
        "prefix": "glue:StopCrawler"
    },
    "glue:StopCrawlerSchedule": {
        "body": "glue:StopCrawlerSchedule",
        "description": "Add 'glue:StopCrawlerSchedule' action",
        "prefix": "glue:StopCrawlerSchedule"
    },
    "glue:StopTrigger": {
        "body": "glue:StopTrigger",
        "description": "Add 'glue:StopTrigger' action",
        "prefix": "glue:StopTrigger"
    },
    "glue:UpdateClassifier": {
        "body": "glue:UpdateClassifier",
        "description": "Add 'glue:UpdateClassifier' action",
        "prefix": "glue:UpdateClassifier"
    },
    "glue:UpdateConnection": {
        "body": "glue:UpdateConnection",
        "description": "Add 'glue:UpdateConnection' action",
        "prefix": "glue:UpdateConnection"
    },
    "glue:UpdateCrawler": {
        "body": "glue:UpdateCrawler",
        "description": "Add 'glue:UpdateCrawler' action",
        "prefix": "glue:UpdateCrawler"
    },
    "glue:UpdateDatabase": {
        "body": "glue:UpdateDatabase",
        "description": "Add 'glue:UpdateDatabase' action",
        "prefix": "glue:UpdateDatabase"
    },
    "glue:UpdateDevEndpoint": {
        "body": "glue:UpdateDevEndpoint",
        "description": "Add 'glue:UpdateDevEndpoint' action",
        "prefix": "glue:UpdateDevEndpoint"
    },
    "glue:UpdateJob": {
        "body": "glue:UpdateJob",
        "description": "Add 'glue:UpdateJob' action",
        "prefix": "glue:UpdateJob"
    },
    "glue:UpdatePartition": {
        "body": "glue:UpdatePartition",
        "description": "Add 'glue:UpdatePartition' action",
        "prefix": "glue:UpdatePartition"
    },
    "glue:UpdateTable": {
        "body": "glue:UpdateTable",
        "description": "Add 'glue:UpdateTable' action",
        "prefix": "glue:UpdateTable"
    },
    "glue:UpdateTrigger": {
        "body": "glue:UpdateTrigger",
        "description": "Add 'glue:UpdateTrigger' action",
        "prefix": "glue:UpdateTrigger"
    },
    "glue:UpdateUserDefinedFunction": {
        "body": "glue:UpdateUserDefinedFunction",
        "description": "Add 'glue:UpdateUserDefinedFunction' action",
        "prefix": "glue:UpdateUserDefinedFunction"
    },
    "greengrass:AssociateRoleToGroup": {
        "body": "greengrass:AssociateRoleToGroup",
        "description": "Add 'greengrass:AssociateRoleToGroup' action",
        "prefix": "greengrass:AssociateRoleToGroup"
    },
    "greengrass:AssociateServiceRoleToAccount": {
        "body": "greengrass:AssociateServiceRoleToAccount",
        "description": "Add 'greengrass:AssociateServiceRoleToAccount' action",
        "prefix": "greengrass:AssociateServiceRoleToAccount"
    },
    "greengrass:CreateCoreDefinition": {
        "body": "greengrass:CreateCoreDefinition",
        "description": "Add 'greengrass:CreateCoreDefinition' action",
        "prefix": "greengrass:CreateCoreDefinition"
    },
    "greengrass:CreateCoreDefinitionVersion": {
        "body": "greengrass:CreateCoreDefinitionVersion",
        "description": "Add 'greengrass:CreateCoreDefinitionVersion' action",
        "prefix": "greengrass:CreateCoreDefinitionVersion"
    },
    "greengrass:CreateDeployment": {
        "body": "greengrass:CreateDeployment",
        "description": "Add 'greengrass:CreateDeployment' action",
        "prefix": "greengrass:CreateDeployment"
    },
    "greengrass:CreateDeviceDefinition": {
        "body": "greengrass:CreateDeviceDefinition",
        "description": "Add 'greengrass:CreateDeviceDefinition' action",
        "prefix": "greengrass:CreateDeviceDefinition"
    },
    "greengrass:CreateDeviceDefinitionVersion": {
        "body": "greengrass:CreateDeviceDefinitionVersion",
        "description": "Add 'greengrass:CreateDeviceDefinitionVersion' action",
        "prefix": "greengrass:CreateDeviceDefinitionVersion"
    },
    "greengrass:CreateFunctionDefinition": {
        "body": "greengrass:CreateFunctionDefinition",
        "description": "Add 'greengrass:CreateFunctionDefinition' action",
        "prefix": "greengrass:CreateFunctionDefinition"
    },
    "greengrass:CreateFunctionDefinitionVersion": {
        "body": "greengrass:CreateFunctionDefinitionVersion",
        "description": "Add 'greengrass:CreateFunctionDefinitionVersion' action",
        "prefix": "greengrass:CreateFunctionDefinitionVersion"
    },
    "greengrass:CreateGroup": {
        "body": "greengrass:CreateGroup",
        "description": "Add 'greengrass:CreateGroup' action",
        "prefix": "greengrass:CreateGroup"
    },
    "greengrass:CreateGroupCertificateAuthority": {
        "body": "greengrass:CreateGroupCertificateAuthority",
        "description": "Add 'greengrass:CreateGroupCertificateAuthority' action",
        "prefix": "greengrass:CreateGroupCertificateAuthority"
    },
    "greengrass:CreateGroupVersion": {
        "body": "greengrass:CreateGroupVersion",
        "description": "Add 'greengrass:CreateGroupVersion' action",
        "prefix": "greengrass:CreateGroupVersion"
    },
    "greengrass:CreateLoggerDefinition": {
        "body": "greengrass:CreateLoggerDefinition",
        "description": "Add 'greengrass:CreateLoggerDefinition' action",
        "prefix": "greengrass:CreateLoggerDefinition"
    },
    "greengrass:CreateLoggerDefinitionVersion": {
        "body": "greengrass:CreateLoggerDefinitionVersion",
        "description": "Add 'greengrass:CreateLoggerDefinitionVersion' action",
        "prefix": "greengrass:CreateLoggerDefinitionVersion"
    },
    "greengrass:CreateResourceDefinition": {
        "body": "greengrass:CreateResourceDefinition",
        "description": "Add 'greengrass:CreateResourceDefinition' action",
        "prefix": "greengrass:CreateResourceDefinition"
    },
    "greengrass:CreateResourceDefinitionVersion": {
        "body": "greengrass:CreateResourceDefinitionVersion",
        "description": "Add 'greengrass:CreateResourceDefinitionVersion' action",
        "prefix": "greengrass:CreateResourceDefinitionVersion"
    },
    "greengrass:CreateSoftwareUpdateJob": {
        "body": "greengrass:CreateSoftwareUpdateJob",
        "description": "Add 'greengrass:CreateSoftwareUpdateJob' action",
        "prefix": "greengrass:CreateSoftwareUpdateJob"
    },
    "greengrass:CreateSubscriptionDefinition": {
        "body": "greengrass:CreateSubscriptionDefinition",
        "description": "Add 'greengrass:CreateSubscriptionDefinition' action",
        "prefix": "greengrass:CreateSubscriptionDefinition"
    },
    "greengrass:CreateSubscriptionDefinitionVersion": {
        "body": "greengrass:CreateSubscriptionDefinitionVersion",
        "description": "Add 'greengrass:CreateSubscriptionDefinitionVersion' action",
        "prefix": "greengrass:CreateSubscriptionDefinitionVersion"
    },
    "greengrass:DeleteCoreDefinition": {
        "body": "greengrass:DeleteCoreDefinition",
        "description": "Add 'greengrass:DeleteCoreDefinition' action",
        "prefix": "greengrass:DeleteCoreDefinition"
    },
    "greengrass:DeleteDeviceDefinition": {
        "body": "greengrass:DeleteDeviceDefinition",
        "description": "Add 'greengrass:DeleteDeviceDefinition' action",
        "prefix": "greengrass:DeleteDeviceDefinition"
    },
    "greengrass:DeleteFunctionDefinition": {
        "body": "greengrass:DeleteFunctionDefinition",
        "description": "Add 'greengrass:DeleteFunctionDefinition' action",
        "prefix": "greengrass:DeleteFunctionDefinition"
    },
    "greengrass:DeleteGroup": {
        "body": "greengrass:DeleteGroup",
        "description": "Add 'greengrass:DeleteGroup' action",
        "prefix": "greengrass:DeleteGroup"
    },
    "greengrass:DeleteLoggerDefinition": {
        "body": "greengrass:DeleteLoggerDefinition",
        "description": "Add 'greengrass:DeleteLoggerDefinition' action",
        "prefix": "greengrass:DeleteLoggerDefinition"
    },
    "greengrass:DeleteResourceDefinition": {
        "body": "greengrass:DeleteResourceDefinition",
        "description": "Add 'greengrass:DeleteResourceDefinition' action",
        "prefix": "greengrass:DeleteResourceDefinition"
    },
    "greengrass:DeleteSubscriptionDefinition": {
        "body": "greengrass:DeleteSubscriptionDefinition",
        "description": "Add 'greengrass:DeleteSubscriptionDefinition' action",
        "prefix": "greengrass:DeleteSubscriptionDefinition"
    },
    "greengrass:DisassociateRoleFromGroup": {
        "body": "greengrass:DisassociateRoleFromGroup",
        "description": "Add 'greengrass:DisassociateRoleFromGroup' action",
        "prefix": "greengrass:DisassociateRoleFromGroup"
    },
    "greengrass:DisassociateServiceRoleFromAccount": {
        "body": "greengrass:DisassociateServiceRoleFromAccount",
        "description": "Add 'greengrass:DisassociateServiceRoleFromAccount' action",
        "prefix": "greengrass:DisassociateServiceRoleFromAccount"
    },
    "greengrass:GetAssociatedRole": {
        "body": "greengrass:GetAssociatedRole",
        "description": "Add 'greengrass:GetAssociatedRole' action",
        "prefix": "greengrass:GetAssociatedRole"
    },
    "greengrass:GetConnectivityInfo": {
        "body": "greengrass:GetConnectivityInfo",
        "description": "Add 'greengrass:GetConnectivityInfo' action",
        "prefix": "greengrass:GetConnectivityInfo"
    },
    "greengrass:GetCoreDefinition": {
        "body": "greengrass:GetCoreDefinition",
        "description": "Add 'greengrass:GetCoreDefinition' action",
        "prefix": "greengrass:GetCoreDefinition"
    },
    "greengrass:GetCoreDefinitionVersion": {
        "body": "greengrass:GetCoreDefinitionVersion",
        "description": "Add 'greengrass:GetCoreDefinitionVersion' action",
        "prefix": "greengrass:GetCoreDefinitionVersion"
    },
    "greengrass:GetDeploymentStatus": {
        "body": "greengrass:GetDeploymentStatus",
        "description": "Add 'greengrass:GetDeploymentStatus' action",
        "prefix": "greengrass:GetDeploymentStatus"
    },
    "greengrass:GetDeviceDefinition": {
        "body": "greengrass:GetDeviceDefinition",
        "description": "Add 'greengrass:GetDeviceDefinition' action",
        "prefix": "greengrass:GetDeviceDefinition"
    },
    "greengrass:GetDeviceDefinitionVersion": {
        "body": "greengrass:GetDeviceDefinitionVersion",
        "description": "Add 'greengrass:GetDeviceDefinitionVersion' action",
        "prefix": "greengrass:GetDeviceDefinitionVersion"
    },
    "greengrass:GetFunctionDefinition": {
        "body": "greengrass:GetFunctionDefinition",
        "description": "Add 'greengrass:GetFunctionDefinition' action",
        "prefix": "greengrass:GetFunctionDefinition"
    },
    "greengrass:GetFunctionDefinitionVersion": {
        "body": "greengrass:GetFunctionDefinitionVersion",
        "description": "Add 'greengrass:GetFunctionDefinitionVersion' action",
        "prefix": "greengrass:GetFunctionDefinitionVersion"
    },
    "greengrass:GetGroup": {
        "body": "greengrass:GetGroup",
        "description": "Add 'greengrass:GetGroup' action",
        "prefix": "greengrass:GetGroup"
    },
    "greengrass:GetGroupCertificateAuthority": {
        "body": "greengrass:GetGroupCertificateAuthority",
        "description": "Add 'greengrass:GetGroupCertificateAuthority' action",
        "prefix": "greengrass:GetGroupCertificateAuthority"
    },
    "greengrass:GetGroupCertificateConfiguration": {
        "body": "greengrass:GetGroupCertificateConfiguration",
        "description": "Add 'greengrass:GetGroupCertificateConfiguration' action",
        "prefix": "greengrass:GetGroupCertificateConfiguration"
    },
    "greengrass:GetGroupVersion": {
        "body": "greengrass:GetGroupVersion",
        "description": "Add 'greengrass:GetGroupVersion' action",
        "prefix": "greengrass:GetGroupVersion"
    },
    "greengrass:GetLoggerDefinition": {
        "body": "greengrass:GetLoggerDefinition",
        "description": "Add 'greengrass:GetLoggerDefinition' action",
        "prefix": "greengrass:GetLoggerDefinition"
    },
    "greengrass:GetLoggerDefinitionVersion": {
        "body": "greengrass:GetLoggerDefinitionVersion",
        "description": "Add 'greengrass:GetLoggerDefinitionVersion' action",
        "prefix": "greengrass:GetLoggerDefinitionVersion"
    },
    "greengrass:GetResourceDefinition": {
        "body": "greengrass:GetResourceDefinition",
        "description": "Add 'greengrass:GetResourceDefinition' action",
        "prefix": "greengrass:GetResourceDefinition"
    },
    "greengrass:GetResourceDefinitionVersion": {
        "body": "greengrass:GetResourceDefinitionVersion",
        "description": "Add 'greengrass:GetResourceDefinitionVersion' action",
        "prefix": "greengrass:GetResourceDefinitionVersion"
    },
    "greengrass:GetServiceRoleForAccount": {
        "body": "greengrass:GetServiceRoleForAccount",
        "description": "Add 'greengrass:GetServiceRoleForAccount' action",
        "prefix": "greengrass:GetServiceRoleForAccount"
    },
    "greengrass:GetSubscriptionDefinition": {
        "body": "greengrass:GetSubscriptionDefinition",
        "description": "Add 'greengrass:GetSubscriptionDefinition' action",
        "prefix": "greengrass:GetSubscriptionDefinition"
    },
    "greengrass:GetSubscriptionDefinitionVersion": {
        "body": "greengrass:GetSubscriptionDefinitionVersion",
        "description": "Add 'greengrass:GetSubscriptionDefinitionVersion' action",
        "prefix": "greengrass:GetSubscriptionDefinitionVersion"
    },
    "greengrass:ListCoreDefinitionVersions": {
        "body": "greengrass:ListCoreDefinitionVersions",
        "description": "Add 'greengrass:ListCoreDefinitionVersions' action",
        "prefix": "greengrass:ListCoreDefinitionVersions"
    },
    "greengrass:ListCoreDefinitions": {
        "body": "greengrass:ListCoreDefinitions",
        "description": "Add 'greengrass:ListCoreDefinitions' action",
        "prefix": "greengrass:ListCoreDefinitions"
    },
    "greengrass:ListDeployments": {
        "body": "greengrass:ListDeployments",
        "description": "Add 'greengrass:ListDeployments' action",
        "prefix": "greengrass:ListDeployments"
    },
    "greengrass:ListDeviceDefinitionVersions": {
        "body": "greengrass:ListDeviceDefinitionVersions",
        "description": "Add 'greengrass:ListDeviceDefinitionVersions' action",
        "prefix": "greengrass:ListDeviceDefinitionVersions"
    },
    "greengrass:ListDeviceDefinitions": {
        "body": "greengrass:ListDeviceDefinitions",
        "description": "Add 'greengrass:ListDeviceDefinitions' action",
        "prefix": "greengrass:ListDeviceDefinitions"
    },
    "greengrass:ListFunctionDefinitionVersions": {
        "body": "greengrass:ListFunctionDefinitionVersions",
        "description": "Add 'greengrass:ListFunctionDefinitionVersions' action",
        "prefix": "greengrass:ListFunctionDefinitionVersions"
    },
    "greengrass:ListFunctionDefinitions": {
        "body": "greengrass:ListFunctionDefinitions",
        "description": "Add 'greengrass:ListFunctionDefinitions' action",
        "prefix": "greengrass:ListFunctionDefinitions"
    },
    "greengrass:ListGroupCertificateAuthorities": {
        "body": "greengrass:ListGroupCertificateAuthorities",
        "description": "Add 'greengrass:ListGroupCertificateAuthorities' action",
        "prefix": "greengrass:ListGroupCertificateAuthorities"
    },
    "greengrass:ListGroupVersions": {
        "body": "greengrass:ListGroupVersions",
        "description": "Add 'greengrass:ListGroupVersions' action",
        "prefix": "greengrass:ListGroupVersions"
    },
    "greengrass:ListGroups": {
        "body": "greengrass:ListGroups",
        "description": "Add 'greengrass:ListGroups' action",
        "prefix": "greengrass:ListGroups"
    },
    "greengrass:ListLoggerDefinitionVersions": {
        "body": "greengrass:ListLoggerDefinitionVersions",
        "description": "Add 'greengrass:ListLoggerDefinitionVersions' action",
        "prefix": "greengrass:ListLoggerDefinitionVersions"
    },
    "greengrass:ListLoggerDefinitions": {
        "body": "greengrass:ListLoggerDefinitions",
        "description": "Add 'greengrass:ListLoggerDefinitions' action",
        "prefix": "greengrass:ListLoggerDefinitions"
    },
    "greengrass:ListResourceDefinitionVersions": {
        "body": "greengrass:ListResourceDefinitionVersions",
        "description": "Add 'greengrass:ListResourceDefinitionVersions' action",
        "prefix": "greengrass:ListResourceDefinitionVersions"
    },
    "greengrass:ListResourceDefinitions": {
        "body": "greengrass:ListResourceDefinitions",
        "description": "Add 'greengrass:ListResourceDefinitions' action",
        "prefix": "greengrass:ListResourceDefinitions"
    },
    "greengrass:ListSubscriptionDefinitionVersions": {
        "body": "greengrass:ListSubscriptionDefinitionVersions",
        "description": "Add 'greengrass:ListSubscriptionDefinitionVersions' action",
        "prefix": "greengrass:ListSubscriptionDefinitionVersions"
    },
    "greengrass:ListSubscriptionDefinitions": {
        "body": "greengrass:ListSubscriptionDefinitions",
        "description": "Add 'greengrass:ListSubscriptionDefinitions' action",
        "prefix": "greengrass:ListSubscriptionDefinitions"
    },
    "greengrass:ResetDeployments": {
        "body": "greengrass:ResetDeployments",
        "description": "Add 'greengrass:ResetDeployments' action",
        "prefix": "greengrass:ResetDeployments"
    },
    "greengrass:UpdateConnectivityInfo": {
        "body": "greengrass:UpdateConnectivityInfo",
        "description": "Add 'greengrass:UpdateConnectivityInfo' action",
        "prefix": "greengrass:UpdateConnectivityInfo"
    },
    "greengrass:UpdateCoreDefinition": {
        "body": "greengrass:UpdateCoreDefinition",
        "description": "Add 'greengrass:UpdateCoreDefinition' action",
        "prefix": "greengrass:UpdateCoreDefinition"
    },
    "greengrass:UpdateDeviceDefinition": {
        "body": "greengrass:UpdateDeviceDefinition",
        "description": "Add 'greengrass:UpdateDeviceDefinition' action",
        "prefix": "greengrass:UpdateDeviceDefinition"
    },
    "greengrass:UpdateFunctionDefinition": {
        "body": "greengrass:UpdateFunctionDefinition",
        "description": "Add 'greengrass:UpdateFunctionDefinition' action",
        "prefix": "greengrass:UpdateFunctionDefinition"
    },
    "greengrass:UpdateGroup": {
        "body": "greengrass:UpdateGroup",
        "description": "Add 'greengrass:UpdateGroup' action",
        "prefix": "greengrass:UpdateGroup"
    },
    "greengrass:UpdateGroupCertificateConfiguration": {
        "body": "greengrass:UpdateGroupCertificateConfiguration",
        "description": "Add 'greengrass:UpdateGroupCertificateConfiguration' action",
        "prefix": "greengrass:UpdateGroupCertificateConfiguration"
    },
    "greengrass:UpdateLoggerDefinition": {
        "body": "greengrass:UpdateLoggerDefinition",
        "description": "Add 'greengrass:UpdateLoggerDefinition' action",
        "prefix": "greengrass:UpdateLoggerDefinition"
    },
    "greengrass:UpdateResourceDefinition": {
        "body": "greengrass:UpdateResourceDefinition",
        "description": "Add 'greengrass:UpdateResourceDefinition' action",
        "prefix": "greengrass:UpdateResourceDefinition"
    },
    "greengrass:UpdateSubscriptionDefinition": {
        "body": "greengrass:UpdateSubscriptionDefinition",
        "description": "Add 'greengrass:UpdateSubscriptionDefinition' action",
        "prefix": "greengrass:UpdateSubscriptionDefinition"
    },
    "guardduty:AcceptInvitation": {
        "body": "guardduty:AcceptInvitation",
        "description": "Add 'guardduty:AcceptInvitation' action",
        "prefix": "guardduty:AcceptInvitation"
    },
    "guardduty:ArchiveFindings": {
        "body": "guardduty:ArchiveFindings",
        "description": "Add 'guardduty:ArchiveFindings' action",
        "prefix": "guardduty:ArchiveFindings"
    },
    "guardduty:CreateDetector": {
        "body": "guardduty:CreateDetector",
        "description": "Add 'guardduty:CreateDetector' action",
        "prefix": "guardduty:CreateDetector"
    },
    "guardduty:CreateIPSet": {
        "body": "guardduty:CreateIPSet",
        "description": "Add 'guardduty:CreateIPSet' action",
        "prefix": "guardduty:CreateIPSet"
    },
    "guardduty:CreateMembers": {
        "body": "guardduty:CreateMembers",
        "description": "Add 'guardduty:CreateMembers' action",
        "prefix": "guardduty:CreateMembers"
    },
    "guardduty:CreateSampleFindings": {
        "body": "guardduty:CreateSampleFindings",
        "description": "Add 'guardduty:CreateSampleFindings' action",
        "prefix": "guardduty:CreateSampleFindings"
    },
    "guardduty:CreateThreatIntelSet": {
        "body": "guardduty:CreateThreatIntelSet",
        "description": "Add 'guardduty:CreateThreatIntelSet' action",
        "prefix": "guardduty:CreateThreatIntelSet"
    },
    "guardduty:DeclineInvitations": {
        "body": "guardduty:DeclineInvitations",
        "description": "Add 'guardduty:DeclineInvitations' action",
        "prefix": "guardduty:DeclineInvitations"
    },
    "guardduty:DeleteDetector": {
        "body": "guardduty:DeleteDetector",
        "description": "Add 'guardduty:DeleteDetector' action",
        "prefix": "guardduty:DeleteDetector"
    },
    "guardduty:DeleteIPSet": {
        "body": "guardduty:DeleteIPSet",
        "description": "Add 'guardduty:DeleteIPSet' action",
        "prefix": "guardduty:DeleteIPSet"
    },
    "guardduty:DeleteInvitations": {
        "body": "guardduty:DeleteInvitations",
        "description": "Add 'guardduty:DeleteInvitations' action",
        "prefix": "guardduty:DeleteInvitations"
    },
    "guardduty:DeleteMembers": {
        "body": "guardduty:DeleteMembers",
        "description": "Add 'guardduty:DeleteMembers' action",
        "prefix": "guardduty:DeleteMembers"
    },
    "guardduty:DeleteThreatIntelSet": {
        "body": "guardduty:DeleteThreatIntelSet",
        "description": "Add 'guardduty:DeleteThreatIntelSet' action",
        "prefix": "guardduty:DeleteThreatIntelSet"
    },
    "guardduty:DisassociateFromMasterAccount": {
        "body": "guardduty:DisassociateFromMasterAccount",
        "description": "Add 'guardduty:DisassociateFromMasterAccount' action",
        "prefix": "guardduty:DisassociateFromMasterAccount"
    },
    "guardduty:DisassociateMembers": {
        "body": "guardduty:DisassociateMembers",
        "description": "Add 'guardduty:DisassociateMembers' action",
        "prefix": "guardduty:DisassociateMembers"
    },
    "guardduty:GetDetector": {
        "body": "guardduty:GetDetector",
        "description": "Add 'guardduty:GetDetector' action",
        "prefix": "guardduty:GetDetector"
    },
    "guardduty:GetFindings": {
        "body": "guardduty:GetFindings",
        "description": "Add 'guardduty:GetFindings' action",
        "prefix": "guardduty:GetFindings"
    },
    "guardduty:GetFindingsStatistics": {
        "body": "guardduty:GetFindingsStatistics",
        "description": "Add 'guardduty:GetFindingsStatistics' action",
        "prefix": "guardduty:GetFindingsStatistics"
    },
    "guardduty:GetIPSet": {
        "body": "guardduty:GetIPSet",
        "description": "Add 'guardduty:GetIPSet' action",
        "prefix": "guardduty:GetIPSet"
    },
    "guardduty:GetInvitationsCount": {
        "body": "guardduty:GetInvitationsCount",
        "description": "Add 'guardduty:GetInvitationsCount' action",
        "prefix": "guardduty:GetInvitationsCount"
    },
    "guardduty:GetMasterAccount": {
        "body": "guardduty:GetMasterAccount",
        "description": "Add 'guardduty:GetMasterAccount' action",
        "prefix": "guardduty:GetMasterAccount"
    },
    "guardduty:GetMembers": {
        "body": "guardduty:GetMembers",
        "description": "Add 'guardduty:GetMembers' action",
        "prefix": "guardduty:GetMembers"
    },
    "guardduty:GetThreatIntelSet": {
        "body": "guardduty:GetThreatIntelSet",
        "description": "Add 'guardduty:GetThreatIntelSet' action",
        "prefix": "guardduty:GetThreatIntelSet"
    },
    "guardduty:InviteMembers": {
        "body": "guardduty:InviteMembers",
        "description": "Add 'guardduty:InviteMembers' action",
        "prefix": "guardduty:InviteMembers"
    },
    "guardduty:ListDetectors": {
        "body": "guardduty:ListDetectors",
        "description": "Add 'guardduty:ListDetectors' action",
        "prefix": "guardduty:ListDetectors"
    },
    "guardduty:ListFindings": {
        "body": "guardduty:ListFindings",
        "description": "Add 'guardduty:ListFindings' action",
        "prefix": "guardduty:ListFindings"
    },
    "guardduty:ListIPSets": {
        "body": "guardduty:ListIPSets",
        "description": "Add 'guardduty:ListIPSets' action",
        "prefix": "guardduty:ListIPSets"
    },
    "guardduty:ListInvitations": {
        "body": "guardduty:ListInvitations",
        "description": "Add 'guardduty:ListInvitations' action",
        "prefix": "guardduty:ListInvitations"
    },
    "guardduty:ListMembers": {
        "body": "guardduty:ListMembers",
        "description": "Add 'guardduty:ListMembers' action",
        "prefix": "guardduty:ListMembers"
    },
    "guardduty:ListThreatIntelSets": {
        "body": "guardduty:ListThreatIntelSets",
        "description": "Add 'guardduty:ListThreatIntelSets' action",
        "prefix": "guardduty:ListThreatIntelSets"
    },
    "guardduty:StartMonitoringMembers": {
        "body": "guardduty:StartMonitoringMembers",
        "description": "Add 'guardduty:StartMonitoringMembers' action",
        "prefix": "guardduty:StartMonitoringMembers"
    },
    "guardduty:StopMonitoringMembers": {
        "body": "guardduty:StopMonitoringMembers",
        "description": "Add 'guardduty:StopMonitoringMembers' action",
        "prefix": "guardduty:StopMonitoringMembers"
    },
    "guardduty:UnarchiveFindings": {
        "body": "guardduty:UnarchiveFindings",
        "description": "Add 'guardduty:UnarchiveFindings' action",
        "prefix": "guardduty:UnarchiveFindings"
    },
    "guardduty:UpdateDetector": {
        "body": "guardduty:UpdateDetector",
        "description": "Add 'guardduty:UpdateDetector' action",
        "prefix": "guardduty:UpdateDetector"
    },
    "guardduty:UpdateFindingsFeedback": {
        "body": "guardduty:UpdateFindingsFeedback",
        "description": "Add 'guardduty:UpdateFindingsFeedback' action",
        "prefix": "guardduty:UpdateFindingsFeedback"
    },
    "guardduty:UpdateIPSet": {
        "body": "guardduty:UpdateIPSet",
        "description": "Add 'guardduty:UpdateIPSet' action",
        "prefix": "guardduty:UpdateIPSet"
    },
    "guardduty:UpdateThreatIntelSet": {
        "body": "guardduty:UpdateThreatIntelSet",
        "description": "Add 'guardduty:UpdateThreatIntelSet' action",
        "prefix": "guardduty:UpdateThreatIntelSet"
    },
    "health:DescribeAffectedEntities": {
        "body": "health:DescribeAffectedEntities",
        "description": "Add 'health:DescribeAffectedEntities' action",
        "prefix": "health:DescribeAffectedEntities"
    },
    "health:DescribeEntityAggregates": {
        "body": "health:DescribeEntityAggregates",
        "description": "Add 'health:DescribeEntityAggregates' action",
        "prefix": "health:DescribeEntityAggregates"
    },
    "health:DescribeEventAggregates": {
        "body": "health:DescribeEventAggregates",
        "description": "Add 'health:DescribeEventAggregates' action",
        "prefix": "health:DescribeEventAggregates"
    },
    "health:DescribeEventDetails": {
        "body": "health:DescribeEventDetails",
        "description": "Add 'health:DescribeEventDetails' action",
        "prefix": "health:DescribeEventDetails"
    },
    "health:DescribeEventTypes": {
        "body": "health:DescribeEventTypes",
        "description": "Add 'health:DescribeEventTypes' action",
        "prefix": "health:DescribeEventTypes"
    },
    "health:DescribeEvents": {
        "body": "health:DescribeEvents",
        "description": "Add 'health:DescribeEvents' action",
        "prefix": "health:DescribeEvents"
    },
    "iam:AddClientIDToOpenIDConnectProvider": {
        "body": "iam:AddClientIDToOpenIDConnectProvider",
        "description": "Add 'iam:AddClientIDToOpenIDConnectProvider' action",
        "prefix": "iam:AddClientIDToOpenIDConnectProvider"
    },
    "iam:AddRoleToInstanceProfile": {
        "body": "iam:AddRoleToInstanceProfile",
        "description": "Add 'iam:AddRoleToInstanceProfile' action",
        "prefix": "iam:AddRoleToInstanceProfile"
    },
    "iam:AddUserToGroup": {
        "body": "iam:AddUserToGroup",
        "description": "Add 'iam:AddUserToGroup' action",
        "prefix": "iam:AddUserToGroup"
    },
    "iam:AttachGroupPolicy": {
        "body": "iam:AttachGroupPolicy",
        "description": "Add 'iam:AttachGroupPolicy' action",
        "prefix": "iam:AttachGroupPolicy"
    },
    "iam:AttachRolePolicy": {
        "body": "iam:AttachRolePolicy",
        "description": "Add 'iam:AttachRolePolicy' action",
        "prefix": "iam:AttachRolePolicy"
    },
    "iam:AttachUserPolicy": {
        "body": "iam:AttachUserPolicy",
        "description": "Add 'iam:AttachUserPolicy' action",
        "prefix": "iam:AttachUserPolicy"
    },
    "iam:ChangePassword": {
        "body": "iam:ChangePassword",
        "description": "Add 'iam:ChangePassword' action",
        "prefix": "iam:ChangePassword"
    },
    "iam:CreateAccessKey": {
        "body": "iam:CreateAccessKey",
        "description": "Add 'iam:CreateAccessKey' action",
        "prefix": "iam:CreateAccessKey"
    },
    "iam:CreateAccountAlias": {
        "body": "iam:CreateAccountAlias",
        "description": "Add 'iam:CreateAccountAlias' action",
        "prefix": "iam:CreateAccountAlias"
    },
    "iam:CreateGroup": {
        "body": "iam:CreateGroup",
        "description": "Add 'iam:CreateGroup' action",
        "prefix": "iam:CreateGroup"
    },
    "iam:CreateInstanceProfile": {
        "body": "iam:CreateInstanceProfile",
        "description": "Add 'iam:CreateInstanceProfile' action",
        "prefix": "iam:CreateInstanceProfile"
    },
    "iam:CreateLoginProfile": {
        "body": "iam:CreateLoginProfile",
        "description": "Add 'iam:CreateLoginProfile' action",
        "prefix": "iam:CreateLoginProfile"
    },
    "iam:CreateOpenIDConnectProvider": {
        "body": "iam:CreateOpenIDConnectProvider",
        "description": "Add 'iam:CreateOpenIDConnectProvider' action",
        "prefix": "iam:CreateOpenIDConnectProvider"
    },
    "iam:CreatePolicy": {
        "body": "iam:CreatePolicy",
        "description": "Add 'iam:CreatePolicy' action",
        "prefix": "iam:CreatePolicy"
    },
    "iam:CreatePolicyVersion": {
        "body": "iam:CreatePolicyVersion",
        "description": "Add 'iam:CreatePolicyVersion' action",
        "prefix": "iam:CreatePolicyVersion"
    },
    "iam:CreateRole": {
        "body": "iam:CreateRole",
        "description": "Add 'iam:CreateRole' action",
        "prefix": "iam:CreateRole"
    },
    "iam:CreateSAMLProvider": {
        "body": "iam:CreateSAMLProvider",
        "description": "Add 'iam:CreateSAMLProvider' action",
        "prefix": "iam:CreateSAMLProvider"
    },
    "iam:CreateServiceLinkedRole": {
        "body": "iam:CreateServiceLinkedRole",
        "description": "Add 'iam:CreateServiceLinkedRole' action",
        "prefix": "iam:CreateServiceLinkedRole"
    },
    "iam:CreateServiceSpecificCredential": {
        "body": "iam:CreateServiceSpecificCredential",
        "description": "Add 'iam:CreateServiceSpecificCredential' action",
        "prefix": "iam:CreateServiceSpecificCredential"
    },
    "iam:CreateUser": {
        "body": "iam:CreateUser",
        "description": "Add 'iam:CreateUser' action",
        "prefix": "iam:CreateUser"
    },
    "iam:CreateVirtualMFADevice": {
        "body": "iam:CreateVirtualMFADevice",
        "description": "Add 'iam:CreateVirtualMFADevice' action",
        "prefix": "iam:CreateVirtualMFADevice"
    },
    "iam:DeactivateMFADevice": {
        "body": "iam:DeactivateMFADevice",
        "description": "Add 'iam:DeactivateMFADevice' action",
        "prefix": "iam:DeactivateMFADevice"
    },
    "iam:DeleteAccessKey": {
        "body": "iam:DeleteAccessKey",
        "description": "Add 'iam:DeleteAccessKey' action",
        "prefix": "iam:DeleteAccessKey"
    },
    "iam:DeleteAccountAlias": {
        "body": "iam:DeleteAccountAlias",
        "description": "Add 'iam:DeleteAccountAlias' action",
        "prefix": "iam:DeleteAccountAlias"
    },
    "iam:DeleteAccountPasswordPolicy": {
        "body": "iam:DeleteAccountPasswordPolicy",
        "description": "Add 'iam:DeleteAccountPasswordPolicy' action",
        "prefix": "iam:DeleteAccountPasswordPolicy"
    },
    "iam:DeleteGroup": {
        "body": "iam:DeleteGroup",
        "description": "Add 'iam:DeleteGroup' action",
        "prefix": "iam:DeleteGroup"
    },
    "iam:DeleteGroupPolicy": {
        "body": "iam:DeleteGroupPolicy",
        "description": "Add 'iam:DeleteGroupPolicy' action",
        "prefix": "iam:DeleteGroupPolicy"
    },
    "iam:DeleteInstanceProfile": {
        "body": "iam:DeleteInstanceProfile",
        "description": "Add 'iam:DeleteInstanceProfile' action",
        "prefix": "iam:DeleteInstanceProfile"
    },
    "iam:DeleteLoginProfile": {
        "body": "iam:DeleteLoginProfile",
        "description": "Add 'iam:DeleteLoginProfile' action",
        "prefix": "iam:DeleteLoginProfile"
    },
    "iam:DeleteOpenIDConnectProvider": {
        "body": "iam:DeleteOpenIDConnectProvider",
        "description": "Add 'iam:DeleteOpenIDConnectProvider' action",
        "prefix": "iam:DeleteOpenIDConnectProvider"
    },
    "iam:DeletePolicy": {
        "body": "iam:DeletePolicy",
        "description": "Add 'iam:DeletePolicy' action",
        "prefix": "iam:DeletePolicy"
    },
    "iam:DeletePolicyVersion": {
        "body": "iam:DeletePolicyVersion",
        "description": "Add 'iam:DeletePolicyVersion' action",
        "prefix": "iam:DeletePolicyVersion"
    },
    "iam:DeleteRole": {
        "body": "iam:DeleteRole",
        "description": "Add 'iam:DeleteRole' action",
        "prefix": "iam:DeleteRole"
    },
    "iam:DeleteRolePolicy": {
        "body": "iam:DeleteRolePolicy",
        "description": "Add 'iam:DeleteRolePolicy' action",
        "prefix": "iam:DeleteRolePolicy"
    },
    "iam:DeleteSAMLProvider": {
        "body": "iam:DeleteSAMLProvider",
        "description": "Add 'iam:DeleteSAMLProvider' action",
        "prefix": "iam:DeleteSAMLProvider"
    },
    "iam:DeleteSSHPublicKey": {
        "body": "iam:DeleteSSHPublicKey",
        "description": "Add 'iam:DeleteSSHPublicKey' action",
        "prefix": "iam:DeleteSSHPublicKey"
    },
    "iam:DeleteServerCertificate": {
        "body": "iam:DeleteServerCertificate",
        "description": "Add 'iam:DeleteServerCertificate' action",
        "prefix": "iam:DeleteServerCertificate"
    },
    "iam:DeleteServiceLinkedRole": {
        "body": "iam:DeleteServiceLinkedRole",
        "description": "Add 'iam:DeleteServiceLinkedRole' action",
        "prefix": "iam:DeleteServiceLinkedRole"
    },
    "iam:DeleteServiceSpecificCredential": {
        "body": "iam:DeleteServiceSpecificCredential",
        "description": "Add 'iam:DeleteServiceSpecificCredential' action",
        "prefix": "iam:DeleteServiceSpecificCredential"
    },
    "iam:DeleteSigningCertificate": {
        "body": "iam:DeleteSigningCertificate",
        "description": "Add 'iam:DeleteSigningCertificate' action",
        "prefix": "iam:DeleteSigningCertificate"
    },
    "iam:DeleteUser": {
        "body": "iam:DeleteUser",
        "description": "Add 'iam:DeleteUser' action",
        "prefix": "iam:DeleteUser"
    },
    "iam:DeleteUserPolicy": {
        "body": "iam:DeleteUserPolicy",
        "description": "Add 'iam:DeleteUserPolicy' action",
        "prefix": "iam:DeleteUserPolicy"
    },
    "iam:DeleteVirtualMFADevice": {
        "body": "iam:DeleteVirtualMFADevice",
        "description": "Add 'iam:DeleteVirtualMFADevice' action",
        "prefix": "iam:DeleteVirtualMFADevice"
    },
    "iam:DetachGroupPolicy": {
        "body": "iam:DetachGroupPolicy",
        "description": "Add 'iam:DetachGroupPolicy' action",
        "prefix": "iam:DetachGroupPolicy"
    },
    "iam:DetachRolePolicy": {
        "body": "iam:DetachRolePolicy",
        "description": "Add 'iam:DetachRolePolicy' action",
        "prefix": "iam:DetachRolePolicy"
    },
    "iam:DetachUserPolicy": {
        "body": "iam:DetachUserPolicy",
        "description": "Add 'iam:DetachUserPolicy' action",
        "prefix": "iam:DetachUserPolicy"
    },
    "iam:EnableMFADevice": {
        "body": "iam:EnableMFADevice",
        "description": "Add 'iam:EnableMFADevice' action",
        "prefix": "iam:EnableMFADevice"
    },
    "iam:GenerateCredentialReport": {
        "body": "iam:GenerateCredentialReport",
        "description": "Add 'iam:GenerateCredentialReport' action",
        "prefix": "iam:GenerateCredentialReport"
    },
    "iam:GenerateServiceLastAccessedDetails": {
        "body": "iam:GenerateServiceLastAccessedDetails",
        "description": "Add 'iam:GenerateServiceLastAccessedDetails' action",
        "prefix": "iam:GenerateServiceLastAccessedDetails"
    },
    "iam:GetAccessKeyLastUsed": {
        "body": "iam:GetAccessKeyLastUsed",
        "description": "Add 'iam:GetAccessKeyLastUsed' action",
        "prefix": "iam:GetAccessKeyLastUsed"
    },
    "iam:GetAccountAuthorizationDetails": {
        "body": "iam:GetAccountAuthorizationDetails",
        "description": "Add 'iam:GetAccountAuthorizationDetails' action",
        "prefix": "iam:GetAccountAuthorizationDetails"
    },
    "iam:GetAccountPasswordPolicy": {
        "body": "iam:GetAccountPasswordPolicy",
        "description": "Add 'iam:GetAccountPasswordPolicy' action",
        "prefix": "iam:GetAccountPasswordPolicy"
    },
    "iam:GetAccountSummary": {
        "body": "iam:GetAccountSummary",
        "description": "Add 'iam:GetAccountSummary' action",
        "prefix": "iam:GetAccountSummary"
    },
    "iam:GetContextKeysForCustomPolicy": {
        "body": "iam:GetContextKeysForCustomPolicy",
        "description": "Add 'iam:GetContextKeysForCustomPolicy' action",
        "prefix": "iam:GetContextKeysForCustomPolicy"
    },
    "iam:GetContextKeysForPrincipalPolicy": {
        "body": "iam:GetContextKeysForPrincipalPolicy",
        "description": "Add 'iam:GetContextKeysForPrincipalPolicy' action",
        "prefix": "iam:GetContextKeysForPrincipalPolicy"
    },
    "iam:GetCredentialReport": {
        "body": "iam:GetCredentialReport",
        "description": "Add 'iam:GetCredentialReport' action",
        "prefix": "iam:GetCredentialReport"
    },
    "iam:GetGroup": {
        "body": "iam:GetGroup",
        "description": "Add 'iam:GetGroup' action",
        "prefix": "iam:GetGroup"
    },
    "iam:GetGroupPolicy": {
        "body": "iam:GetGroupPolicy",
        "description": "Add 'iam:GetGroupPolicy' action",
        "prefix": "iam:GetGroupPolicy"
    },
    "iam:GetInstanceProfile": {
        "body": "iam:GetInstanceProfile",
        "description": "Add 'iam:GetInstanceProfile' action",
        "prefix": "iam:GetInstanceProfile"
    },
    "iam:GetLoginProfile": {
        "body": "iam:GetLoginProfile",
        "description": "Add 'iam:GetLoginProfile' action",
        "prefix": "iam:GetLoginProfile"
    },
    "iam:GetOpenIDConnectProvider": {
        "body": "iam:GetOpenIDConnectProvider",
        "description": "Add 'iam:GetOpenIDConnectProvider' action",
        "prefix": "iam:GetOpenIDConnectProvider"
    },
    "iam:GetPolicy": {
        "body": "iam:GetPolicy",
        "description": "Add 'iam:GetPolicy' action",
        "prefix": "iam:GetPolicy"
    },
    "iam:GetPolicyVersion": {
        "body": "iam:GetPolicyVersion",
        "description": "Add 'iam:GetPolicyVersion' action",
        "prefix": "iam:GetPolicyVersion"
    },
    "iam:GetRole": {
        "body": "iam:GetRole",
        "description": "Add 'iam:GetRole' action",
        "prefix": "iam:GetRole"
    },
    "iam:GetRolePolicy": {
        "body": "iam:GetRolePolicy",
        "description": "Add 'iam:GetRolePolicy' action",
        "prefix": "iam:GetRolePolicy"
    },
    "iam:GetSAMLProvider": {
        "body": "iam:GetSAMLProvider",
        "description": "Add 'iam:GetSAMLProvider' action",
        "prefix": "iam:GetSAMLProvider"
    },
    "iam:GetSSHPublicKey": {
        "body": "iam:GetSSHPublicKey",
        "description": "Add 'iam:GetSSHPublicKey' action",
        "prefix": "iam:GetSSHPublicKey"
    },
    "iam:GetServerCertificate": {
        "body": "iam:GetServerCertificate",
        "description": "Add 'iam:GetServerCertificate' action",
        "prefix": "iam:GetServerCertificate"
    },
    "iam:GetServiceLastAccessedDetails": {
        "body": "iam:GetServiceLastAccessedDetails",
        "description": "Add 'iam:GetServiceLastAccessedDetails' action",
        "prefix": "iam:GetServiceLastAccessedDetails"
    },
    "iam:GetServiceLastAccessedDetailsWithEntities": {
        "body": "iam:GetServiceLastAccessedDetailsWithEntities",
        "description": "Add 'iam:GetServiceLastAccessedDetailsWithEntities' action",
        "prefix": "iam:GetServiceLastAccessedDetailsWithEntities"
    },
    "iam:GetServiceLinkedRoleDeletionStatus": {
        "body": "iam:GetServiceLinkedRoleDeletionStatus",
        "description": "Add 'iam:GetServiceLinkedRoleDeletionStatus' action",
        "prefix": "iam:GetServiceLinkedRoleDeletionStatus"
    },
    "iam:GetUser": {
        "body": "iam:GetUser",
        "description": "Add 'iam:GetUser' action",
        "prefix": "iam:GetUser"
    },
    "iam:GetUserPolicy": {
        "body": "iam:GetUserPolicy",
        "description": "Add 'iam:GetUserPolicy' action",
        "prefix": "iam:GetUserPolicy"
    },
    "iam:ListAccessKeys": {
        "body": "iam:ListAccessKeys",
        "description": "Add 'iam:ListAccessKeys' action",
        "prefix": "iam:ListAccessKeys"
    },
    "iam:ListAccountAliases": {
        "body": "iam:ListAccountAliases",
        "description": "Add 'iam:ListAccountAliases' action",
        "prefix": "iam:ListAccountAliases"
    },
    "iam:ListAttachedGroupPolicies": {
        "body": "iam:ListAttachedGroupPolicies",
        "description": "Add 'iam:ListAttachedGroupPolicies' action",
        "prefix": "iam:ListAttachedGroupPolicies"
    },
    "iam:ListAttachedRolePolicies": {
        "body": "iam:ListAttachedRolePolicies",
        "description": "Add 'iam:ListAttachedRolePolicies' action",
        "prefix": "iam:ListAttachedRolePolicies"
    },
    "iam:ListAttachedUserPolicies": {
        "body": "iam:ListAttachedUserPolicies",
        "description": "Add 'iam:ListAttachedUserPolicies' action",
        "prefix": "iam:ListAttachedUserPolicies"
    },
    "iam:ListEntitiesForPolicy": {
        "body": "iam:ListEntitiesForPolicy",
        "description": "Add 'iam:ListEntitiesForPolicy' action",
        "prefix": "iam:ListEntitiesForPolicy"
    },
    "iam:ListGroupPolicies": {
        "body": "iam:ListGroupPolicies",
        "description": "Add 'iam:ListGroupPolicies' action",
        "prefix": "iam:ListGroupPolicies"
    },
    "iam:ListGroups": {
        "body": "iam:ListGroups",
        "description": "Add 'iam:ListGroups' action",
        "prefix": "iam:ListGroups"
    },
    "iam:ListGroupsForUser": {
        "body": "iam:ListGroupsForUser",
        "description": "Add 'iam:ListGroupsForUser' action",
        "prefix": "iam:ListGroupsForUser"
    },
    "iam:ListInstanceProfiles": {
        "body": "iam:ListInstanceProfiles",
        "description": "Add 'iam:ListInstanceProfiles' action",
        "prefix": "iam:ListInstanceProfiles"
    },
    "iam:ListInstanceProfilesForRole": {
        "body": "iam:ListInstanceProfilesForRole",
        "description": "Add 'iam:ListInstanceProfilesForRole' action",
        "prefix": "iam:ListInstanceProfilesForRole"
    },
    "iam:ListMFADevices": {
        "body": "iam:ListMFADevices",
        "description": "Add 'iam:ListMFADevices' action",
        "prefix": "iam:ListMFADevices"
    },
    "iam:ListOpenIDConnectProviders": {
        "body": "iam:ListOpenIDConnectProviders",
        "description": "Add 'iam:ListOpenIDConnectProviders' action",
        "prefix": "iam:ListOpenIDConnectProviders"
    },
    "iam:ListPolicies": {
        "body": "iam:ListPolicies",
        "description": "Add 'iam:ListPolicies' action",
        "prefix": "iam:ListPolicies"
    },
    "iam:ListPoliciesGrantingServiceAccess": {
        "body": "iam:ListPoliciesGrantingServiceAccess",
        "description": "Add 'iam:ListPoliciesGrantingServiceAccess' action",
        "prefix": "iam:ListPoliciesGrantingServiceAccess"
    },
    "iam:ListPolicyVersions": {
        "body": "iam:ListPolicyVersions",
        "description": "Add 'iam:ListPolicyVersions' action",
        "prefix": "iam:ListPolicyVersions"
    },
    "iam:ListRolePolicies": {
        "body": "iam:ListRolePolicies",
        "description": "Add 'iam:ListRolePolicies' action",
        "prefix": "iam:ListRolePolicies"
    },
    "iam:ListRoles": {
        "body": "iam:ListRoles",
        "description": "Add 'iam:ListRoles' action",
        "prefix": "iam:ListRoles"
    },
    "iam:ListSAMLProviders": {
        "body": "iam:ListSAMLProviders",
        "description": "Add 'iam:ListSAMLProviders' action",
        "prefix": "iam:ListSAMLProviders"
    },
    "iam:ListSSHPublicKeys": {
        "body": "iam:ListSSHPublicKeys",
        "description": "Add 'iam:ListSSHPublicKeys' action",
        "prefix": "iam:ListSSHPublicKeys"
    },
    "iam:ListServerCertificates": {
        "body": "iam:ListServerCertificates",
        "description": "Add 'iam:ListServerCertificates' action",
        "prefix": "iam:ListServerCertificates"
    },
    "iam:ListServiceSpecificCredentials": {
        "body": "iam:ListServiceSpecificCredentials",
        "description": "Add 'iam:ListServiceSpecificCredentials' action",
        "prefix": "iam:ListServiceSpecificCredentials"
    },
    "iam:ListSigningCertificates": {
        "body": "iam:ListSigningCertificates",
        "description": "Add 'iam:ListSigningCertificates' action",
        "prefix": "iam:ListSigningCertificates"
    },
    "iam:ListUserPolicies": {
        "body": "iam:ListUserPolicies",
        "description": "Add 'iam:ListUserPolicies' action",
        "prefix": "iam:ListUserPolicies"
    },
    "iam:ListUsers": {
        "body": "iam:ListUsers",
        "description": "Add 'iam:ListUsers' action",
        "prefix": "iam:ListUsers"
    },
    "iam:ListVirtualMFADevices": {
        "body": "iam:ListVirtualMFADevices",
        "description": "Add 'iam:ListVirtualMFADevices' action",
        "prefix": "iam:ListVirtualMFADevices"
    },
    "iam:PassRole": {
        "body": "iam:PassRole",
        "description": "Add 'iam:PassRole' action",
        "prefix": "iam:PassRole"
    },
    "iam:PutGroupPolicy": {
        "body": "iam:PutGroupPolicy",
        "description": "Add 'iam:PutGroupPolicy' action",
        "prefix": "iam:PutGroupPolicy"
    },
    "iam:PutRolePolicy": {
        "body": "iam:PutRolePolicy",
        "description": "Add 'iam:PutRolePolicy' action",
        "prefix": "iam:PutRolePolicy"
    },
    "iam:PutUserPolicy": {
        "body": "iam:PutUserPolicy",
        "description": "Add 'iam:PutUserPolicy' action",
        "prefix": "iam:PutUserPolicy"
    },
    "iam:RemoveClientIDFromOpenIDConnectProvider": {
        "body": "iam:RemoveClientIDFromOpenIDConnectProvider",
        "description": "Add 'iam:RemoveClientIDFromOpenIDConnectProvider' action",
        "prefix": "iam:RemoveClientIDFromOpenIDConnectProvider"
    },
    "iam:RemoveRoleFromInstanceProfile": {
        "body": "iam:RemoveRoleFromInstanceProfile",
        "description": "Add 'iam:RemoveRoleFromInstanceProfile' action",
        "prefix": "iam:RemoveRoleFromInstanceProfile"
    },
    "iam:RemoveUserFromGroup": {
        "body": "iam:RemoveUserFromGroup",
        "description": "Add 'iam:RemoveUserFromGroup' action",
        "prefix": "iam:RemoveUserFromGroup"
    },
    "iam:ResetServiceSpecificCredential": {
        "body": "iam:ResetServiceSpecificCredential",
        "description": "Add 'iam:ResetServiceSpecificCredential' action",
        "prefix": "iam:ResetServiceSpecificCredential"
    },
    "iam:ResyncMFADevice": {
        "body": "iam:ResyncMFADevice",
        "description": "Add 'iam:ResyncMFADevice' action",
        "prefix": "iam:ResyncMFADevice"
    },
    "iam:SetDefaultPolicyVersion": {
        "body": "iam:SetDefaultPolicyVersion",
        "description": "Add 'iam:SetDefaultPolicyVersion' action",
        "prefix": "iam:SetDefaultPolicyVersion"
    },
    "iam:SimulateCustomPolicy": {
        "body": "iam:SimulateCustomPolicy",
        "description": "Add 'iam:SimulateCustomPolicy' action",
        "prefix": "iam:SimulateCustomPolicy"
    },
    "iam:SimulatePrincipalPolicy": {
        "body": "iam:SimulatePrincipalPolicy",
        "description": "Add 'iam:SimulatePrincipalPolicy' action",
        "prefix": "iam:SimulatePrincipalPolicy"
    },
    "iam:UpdateAccessKey": {
        "body": "iam:UpdateAccessKey",
        "description": "Add 'iam:UpdateAccessKey' action",
        "prefix": "iam:UpdateAccessKey"
    },
    "iam:UpdateAccountPasswordPolicy": {
        "body": "iam:UpdateAccountPasswordPolicy",
        "description": "Add 'iam:UpdateAccountPasswordPolicy' action",
        "prefix": "iam:UpdateAccountPasswordPolicy"
    },
    "iam:UpdateAssumeRolePolicy": {
        "body": "iam:UpdateAssumeRolePolicy",
        "description": "Add 'iam:UpdateAssumeRolePolicy' action",
        "prefix": "iam:UpdateAssumeRolePolicy"
    },
    "iam:UpdateGroup": {
        "body": "iam:UpdateGroup",
        "description": "Add 'iam:UpdateGroup' action",
        "prefix": "iam:UpdateGroup"
    },
    "iam:UpdateLoginProfile": {
        "body": "iam:UpdateLoginProfile",
        "description": "Add 'iam:UpdateLoginProfile' action",
        "prefix": "iam:UpdateLoginProfile"
    },
    "iam:UpdateOpenIDConnectProviderThumbprint": {
        "body": "iam:UpdateOpenIDConnectProviderThumbprint",
        "description": "Add 'iam:UpdateOpenIDConnectProviderThumbprint' action",
        "prefix": "iam:UpdateOpenIDConnectProviderThumbprint"
    },
    "iam:UpdateRoleDescription": {
        "body": "iam:UpdateRoleDescription",
        "description": "Add 'iam:UpdateRoleDescription' action",
        "prefix": "iam:UpdateRoleDescription"
    },
    "iam:UpdateSAMLProvider": {
        "body": "iam:UpdateSAMLProvider",
        "description": "Add 'iam:UpdateSAMLProvider' action",
        "prefix": "iam:UpdateSAMLProvider"
    },
    "iam:UpdateSSHPublicKey": {
        "body": "iam:UpdateSSHPublicKey",
        "description": "Add 'iam:UpdateSSHPublicKey' action",
        "prefix": "iam:UpdateSSHPublicKey"
    },
    "iam:UpdateServerCertificate": {
        "body": "iam:UpdateServerCertificate",
        "description": "Add 'iam:UpdateServerCertificate' action",
        "prefix": "iam:UpdateServerCertificate"
    },
    "iam:UpdateServiceSpecificCredential": {
        "body": "iam:UpdateServiceSpecificCredential",
        "description": "Add 'iam:UpdateServiceSpecificCredential' action",
        "prefix": "iam:UpdateServiceSpecificCredential"
    },
    "iam:UpdateSigningCertificate": {
        "body": "iam:UpdateSigningCertificate",
        "description": "Add 'iam:UpdateSigningCertificate' action",
        "prefix": "iam:UpdateSigningCertificate"
    },
    "iam:UpdateUser": {
        "body": "iam:UpdateUser",
        "description": "Add 'iam:UpdateUser' action",
        "prefix": "iam:UpdateUser"
    },
    "iam:UploadSSHPublicKey": {
        "body": "iam:UploadSSHPublicKey",
        "description": "Add 'iam:UploadSSHPublicKey' action",
        "prefix": "iam:UploadSSHPublicKey"
    },
    "iam:UploadServerCertificate": {
        "body": "iam:UploadServerCertificate",
        "description": "Add 'iam:UploadServerCertificate' action",
        "prefix": "iam:UploadServerCertificate"
    },
    "iam:UploadSigningCertificate": {
        "body": "iam:UploadSigningCertificate",
        "description": "Add 'iam:UploadSigningCertificate' action",
        "prefix": "iam:UploadSigningCertificate"
    },
    "importexport:CancelJob": {
        "body": "importexport:CancelJob",
        "description": "Add 'importexport:CancelJob' action",
        "prefix": "importexport:CancelJob"
    },
    "importexport:CreateJob": {
        "body": "importexport:CreateJob",
        "description": "Add 'importexport:CreateJob' action",
        "prefix": "importexport:CreateJob"
    },
    "importexport:GetShippingLabel": {
        "body": "importexport:GetShippingLabel",
        "description": "Add 'importexport:GetShippingLabel' action",
        "prefix": "importexport:GetShippingLabel"
    },
    "importexport:GetStatus": {
        "body": "importexport:GetStatus",
        "description": "Add 'importexport:GetStatus' action",
        "prefix": "importexport:GetStatus"
    },
    "importexport:ListJobs": {
        "body": "importexport:ListJobs",
        "description": "Add 'importexport:ListJobs' action",
        "prefix": "importexport:ListJobs"
    },
    "importexport:UpdateJob": {
        "body": "importexport:UpdateJob",
        "description": "Add 'importexport:UpdateJob' action",
        "prefix": "importexport:UpdateJob"
    },
    "inspector:AddAttributesToFindings": {
        "body": "inspector:AddAttributesToFindings",
        "description": "Add 'inspector:AddAttributesToFindings' action",
        "prefix": "inspector:AddAttributesToFindings"
    },
    "inspector:CreateAssessmentTarget": {
        "body": "inspector:CreateAssessmentTarget",
        "description": "Add 'inspector:CreateAssessmentTarget' action",
        "prefix": "inspector:CreateAssessmentTarget"
    },
    "inspector:CreateAssessmentTemplate": {
        "body": "inspector:CreateAssessmentTemplate",
        "description": "Add 'inspector:CreateAssessmentTemplate' action",
        "prefix": "inspector:CreateAssessmentTemplate"
    },
    "inspector:CreateResourceGroup": {
        "body": "inspector:CreateResourceGroup",
        "description": "Add 'inspector:CreateResourceGroup' action",
        "prefix": "inspector:CreateResourceGroup"
    },
    "inspector:DeleteAssessmentRun": {
        "body": "inspector:DeleteAssessmentRun",
        "description": "Add 'inspector:DeleteAssessmentRun' action",
        "prefix": "inspector:DeleteAssessmentRun"
    },
    "inspector:DeleteAssessmentTarget": {
        "body": "inspector:DeleteAssessmentTarget",
        "description": "Add 'inspector:DeleteAssessmentTarget' action",
        "prefix": "inspector:DeleteAssessmentTarget"
    },
    "inspector:DeleteAssessmentTemplate": {
        "body": "inspector:DeleteAssessmentTemplate",
        "description": "Add 'inspector:DeleteAssessmentTemplate' action",
        "prefix": "inspector:DeleteAssessmentTemplate"
    },
    "inspector:DescribeAssessmentRuns": {
        "body": "inspector:DescribeAssessmentRuns",
        "description": "Add 'inspector:DescribeAssessmentRuns' action",
        "prefix": "inspector:DescribeAssessmentRuns"
    },
    "inspector:DescribeAssessmentTargets": {
        "body": "inspector:DescribeAssessmentTargets",
        "description": "Add 'inspector:DescribeAssessmentTargets' action",
        "prefix": "inspector:DescribeAssessmentTargets"
    },
    "inspector:DescribeAssessmentTemplates": {
        "body": "inspector:DescribeAssessmentTemplates",
        "description": "Add 'inspector:DescribeAssessmentTemplates' action",
        "prefix": "inspector:DescribeAssessmentTemplates"
    },
    "inspector:DescribeCrossAccountAccessRole": {
        "body": "inspector:DescribeCrossAccountAccessRole",
        "description": "Add 'inspector:DescribeCrossAccountAccessRole' action",
        "prefix": "inspector:DescribeCrossAccountAccessRole"
    },
    "inspector:DescribeFindings": {
        "body": "inspector:DescribeFindings",
        "description": "Add 'inspector:DescribeFindings' action",
        "prefix": "inspector:DescribeFindings"
    },
    "inspector:DescribeResourceGroups": {
        "body": "inspector:DescribeResourceGroups",
        "description": "Add 'inspector:DescribeResourceGroups' action",
        "prefix": "inspector:DescribeResourceGroups"
    },
    "inspector:DescribeRulesPackages": {
        "body": "inspector:DescribeRulesPackages",
        "description": "Add 'inspector:DescribeRulesPackages' action",
        "prefix": "inspector:DescribeRulesPackages"
    },
    "inspector:GetTelemetryMetadata": {
        "body": "inspector:GetTelemetryMetadata",
        "description": "Add 'inspector:GetTelemetryMetadata' action",
        "prefix": "inspector:GetTelemetryMetadata"
    },
    "inspector:ListAssessmentRunAgents": {
        "body": "inspector:ListAssessmentRunAgents",
        "description": "Add 'inspector:ListAssessmentRunAgents' action",
        "prefix": "inspector:ListAssessmentRunAgents"
    },
    "inspector:ListAssessmentRuns": {
        "body": "inspector:ListAssessmentRuns",
        "description": "Add 'inspector:ListAssessmentRuns' action",
        "prefix": "inspector:ListAssessmentRuns"
    },
    "inspector:ListAssessmentTargets": {
        "body": "inspector:ListAssessmentTargets",
        "description": "Add 'inspector:ListAssessmentTargets' action",
        "prefix": "inspector:ListAssessmentTargets"
    },
    "inspector:ListAssessmentTemplates": {
        "body": "inspector:ListAssessmentTemplates",
        "description": "Add 'inspector:ListAssessmentTemplates' action",
        "prefix": "inspector:ListAssessmentTemplates"
    },
    "inspector:ListEventSubscriptions": {
        "body": "inspector:ListEventSubscriptions",
        "description": "Add 'inspector:ListEventSubscriptions' action",
        "prefix": "inspector:ListEventSubscriptions"
    },
    "inspector:ListFindings": {
        "body": "inspector:ListFindings",
        "description": "Add 'inspector:ListFindings' action",
        "prefix": "inspector:ListFindings"
    },
    "inspector:ListRulesPackages": {
        "body": "inspector:ListRulesPackages",
        "description": "Add 'inspector:ListRulesPackages' action",
        "prefix": "inspector:ListRulesPackages"
    },
    "inspector:ListTagsForResource": {
        "body": "inspector:ListTagsForResource",
        "description": "Add 'inspector:ListTagsForResource' action",
        "prefix": "inspector:ListTagsForResource"
    },
    "inspector:PreviewAgents": {
        "body": "inspector:PreviewAgents",
        "description": "Add 'inspector:PreviewAgents' action",
        "prefix": "inspector:PreviewAgents"
    },
    "inspector:RegisterCrossAccountAccessRole": {
        "body": "inspector:RegisterCrossAccountAccessRole",
        "description": "Add 'inspector:RegisterCrossAccountAccessRole' action",
        "prefix": "inspector:RegisterCrossAccountAccessRole"
    },
    "inspector:RemoveAttributesFromFindings": {
        "body": "inspector:RemoveAttributesFromFindings",
        "description": "Add 'inspector:RemoveAttributesFromFindings' action",
        "prefix": "inspector:RemoveAttributesFromFindings"
    },
    "inspector:SetTagsForResource": {
        "body": "inspector:SetTagsForResource",
        "description": "Add 'inspector:SetTagsForResource' action",
        "prefix": "inspector:SetTagsForResource"
    },
    "inspector:StartAssessmentRun": {
        "body": "inspector:StartAssessmentRun",
        "description": "Add 'inspector:StartAssessmentRun' action",
        "prefix": "inspector:StartAssessmentRun"
    },
    "inspector:StopAssessmentRun": {
        "body": "inspector:StopAssessmentRun",
        "description": "Add 'inspector:StopAssessmentRun' action",
        "prefix": "inspector:StopAssessmentRun"
    },
    "inspector:SubscribeToEvent": {
        "body": "inspector:SubscribeToEvent",
        "description": "Add 'inspector:SubscribeToEvent' action",
        "prefix": "inspector:SubscribeToEvent"
    },
    "inspector:UnsubscribeFromEvent": {
        "body": "inspector:UnsubscribeFromEvent",
        "description": "Add 'inspector:UnsubscribeFromEvent' action",
        "prefix": "inspector:UnsubscribeFromEvent"
    },
    "inspector:UpdateAssessmentTarget": {
        "body": "inspector:UpdateAssessmentTarget",
        "description": "Add 'inspector:UpdateAssessmentTarget' action",
        "prefix": "inspector:UpdateAssessmentTarget"
    },
    "iot:AcceptCertificateTransfer": {
        "body": "iot:AcceptCertificateTransfer",
        "description": "Add 'iot:AcceptCertificateTransfer' action",
        "prefix": "iot:AcceptCertificateTransfer"
    },
    "iot:AssociateTargetsWithJob": {
        "body": "iot:AssociateTargetsWithJob",
        "description": "Add 'iot:AssociateTargetsWithJob' action",
        "prefix": "iot:AssociateTargetsWithJob"
    },
    "iot:AttachPolicy": {
        "body": "iot:AttachPolicy",
        "description": "Add 'iot:AttachPolicy' action",
        "prefix": "iot:AttachPolicy"
    },
    "iot:AttachPrincipalPolicy": {
        "body": "iot:AttachPrincipalPolicy",
        "description": "Add 'iot:AttachPrincipalPolicy' action",
        "prefix": "iot:AttachPrincipalPolicy"
    },
    "iot:AttachThingPrincipal": {
        "body": "iot:AttachThingPrincipal",
        "description": "Add 'iot:AttachThingPrincipal' action",
        "prefix": "iot:AttachThingPrincipal"
    },
    "iot:CancelCertificateTransfer": {
        "body": "iot:CancelCertificateTransfer",
        "description": "Add 'iot:CancelCertificateTransfer' action",
        "prefix": "iot:CancelCertificateTransfer"
    },
    "iot:CancelJob": {
        "body": "iot:CancelJob",
        "description": "Add 'iot:CancelJob' action",
        "prefix": "iot:CancelJob"
    },
    "iot:ClearDefaultAuthorizer": {
        "body": "iot:ClearDefaultAuthorizer",
        "description": "Add 'iot:ClearDefaultAuthorizer' action",
        "prefix": "iot:ClearDefaultAuthorizer"
    },
    "iot:Connect": {
        "body": "iot:Connect",
        "description": "Add 'iot:Connect' action",
        "prefix": "iot:Connect"
    },
    "iot:CreateAuthorizer": {
        "body": "iot:CreateAuthorizer",
        "description": "Add 'iot:CreateAuthorizer' action",
        "prefix": "iot:CreateAuthorizer"
    },
    "iot:CreateCertificateFromCsr": {
        "body": "iot:CreateCertificateFromCsr",
        "description": "Add 'iot:CreateCertificateFromCsr' action",
        "prefix": "iot:CreateCertificateFromCsr"
    },
    "iot:CreateJob": {
        "body": "iot:CreateJob",
        "description": "Add 'iot:CreateJob' action",
        "prefix": "iot:CreateJob"
    },
    "iot:CreateKeysAndCertificate": {
        "body": "iot:CreateKeysAndCertificate",
        "description": "Add 'iot:CreateKeysAndCertificate' action",
        "prefix": "iot:CreateKeysAndCertificate"
    },
    "iot:CreateOTAUpdateJob": {
        "body": "iot:CreateOTAUpdateJob",
        "description": "Add 'iot:CreateOTAUpdateJob' action",
        "prefix": "iot:CreateOTAUpdateJob"
    },
    "iot:CreatePolicy": {
        "body": "iot:CreatePolicy",
        "description": "Add 'iot:CreatePolicy' action",
        "prefix": "iot:CreatePolicy"
    },
    "iot:CreatePolicyVersion": {
        "body": "iot:CreatePolicyVersion",
        "description": "Add 'iot:CreatePolicyVersion' action",
        "prefix": "iot:CreatePolicyVersion"
    },
    "iot:CreateRoleAlias": {
        "body": "iot:CreateRoleAlias",
        "description": "Add 'iot:CreateRoleAlias' action",
        "prefix": "iot:CreateRoleAlias"
    },
    "iot:CreateStream": {
        "body": "iot:CreateStream",
        "description": "Add 'iot:CreateStream' action",
        "prefix": "iot:CreateStream"
    },
    "iot:CreateThing": {
        "body": "iot:CreateThing",
        "description": "Add 'iot:CreateThing' action",
        "prefix": "iot:CreateThing"
    },
    "iot:CreateThingType": {
        "body": "iot:CreateThingType",
        "description": "Add 'iot:CreateThingType' action",
        "prefix": "iot:CreateThingType"
    },
    "iot:CreateTopicRule": {
        "body": "iot:CreateTopicRule",
        "description": "Add 'iot:CreateTopicRule' action",
        "prefix": "iot:CreateTopicRule"
    },
    "iot:DeleteAuthorizer": {
        "body": "iot:DeleteAuthorizer",
        "description": "Add 'iot:DeleteAuthorizer' action",
        "prefix": "iot:DeleteAuthorizer"
    },
    "iot:DeleteCACertificate": {
        "body": "iot:DeleteCACertificate",
        "description": "Add 'iot:DeleteCACertificate' action",
        "prefix": "iot:DeleteCACertificate"
    },
    "iot:DeleteCertificate": {
        "body": "iot:DeleteCertificate",
        "description": "Add 'iot:DeleteCertificate' action",
        "prefix": "iot:DeleteCertificate"
    },
    "iot:DeleteOTAUpdateJob": {
        "body": "iot:DeleteOTAUpdateJob",
        "description": "Add 'iot:DeleteOTAUpdateJob' action",
        "prefix": "iot:DeleteOTAUpdateJob"
    },
    "iot:DeletePolicy": {
        "body": "iot:DeletePolicy",
        "description": "Add 'iot:DeletePolicy' action",
        "prefix": "iot:DeletePolicy"
    },
    "iot:DeletePolicyVersion": {
        "body": "iot:DeletePolicyVersion",
        "description": "Add 'iot:DeletePolicyVersion' action",
        "prefix": "iot:DeletePolicyVersion"
    },
    "iot:DeleteRegistrationCode": {
        "body": "iot:DeleteRegistrationCode",
        "description": "Add 'iot:DeleteRegistrationCode' action",
        "prefix": "iot:DeleteRegistrationCode"
    },
    "iot:DeleteRoleAlias": {
        "body": "iot:DeleteRoleAlias",
        "description": "Add 'iot:DeleteRoleAlias' action",
        "prefix": "iot:DeleteRoleAlias"
    },
    "iot:DeleteStream": {
        "body": "iot:DeleteStream",
        "description": "Add 'iot:DeleteStream' action",
        "prefix": "iot:DeleteStream"
    },
    "iot:DeleteThing": {
        "body": "iot:DeleteThing",
        "description": "Add 'iot:DeleteThing' action",
        "prefix": "iot:DeleteThing"
    },
    "iot:DeleteThingShadow": {
        "body": "iot:DeleteThingShadow",
        "description": "Add 'iot:DeleteThingShadow' action",
        "prefix": "iot:DeleteThingShadow"
    },
    "iot:DeleteThingType": {
        "body": "iot:DeleteThingType",
        "description": "Add 'iot:DeleteThingType' action",
        "prefix": "iot:DeleteThingType"
    },
    "iot:DeleteTopicRule": {
        "body": "iot:DeleteTopicRule",
        "description": "Add 'iot:DeleteTopicRule' action",
        "prefix": "iot:DeleteTopicRule"
    },
    "iot:DeprecateThingType": {
        "body": "iot:DeprecateThingType",
        "description": "Add 'iot:DeprecateThingType' action",
        "prefix": "iot:DeprecateThingType"
    },
    "iot:DescribeAuthorizer": {
        "body": "iot:DescribeAuthorizer",
        "description": "Add 'iot:DescribeAuthorizer' action",
        "prefix": "iot:DescribeAuthorizer"
    },
    "iot:DescribeCACertificate": {
        "body": "iot:DescribeCACertificate",
        "description": "Add 'iot:DescribeCACertificate' action",
        "prefix": "iot:DescribeCACertificate"
    },
    "iot:DescribeCertificate": {
        "body": "iot:DescribeCertificate",
        "description": "Add 'iot:DescribeCertificate' action",
        "prefix": "iot:DescribeCertificate"
    },
    "iot:DescribeDefaultAuthorizer": {
        "body": "iot:DescribeDefaultAuthorizer",
        "description": "Add 'iot:DescribeDefaultAuthorizer' action",
        "prefix": "iot:DescribeDefaultAuthorizer"
    },
    "iot:DescribeEndpoint": {
        "body": "iot:DescribeEndpoint",
        "description": "Add 'iot:DescribeEndpoint' action",
        "prefix": "iot:DescribeEndpoint"
    },
    "iot:DescribeIndex": {
        "body": "iot:DescribeIndex",
        "description": "Add 'iot:DescribeIndex' action",
        "prefix": "iot:DescribeIndex"
    },
    "iot:DescribeJob": {
        "body": "iot:DescribeJob",
        "description": "Add 'iot:DescribeJob' action",
        "prefix": "iot:DescribeJob"
    },
    "iot:DescribeJobExecution": {
        "body": "iot:DescribeJobExecution",
        "description": "Add 'iot:DescribeJobExecution' action",
        "prefix": "iot:DescribeJobExecution"
    },
    "iot:DescribeRoleAlias": {
        "body": "iot:DescribeRoleAlias",
        "description": "Add 'iot:DescribeRoleAlias' action",
        "prefix": "iot:DescribeRoleAlias"
    },
    "iot:DescribeStream": {
        "body": "iot:DescribeStream",
        "description": "Add 'iot:DescribeStream' action",
        "prefix": "iot:DescribeStream"
    },
    "iot:DescribeThing": {
        "body": "iot:DescribeThing",
        "description": "Add 'iot:DescribeThing' action",
        "prefix": "iot:DescribeThing"
    },
    "iot:DescribeThingType": {
        "body": "iot:DescribeThingType",
        "description": "Add 'iot:DescribeThingType' action",
        "prefix": "iot:DescribeThingType"
    },
    "iot:DetachPolicy": {
        "body": "iot:DetachPolicy",
        "description": "Add 'iot:DetachPolicy' action",
        "prefix": "iot:DetachPolicy"
    },
    "iot:DetachPrincipalPolicy": {
        "body": "iot:DetachPrincipalPolicy",
        "description": "Add 'iot:DetachPrincipalPolicy' action",
        "prefix": "iot:DetachPrincipalPolicy"
    },
    "iot:DetachThingPrincipal": {
        "body": "iot:DetachThingPrincipal",
        "description": "Add 'iot:DetachThingPrincipal' action",
        "prefix": "iot:DetachThingPrincipal"
    },
    "iot:DisableTopicRule": {
        "body": "iot:DisableTopicRule",
        "description": "Add 'iot:DisableTopicRule' action",
        "prefix": "iot:DisableTopicRule"
    },
    "iot:EnableTopicRule": {
        "body": "iot:EnableTopicRule",
        "description": "Add 'iot:EnableTopicRule' action",
        "prefix": "iot:EnableTopicRule"
    },
    "iot:GetEffectivePolicies": {
        "body": "iot:GetEffectivePolicies",
        "description": "Add 'iot:GetEffectivePolicies' action",
        "prefix": "iot:GetEffectivePolicies"
    },
    "iot:GetIndexingConfiguration": {
        "body": "iot:GetIndexingConfiguration",
        "description": "Add 'iot:GetIndexingConfiguration' action",
        "prefix": "iot:GetIndexingConfiguration"
    },
    "iot:GetJobDocument": {
        "body": "iot:GetJobDocument",
        "description": "Add 'iot:GetJobDocument' action",
        "prefix": "iot:GetJobDocument"
    },
    "iot:GetLoggingOptions": {
        "body": "iot:GetLoggingOptions",
        "description": "Add 'iot:GetLoggingOptions' action",
        "prefix": "iot:GetLoggingOptions"
    },
    "iot:GetOTAUpdateJob": {
        "body": "iot:GetOTAUpdateJob",
        "description": "Add 'iot:GetOTAUpdateJob' action",
        "prefix": "iot:GetOTAUpdateJob"
    },
    "iot:GetPolicy": {
        "body": "iot:GetPolicy",
        "description": "Add 'iot:GetPolicy' action",
        "prefix": "iot:GetPolicy"
    },
    "iot:GetPolicyVersion": {
        "body": "iot:GetPolicyVersion",
        "description": "Add 'iot:GetPolicyVersion' action",
        "prefix": "iot:GetPolicyVersion"
    },
    "iot:GetRegistrationCode": {
        "body": "iot:GetRegistrationCode",
        "description": "Add 'iot:GetRegistrationCode' action",
        "prefix": "iot:GetRegistrationCode"
    },
    "iot:GetThingShadow": {
        "body": "iot:GetThingShadow",
        "description": "Add 'iot:GetThingShadow' action",
        "prefix": "iot:GetThingShadow"
    },
    "iot:GetTopicRule": {
        "body": "iot:GetTopicRule",
        "description": "Add 'iot:GetTopicRule' action",
        "prefix": "iot:GetTopicRule"
    },
    "iot:ListAttachedPolicies": {
        "body": "iot:ListAttachedPolicies",
        "description": "Add 'iot:ListAttachedPolicies' action",
        "prefix": "iot:ListAttachedPolicies"
    },
    "iot:ListAuthorizers": {
        "body": "iot:ListAuthorizers",
        "description": "Add 'iot:ListAuthorizers' action",
        "prefix": "iot:ListAuthorizers"
    },
    "iot:ListCACertificates": {
        "body": "iot:ListCACertificates",
        "description": "Add 'iot:ListCACertificates' action",
        "prefix": "iot:ListCACertificates"
    },
    "iot:ListCertificates": {
        "body": "iot:ListCertificates",
        "description": "Add 'iot:ListCertificates' action",
        "prefix": "iot:ListCertificates"
    },
    "iot:ListCertificatesByCA": {
        "body": "iot:ListCertificatesByCA",
        "description": "Add 'iot:ListCertificatesByCA' action",
        "prefix": "iot:ListCertificatesByCA"
    },
    "iot:ListIndices": {
        "body": "iot:ListIndices",
        "description": "Add 'iot:ListIndices' action",
        "prefix": "iot:ListIndices"
    },
    "iot:ListJobExecutionsForJob": {
        "body": "iot:ListJobExecutionsForJob",
        "description": "Add 'iot:ListJobExecutionsForJob' action",
        "prefix": "iot:ListJobExecutionsForJob"
    },
    "iot:ListJobExecutionsForThing": {
        "body": "iot:ListJobExecutionsForThing",
        "description": "Add 'iot:ListJobExecutionsForThing' action",
        "prefix": "iot:ListJobExecutionsForThing"
    },
    "iot:ListJobs": {
        "body": "iot:ListJobs",
        "description": "Add 'iot:ListJobs' action",
        "prefix": "iot:ListJobs"
    },
    "iot:ListOTAUpdateJobs": {
        "body": "iot:ListOTAUpdateJobs",
        "description": "Add 'iot:ListOTAUpdateJobs' action",
        "prefix": "iot:ListOTAUpdateJobs"
    },
    "iot:ListOutgoingCertificates": {
        "body": "iot:ListOutgoingCertificates",
        "description": "Add 'iot:ListOutgoingCertificates' action",
        "prefix": "iot:ListOutgoingCertificates"
    },
    "iot:ListPolicies": {
        "body": "iot:ListPolicies",
        "description": "Add 'iot:ListPolicies' action",
        "prefix": "iot:ListPolicies"
    },
    "iot:ListPolicyPrincipals": {
        "body": "iot:ListPolicyPrincipals",
        "description": "Add 'iot:ListPolicyPrincipals' action",
        "prefix": "iot:ListPolicyPrincipals"
    },
    "iot:ListPolicyVersions": {
        "body": "iot:ListPolicyVersions",
        "description": "Add 'iot:ListPolicyVersions' action",
        "prefix": "iot:ListPolicyVersions"
    },
    "iot:ListPrincipalPolicies": {
        "body": "iot:ListPrincipalPolicies",
        "description": "Add 'iot:ListPrincipalPolicies' action",
        "prefix": "iot:ListPrincipalPolicies"
    },
    "iot:ListPrincipalThings": {
        "body": "iot:ListPrincipalThings",
        "description": "Add 'iot:ListPrincipalThings' action",
        "prefix": "iot:ListPrincipalThings"
    },
    "iot:ListRoleAliases": {
        "body": "iot:ListRoleAliases",
        "description": "Add 'iot:ListRoleAliases' action",
        "prefix": "iot:ListRoleAliases"
    },
    "iot:ListStreams": {
        "body": "iot:ListStreams",
        "description": "Add 'iot:ListStreams' action",
        "prefix": "iot:ListStreams"
    },
    "iot:ListTargetsForPolicy": {
        "body": "iot:ListTargetsForPolicy",
        "description": "Add 'iot:ListTargetsForPolicy' action",
        "prefix": "iot:ListTargetsForPolicy"
    },
    "iot:ListThingPrincipals": {
        "body": "iot:ListThingPrincipals",
        "description": "Add 'iot:ListThingPrincipals' action",
        "prefix": "iot:ListThingPrincipals"
    },
    "iot:ListThingTypes": {
        "body": "iot:ListThingTypes",
        "description": "Add 'iot:ListThingTypes' action",
        "prefix": "iot:ListThingTypes"
    },
    "iot:ListThings": {
        "body": "iot:ListThings",
        "description": "Add 'iot:ListThings' action",
        "prefix": "iot:ListThings"
    },
    "iot:ListTopicRules": {
        "body": "iot:ListTopicRules",
        "description": "Add 'iot:ListTopicRules' action",
        "prefix": "iot:ListTopicRules"
    },
    "iot:Publish": {
        "body": "iot:Publish",
        "description": "Add 'iot:Publish' action",
        "prefix": "iot:Publish"
    },
    "iot:Receive": {
        "body": "iot:Receive",
        "description": "Add 'iot:Receive' action",
        "prefix": "iot:Receive"
    },
    "iot:RegisterCACertificate": {
        "body": "iot:RegisterCACertificate",
        "description": "Add 'iot:RegisterCACertificate' action",
        "prefix": "iot:RegisterCACertificate"
    },
    "iot:RegisterCertificate": {
        "body": "iot:RegisterCertificate",
        "description": "Add 'iot:RegisterCertificate' action",
        "prefix": "iot:RegisterCertificate"
    },
    "iot:RejectCertificateTransfer": {
        "body": "iot:RejectCertificateTransfer",
        "description": "Add 'iot:RejectCertificateTransfer' action",
        "prefix": "iot:RejectCertificateTransfer"
    },
    "iot:ReplaceTopicRule": {
        "body": "iot:ReplaceTopicRule",
        "description": "Add 'iot:ReplaceTopicRule' action",
        "prefix": "iot:ReplaceTopicRule"
    },
    "iot:SearchIndex": {
        "body": "iot:SearchIndex",
        "description": "Add 'iot:SearchIndex' action",
        "prefix": "iot:SearchIndex"
    },
    "iot:SetDefaultAuthorizer": {
        "body": "iot:SetDefaultAuthorizer",
        "description": "Add 'iot:SetDefaultAuthorizer' action",
        "prefix": "iot:SetDefaultAuthorizer"
    },
    "iot:SetDefaultPolicyVersion": {
        "body": "iot:SetDefaultPolicyVersion",
        "description": "Add 'iot:SetDefaultPolicyVersion' action",
        "prefix": "iot:SetDefaultPolicyVersion"
    },
    "iot:SetLoggingOptions": {
        "body": "iot:SetLoggingOptions",
        "description": "Add 'iot:SetLoggingOptions' action",
        "prefix": "iot:SetLoggingOptions"
    },
    "iot:Subscribe": {
        "body": "iot:Subscribe",
        "description": "Add 'iot:Subscribe' action",
        "prefix": "iot:Subscribe"
    },
    "iot:TestAuthorization": {
        "body": "iot:TestAuthorization",
        "description": "Add 'iot:TestAuthorization' action",
        "prefix": "iot:TestAuthorization"
    },
    "iot:TestInvokeAuthorizer": {
        "body": "iot:TestInvokeAuthorizer",
        "description": "Add 'iot:TestInvokeAuthorizer' action",
        "prefix": "iot:TestInvokeAuthorizer"
    },
    "iot:TransferCertificate": {
        "body": "iot:TransferCertificate",
        "description": "Add 'iot:TransferCertificate' action",
        "prefix": "iot:TransferCertificate"
    },
    "iot:UpdateAuthorizer": {
        "body": "iot:UpdateAuthorizer",
        "description": "Add 'iot:UpdateAuthorizer' action",
        "prefix": "iot:UpdateAuthorizer"
    },
    "iot:UpdateCACertificate": {
        "body": "iot:UpdateCACertificate",
        "description": "Add 'iot:UpdateCACertificate' action",
        "prefix": "iot:UpdateCACertificate"
    },
    "iot:UpdateCertificate": {
        "body": "iot:UpdateCertificate",
        "description": "Add 'iot:UpdateCertificate' action",
        "prefix": "iot:UpdateCertificate"
    },
    "iot:UpdateIndexingConfiguration": {
        "body": "iot:UpdateIndexingConfiguration",
        "description": "Add 'iot:UpdateIndexingConfiguration' action",
        "prefix": "iot:UpdateIndexingConfiguration"
    },
    "iot:UpdateRoleAlias": {
        "body": "iot:UpdateRoleAlias",
        "description": "Add 'iot:UpdateRoleAlias' action",
        "prefix": "iot:UpdateRoleAlias"
    },
    "iot:UpdateStream": {
        "body": "iot:UpdateStream",
        "description": "Add 'iot:UpdateStream' action",
        "prefix": "iot:UpdateStream"
    },
    "iot:UpdateThing": {
        "body": "iot:UpdateThing",
        "description": "Add 'iot:UpdateThing' action",
        "prefix": "iot:UpdateThing"
    },
    "iot:UpdateThingShadow": {
        "body": "iot:UpdateThingShadow",
        "description": "Add 'iot:UpdateThingShadow' action",
        "prefix": "iot:UpdateThingShadow"
    },
    "iotanalytics:CreateChannel": {
        "body": "iotanalytics:CreateChannel",
        "description": "Add 'iotanalytics:CreateChannel' action",
        "prefix": "iotanalytics:CreateChannel"
    },
    "iotanalytics:CreateDataset": {
        "body": "iotanalytics:CreateDataset",
        "description": "Add 'iotanalytics:CreateDataset' action",
        "prefix": "iotanalytics:CreateDataset"
    },
    "iotanalytics:CreateDatasetContent": {
        "body": "iotanalytics:CreateDatasetContent",
        "description": "Add 'iotanalytics:CreateDatasetContent' action",
        "prefix": "iotanalytics:CreateDatasetContent"
    },
    "iotanalytics:CreateDatastore": {
        "body": "iotanalytics:CreateDatastore",
        "description": "Add 'iotanalytics:CreateDatastore' action",
        "prefix": "iotanalytics:CreateDatastore"
    },
    "iotanalytics:CreatePipeline": {
        "body": "iotanalytics:CreatePipeline",
        "description": "Add 'iotanalytics:CreatePipeline' action",
        "prefix": "iotanalytics:CreatePipeline"
    },
    "iotanalytics:DeleteChannel": {
        "body": "iotanalytics:DeleteChannel",
        "description": "Add 'iotanalytics:DeleteChannel' action",
        "prefix": "iotanalytics:DeleteChannel"
    },
    "iotanalytics:DeleteDataset": {
        "body": "iotanalytics:DeleteDataset",
        "description": "Add 'iotanalytics:DeleteDataset' action",
        "prefix": "iotanalytics:DeleteDataset"
    },
    "iotanalytics:DeleteDatasetContent": {
        "body": "iotanalytics:DeleteDatasetContent",
        "description": "Add 'iotanalytics:DeleteDatasetContent' action",
        "prefix": "iotanalytics:DeleteDatasetContent"
    },
    "iotanalytics:DeleteDatastore": {
        "body": "iotanalytics:DeleteDatastore",
        "description": "Add 'iotanalytics:DeleteDatastore' action",
        "prefix": "iotanalytics:DeleteDatastore"
    },
    "iotanalytics:DeletePipeline": {
        "body": "iotanalytics:DeletePipeline",
        "description": "Add 'iotanalytics:DeletePipeline' action",
        "prefix": "iotanalytics:DeletePipeline"
    },
    "iotanalytics:DescribeChannel": {
        "body": "iotanalytics:DescribeChannel",
        "description": "Add 'iotanalytics:DescribeChannel' action",
        "prefix": "iotanalytics:DescribeChannel"
    },
    "iotanalytics:DescribeDataset": {
        "body": "iotanalytics:DescribeDataset",
        "description": "Add 'iotanalytics:DescribeDataset' action",
        "prefix": "iotanalytics:DescribeDataset"
    },
    "iotanalytics:DescribeDatastore": {
        "body": "iotanalytics:DescribeDatastore",
        "description": "Add 'iotanalytics:DescribeDatastore' action",
        "prefix": "iotanalytics:DescribeDatastore"
    },
    "iotanalytics:DescribePipeline": {
        "body": "iotanalytics:DescribePipeline",
        "description": "Add 'iotanalytics:DescribePipeline' action",
        "prefix": "iotanalytics:DescribePipeline"
    },
    "iotanalytics:GetDatasetContent": {
        "body": "iotanalytics:GetDatasetContent",
        "description": "Add 'iotanalytics:GetDatasetContent' action",
        "prefix": "iotanalytics:GetDatasetContent"
    },
    "iotanalytics:ListChannels": {
        "body": "iotanalytics:ListChannels",
        "description": "Add 'iotanalytics:ListChannels' action",
        "prefix": "iotanalytics:ListChannels"
    },
    "iotanalytics:ListDatasets": {
        "body": "iotanalytics:ListDatasets",
        "description": "Add 'iotanalytics:ListDatasets' action",
        "prefix": "iotanalytics:ListDatasets"
    },
    "iotanalytics:ListDatastores": {
        "body": "iotanalytics:ListDatastores",
        "description": "Add 'iotanalytics:ListDatastores' action",
        "prefix": "iotanalytics:ListDatastores"
    },
    "iotanalytics:ListPipelines": {
        "body": "iotanalytics:ListPipelines",
        "description": "Add 'iotanalytics:ListPipelines' action",
        "prefix": "iotanalytics:ListPipelines"
    },
    "iotanalytics:UpdateDataset": {
        "body": "iotanalytics:UpdateDataset",
        "description": "Add 'iotanalytics:UpdateDataset' action",
        "prefix": "iotanalytics:UpdateDataset"
    },
    "iotanalytics:UpdatePipeline": {
        "body": "iotanalytics:UpdatePipeline",
        "description": "Add 'iotanalytics:UpdatePipeline' action",
        "prefix": "iotanalytics:UpdatePipeline"
    },
    "kinesis:AddTagsToStream": {
        "body": "kinesis:AddTagsToStream",
        "description": "Add 'kinesis:AddTagsToStream' action",
        "prefix": "kinesis:AddTagsToStream"
    },
    "kinesis:CreateStream": {
        "body": "kinesis:CreateStream",
        "description": "Add 'kinesis:CreateStream' action",
        "prefix": "kinesis:CreateStream"
    },
    "kinesis:DecreaseStreamRetentionPeriod": {
        "body": "kinesis:DecreaseStreamRetentionPeriod",
        "description": "Add 'kinesis:DecreaseStreamRetentionPeriod' action",
        "prefix": "kinesis:DecreaseStreamRetentionPeriod"
    },
    "kinesis:DeleteStream": {
        "body": "kinesis:DeleteStream",
        "description": "Add 'kinesis:DeleteStream' action",
        "prefix": "kinesis:DeleteStream"
    },
    "kinesis:DescribeLimits": {
        "body": "kinesis:DescribeLimits",
        "description": "Add 'kinesis:DescribeLimits' action",
        "prefix": "kinesis:DescribeLimits"
    },
    "kinesis:DescribeStream": {
        "body": "kinesis:DescribeStream",
        "description": "Add 'kinesis:DescribeStream' action",
        "prefix": "kinesis:DescribeStream"
    },
    "kinesis:DisableEnhancedMonitoring": {
        "body": "kinesis:DisableEnhancedMonitoring",
        "description": "Add 'kinesis:DisableEnhancedMonitoring' action",
        "prefix": "kinesis:DisableEnhancedMonitoring"
    },
    "kinesis:EnableEnhancedMonitoring": {
        "body": "kinesis:EnableEnhancedMonitoring",
        "description": "Add 'kinesis:EnableEnhancedMonitoring' action",
        "prefix": "kinesis:EnableEnhancedMonitoring"
    },
    "kinesis:GetRecords": {
        "body": "kinesis:GetRecords",
        "description": "Add 'kinesis:GetRecords' action",
        "prefix": "kinesis:GetRecords"
    },
    "kinesis:GetShardIterator": {
        "body": "kinesis:GetShardIterator",
        "description": "Add 'kinesis:GetShardIterator' action",
        "prefix": "kinesis:GetShardIterator"
    },
    "kinesis:IncreaseStreamRetentionPeriod": {
        "body": "kinesis:IncreaseStreamRetentionPeriod",
        "description": "Add 'kinesis:IncreaseStreamRetentionPeriod' action",
        "prefix": "kinesis:IncreaseStreamRetentionPeriod"
    },
    "kinesis:ListStreams": {
        "body": "kinesis:ListStreams",
        "description": "Add 'kinesis:ListStreams' action",
        "prefix": "kinesis:ListStreams"
    },
    "kinesis:ListTagsForStream": {
        "body": "kinesis:ListTagsForStream",
        "description": "Add 'kinesis:ListTagsForStream' action",
        "prefix": "kinesis:ListTagsForStream"
    },
    "kinesis:MergeShards": {
        "body": "kinesis:MergeShards",
        "description": "Add 'kinesis:MergeShards' action",
        "prefix": "kinesis:MergeShards"
    },
    "kinesis:PutRecord": {
        "body": "kinesis:PutRecord",
        "description": "Add 'kinesis:PutRecord' action",
        "prefix": "kinesis:PutRecord"
    },
    "kinesis:PutRecords": {
        "body": "kinesis:PutRecords",
        "description": "Add 'kinesis:PutRecords' action",
        "prefix": "kinesis:PutRecords"
    },
    "kinesis:RemoveTagsFromStream": {
        "body": "kinesis:RemoveTagsFromStream",
        "description": "Add 'kinesis:RemoveTagsFromStream' action",
        "prefix": "kinesis:RemoveTagsFromStream"
    },
    "kinesis:SplitShard": {
        "body": "kinesis:SplitShard",
        "description": "Add 'kinesis:SplitShard' action",
        "prefix": "kinesis:SplitShard"
    },
    "kinesis:UpdateShardCount": {
        "body": "kinesis:UpdateShardCount",
        "description": "Add 'kinesis:UpdateShardCount' action",
        "prefix": "kinesis:UpdateShardCount"
    },
    "kinesisanalytics:AddApplicationInput": {
        "body": "kinesisanalytics:AddApplicationInput",
        "description": "Add 'kinesisanalytics:AddApplicationInput' action",
        "prefix": "kinesisanalytics:AddApplicationInput"
    },
    "kinesisanalytics:AddApplicationOutput": {
        "body": "kinesisanalytics:AddApplicationOutput",
        "description": "Add 'kinesisanalytics:AddApplicationOutput' action",
        "prefix": "kinesisanalytics:AddApplicationOutput"
    },
    "kinesisanalytics:AddApplicationReferenceDataSource": {
        "body": "kinesisanalytics:AddApplicationReferenceDataSource",
        "description": "Add 'kinesisanalytics:AddApplicationReferenceDataSource' action",
        "prefix": "kinesisanalytics:AddApplicationReferenceDataSource"
    },
    "kinesisanalytics:CreateApplication": {
        "body": "kinesisanalytics:CreateApplication",
        "description": "Add 'kinesisanalytics:CreateApplication' action",
        "prefix": "kinesisanalytics:CreateApplication"
    },
    "kinesisanalytics:DeleteApplication": {
        "body": "kinesisanalytics:DeleteApplication",
        "description": "Add 'kinesisanalytics:DeleteApplication' action",
        "prefix": "kinesisanalytics:DeleteApplication"
    },
    "kinesisanalytics:DeleteApplicationOutput": {
        "body": "kinesisanalytics:DeleteApplicationOutput",
        "description": "Add 'kinesisanalytics:DeleteApplicationOutput' action",
        "prefix": "kinesisanalytics:DeleteApplicationOutput"
    },
    "kinesisanalytics:DeleteApplicationReferenceDataSource": {
        "body": "kinesisanalytics:DeleteApplicationReferenceDataSource",
        "description": "Add 'kinesisanalytics:DeleteApplicationReferenceDataSource' action",
        "prefix": "kinesisanalytics:DeleteApplicationReferenceDataSource"
    },
    "kinesisanalytics:DescribeApplication": {
        "body": "kinesisanalytics:DescribeApplication",
        "description": "Add 'kinesisanalytics:DescribeApplication' action",
        "prefix": "kinesisanalytics:DescribeApplication"
    },
    "kinesisanalytics:DiscoverInputSchema": {
        "body": "kinesisanalytics:DiscoverInputSchema",
        "description": "Add 'kinesisanalytics:DiscoverInputSchema' action",
        "prefix": "kinesisanalytics:DiscoverInputSchema"
    },
    "kinesisanalytics:ListApplications": {
        "body": "kinesisanalytics:ListApplications",
        "description": "Add 'kinesisanalytics:ListApplications' action",
        "prefix": "kinesisanalytics:ListApplications"
    },
    "kinesisanalytics:StartApplication": {
        "body": "kinesisanalytics:StartApplication",
        "description": "Add 'kinesisanalytics:StartApplication' action",
        "prefix": "kinesisanalytics:StartApplication"
    },
    "kinesisanalytics:StopApplication": {
        "body": "kinesisanalytics:StopApplication",
        "description": "Add 'kinesisanalytics:StopApplication' action",
        "prefix": "kinesisanalytics:StopApplication"
    },
    "kinesisanalytics:UpdateApplication": {
        "body": "kinesisanalytics:UpdateApplication",
        "description": "Add 'kinesisanalytics:UpdateApplication' action",
        "prefix": "kinesisanalytics:UpdateApplication"
    },
    "kinesisvideo:CreateStream": {
        "body": "kinesisvideo:CreateStream",
        "description": "Add 'kinesisvideo:CreateStream' action",
        "prefix": "kinesisvideo:CreateStream"
    },
    "kinesisvideo:DeleteStream": {
        "body": "kinesisvideo:DeleteStream",
        "description": "Add 'kinesisvideo:DeleteStream' action",
        "prefix": "kinesisvideo:DeleteStream"
    },
    "kinesisvideo:DescribeStream": {
        "body": "kinesisvideo:DescribeStream",
        "description": "Add 'kinesisvideo:DescribeStream' action",
        "prefix": "kinesisvideo:DescribeStream"
    },
    "kinesisvideo:GetDataEndpoint": {
        "body": "kinesisvideo:GetDataEndpoint",
        "description": "Add 'kinesisvideo:GetDataEndpoint' action",
        "prefix": "kinesisvideo:GetDataEndpoint"
    },
    "kinesisvideo:GetMedia": {
        "body": "kinesisvideo:GetMedia",
        "description": "Add 'kinesisvideo:GetMedia' action",
        "prefix": "kinesisvideo:GetMedia"
    },
    "kinesisvideo:GetMediaForFragmentList": {
        "body": "kinesisvideo:GetMediaForFragmentList",
        "description": "Add 'kinesisvideo:GetMediaForFragmentList' action",
        "prefix": "kinesisvideo:GetMediaForFragmentList"
    },
    "kinesisvideo:ListFragments": {
        "body": "kinesisvideo:ListFragments",
        "description": "Add 'kinesisvideo:ListFragments' action",
        "prefix": "kinesisvideo:ListFragments"
    },
    "kinesisvideo:ListStreams": {
        "body": "kinesisvideo:ListStreams",
        "description": "Add 'kinesisvideo:ListStreams' action",
        "prefix": "kinesisvideo:ListStreams"
    },
    "kinesisvideo:ListTagsForStream": {
        "body": "kinesisvideo:ListTagsForStream",
        "description": "Add 'kinesisvideo:ListTagsForStream' action",
        "prefix": "kinesisvideo:ListTagsForStream"
    },
    "kinesisvideo:PutMedia": {
        "body": "kinesisvideo:PutMedia",
        "description": "Add 'kinesisvideo:PutMedia' action",
        "prefix": "kinesisvideo:PutMedia"
    },
    "kinesisvideo:TagStream": {
        "body": "kinesisvideo:TagStream",
        "description": "Add 'kinesisvideo:TagStream' action",
        "prefix": "kinesisvideo:TagStream"
    },
    "kinesisvideo:UntagStream": {
        "body": "kinesisvideo:UntagStream",
        "description": "Add 'kinesisvideo:UntagStream' action",
        "prefix": "kinesisvideo:UntagStream"
    },
    "kinesisvideo:UpdateDataRetention": {
        "body": "kinesisvideo:UpdateDataRetention",
        "description": "Add 'kinesisvideo:UpdateDataRetention' action",
        "prefix": "kinesisvideo:UpdateDataRetention"
    },
    "kinesisvideo:UpdateStream": {
        "body": "kinesisvideo:UpdateStream",
        "description": "Add 'kinesisvideo:UpdateStream' action",
        "prefix": "kinesisvideo:UpdateStream"
    },
    "kms:CancelKeyDeletion": {
        "body": "kms:CancelKeyDeletion",
        "description": "Add 'kms:CancelKeyDeletion' action",
        "prefix": "kms:CancelKeyDeletion"
    },
    "kms:CreateAlias": {
        "body": "kms:CreateAlias",
        "description": "Add 'kms:CreateAlias' action",
        "prefix": "kms:CreateAlias"
    },
    "kms:CreateGrant": {
        "body": "kms:CreateGrant",
        "description": "Add 'kms:CreateGrant' action",
        "prefix": "kms:CreateGrant"
    },
    "kms:CreateKey": {
        "body": "kms:CreateKey",
        "description": "Add 'kms:CreateKey' action",
        "prefix": "kms:CreateKey"
    },
    "kms:Decrypt": {
        "body": "kms:Decrypt",
        "description": "Add 'kms:Decrypt' action",
        "prefix": "kms:Decrypt"
    },
    "kms:DeleteAlias": {
        "body": "kms:DeleteAlias",
        "description": "Add 'kms:DeleteAlias' action",
        "prefix": "kms:DeleteAlias"
    },
    "kms:DeleteImportedKeyMaterial": {
        "body": "kms:DeleteImportedKeyMaterial",
        "description": "Add 'kms:DeleteImportedKeyMaterial' action",
        "prefix": "kms:DeleteImportedKeyMaterial"
    },
    "kms:DescribeKey": {
        "body": "kms:DescribeKey",
        "description": "Add 'kms:DescribeKey' action",
        "prefix": "kms:DescribeKey"
    },
    "kms:DisableKey": {
        "body": "kms:DisableKey",
        "description": "Add 'kms:DisableKey' action",
        "prefix": "kms:DisableKey"
    },
    "kms:DisableKeyRotation": {
        "body": "kms:DisableKeyRotation",
        "description": "Add 'kms:DisableKeyRotation' action",
        "prefix": "kms:DisableKeyRotation"
    },
    "kms:EnableKey": {
        "body": "kms:EnableKey",
        "description": "Add 'kms:EnableKey' action",
        "prefix": "kms:EnableKey"
    },
    "kms:EnableKeyRotation": {
        "body": "kms:EnableKeyRotation",
        "description": "Add 'kms:EnableKeyRotation' action",
        "prefix": "kms:EnableKeyRotation"
    },
    "kms:Encrypt": {
        "body": "kms:Encrypt",
        "description": "Add 'kms:Encrypt' action",
        "prefix": "kms:Encrypt"
    },
    "kms:GenerateDataKey": {
        "body": "kms:GenerateDataKey",
        "description": "Add 'kms:GenerateDataKey' action",
        "prefix": "kms:GenerateDataKey"
    },
    "kms:GenerateDataKeyWithoutPlaintext": {
        "body": "kms:GenerateDataKeyWithoutPlaintext",
        "description": "Add 'kms:GenerateDataKeyWithoutPlaintext' action",
        "prefix": "kms:GenerateDataKeyWithoutPlaintext"
    },
    "kms:GenerateRandom": {
        "body": "kms:GenerateRandom",
        "description": "Add 'kms:GenerateRandom' action",
        "prefix": "kms:GenerateRandom"
    },
    "kms:GetKeyPolicy": {
        "body": "kms:GetKeyPolicy",
        "description": "Add 'kms:GetKeyPolicy' action",
        "prefix": "kms:GetKeyPolicy"
    },
    "kms:GetKeyRotationStatus": {
        "body": "kms:GetKeyRotationStatus",
        "description": "Add 'kms:GetKeyRotationStatus' action",
        "prefix": "kms:GetKeyRotationStatus"
    },
    "kms:GetParametersForImport": {
        "body": "kms:GetParametersForImport",
        "description": "Add 'kms:GetParametersForImport' action",
        "prefix": "kms:GetParametersForImport"
    },
    "kms:ImportKeyMaterial": {
        "body": "kms:ImportKeyMaterial",
        "description": "Add 'kms:ImportKeyMaterial' action",
        "prefix": "kms:ImportKeyMaterial"
    },
    "kms:ListAliases": {
        "body": "kms:ListAliases",
        "description": "Add 'kms:ListAliases' action",
        "prefix": "kms:ListAliases"
    },
    "kms:ListGrants": {
        "body": "kms:ListGrants",
        "description": "Add 'kms:ListGrants' action",
        "prefix": "kms:ListGrants"
    },
    "kms:ListKeyPolicies": {
        "body": "kms:ListKeyPolicies",
        "description": "Add 'kms:ListKeyPolicies' action",
        "prefix": "kms:ListKeyPolicies"
    },
    "kms:ListKeys": {
        "body": "kms:ListKeys",
        "description": "Add 'kms:ListKeys' action",
        "prefix": "kms:ListKeys"
    },
    "kms:ListResourceTags": {
        "body": "kms:ListResourceTags",
        "description": "Add 'kms:ListResourceTags' action",
        "prefix": "kms:ListResourceTags"
    },
    "kms:ListRetirableGrants": {
        "body": "kms:ListRetirableGrants",
        "description": "Add 'kms:ListRetirableGrants' action",
        "prefix": "kms:ListRetirableGrants"
    },
    "kms:PutKeyPolicy": {
        "body": "kms:PutKeyPolicy",
        "description": "Add 'kms:PutKeyPolicy' action",
        "prefix": "kms:PutKeyPolicy"
    },
    "kms:ReEncryptFrom": {
        "body": "kms:ReEncryptFrom",
        "description": "Add 'kms:ReEncryptFrom' action",
        "prefix": "kms:ReEncryptFrom"
    },
    "kms:ReEncryptTo": {
        "body": "kms:ReEncryptTo",
        "description": "Add 'kms:ReEncryptTo' action",
        "prefix": "kms:ReEncryptTo"
    },
    "kms:RetireGrant": {
        "body": "kms:RetireGrant",
        "description": "Add 'kms:RetireGrant' action",
        "prefix": "kms:RetireGrant"
    },
    "kms:RevokeGrant": {
        "body": "kms:RevokeGrant",
        "description": "Add 'kms:RevokeGrant' action",
        "prefix": "kms:RevokeGrant"
    },
    "kms:ScheduleKeyDeletion": {
        "body": "kms:ScheduleKeyDeletion",
        "description": "Add 'kms:ScheduleKeyDeletion' action",
        "prefix": "kms:ScheduleKeyDeletion"
    },
    "kms:TagResource": {
        "body": "kms:TagResource",
        "description": "Add 'kms:TagResource' action",
        "prefix": "kms:TagResource"
    },
    "kms:UntagResource": {
        "body": "kms:UntagResource",
        "description": "Add 'kms:UntagResource' action",
        "prefix": "kms:UntagResource"
    },
    "kms:UpdateAlias": {
        "body": "kms:UpdateAlias",
        "description": "Add 'kms:UpdateAlias' action",
        "prefix": "kms:UpdateAlias"
    },
    "kms:UpdateKeyDescription": {
        "body": "kms:UpdateKeyDescription",
        "description": "Add 'kms:UpdateKeyDescription' action",
        "prefix": "kms:UpdateKeyDescription"
    },
    "lambda:AddPermission": {
        "body": "lambda:AddPermission",
        "description": "Add 'lambda:AddPermission' action",
        "prefix": "lambda:AddPermission"
    },
    "lambda:CreateAlias": {
        "body": "lambda:CreateAlias",
        "description": "Add 'lambda:CreateAlias' action",
        "prefix": "lambda:CreateAlias"
    },
    "lambda:CreateEventSourceMapping": {
        "body": "lambda:CreateEventSourceMapping",
        "description": "Add 'lambda:CreateEventSourceMapping' action",
        "prefix": "lambda:CreateEventSourceMapping"
    },
    "lambda:CreateFunction": {
        "body": "lambda:CreateFunction",
        "description": "Add 'lambda:CreateFunction' action",
        "prefix": "lambda:CreateFunction"
    },
    "lambda:DeleteAlias": {
        "body": "lambda:DeleteAlias",
        "description": "Add 'lambda:DeleteAlias' action",
        "prefix": "lambda:DeleteAlias"
    },
    "lambda:DeleteEventSourceMapping": {
        "body": "lambda:DeleteEventSourceMapping",
        "description": "Add 'lambda:DeleteEventSourceMapping' action",
        "prefix": "lambda:DeleteEventSourceMapping"
    },
    "lambda:DeleteFunction": {
        "body": "lambda:DeleteFunction",
        "description": "Add 'lambda:DeleteFunction' action",
        "prefix": "lambda:DeleteFunction"
    },
    "lambda:DeleteFunctionConcurrency": {
        "body": "lambda:DeleteFunctionConcurrency",
        "description": "Add 'lambda:DeleteFunctionConcurrency' action",
        "prefix": "lambda:DeleteFunctionConcurrency"
    },
    "lambda:EnableReplication": {
        "body": "lambda:EnableReplication",
        "description": "Add 'lambda:EnableReplication' action",
        "prefix": "lambda:EnableReplication"
    },
    "lambda:GetAccountSettings": {
        "body": "lambda:GetAccountSettings",
        "description": "Add 'lambda:GetAccountSettings' action",
        "prefix": "lambda:GetAccountSettings"
    },
    "lambda:GetAlias": {
        "body": "lambda:GetAlias",
        "description": "Add 'lambda:GetAlias' action",
        "prefix": "lambda:GetAlias"
    },
    "lambda:GetEventSourceMapping": {
        "body": "lambda:GetEventSourceMapping",
        "description": "Add 'lambda:GetEventSourceMapping' action",
        "prefix": "lambda:GetEventSourceMapping"
    },
    "lambda:GetFunction": {
        "body": "lambda:GetFunction",
        "description": "Add 'lambda:GetFunction' action",
        "prefix": "lambda:GetFunction"
    },
    "lambda:GetFunctionConfiguration": {
        "body": "lambda:GetFunctionConfiguration",
        "description": "Add 'lambda:GetFunctionConfiguration' action",
        "prefix": "lambda:GetFunctionConfiguration"
    },
    "lambda:GetPolicy": {
        "body": "lambda:GetPolicy",
        "description": "Add 'lambda:GetPolicy' action",
        "prefix": "lambda:GetPolicy"
    },
    "lambda:InvokeAsync": {
        "body": "lambda:InvokeAsync",
        "description": "Add 'lambda:InvokeAsync' action",
        "prefix": "lambda:InvokeAsync"
    },
    "lambda:InvokeFunction": {
        "body": "lambda:InvokeFunction",
        "description": "Add 'lambda:InvokeFunction' action",
        "prefix": "lambda:InvokeFunction"
    },
    "lambda:ListAliases": {
        "body": "lambda:ListAliases",
        "description": "Add 'lambda:ListAliases' action",
        "prefix": "lambda:ListAliases"
    },
    "lambda:ListEventSourceMappings": {
        "body": "lambda:ListEventSourceMappings",
        "description": "Add 'lambda:ListEventSourceMappings' action",
        "prefix": "lambda:ListEventSourceMappings"
    },
    "lambda:ListFunctions": {
        "body": "lambda:ListFunctions",
        "description": "Add 'lambda:ListFunctions' action",
        "prefix": "lambda:ListFunctions"
    },
    "lambda:ListTags": {
        "body": "lambda:ListTags",
        "description": "Add 'lambda:ListTags' action",
        "prefix": "lambda:ListTags"
    },
    "lambda:ListVersionsByFunction": {
        "body": "lambda:ListVersionsByFunction",
        "description": "Add 'lambda:ListVersionsByFunction' action",
        "prefix": "lambda:ListVersionsByFunction"
    },
    "lambda:PublishVersion": {
        "body": "lambda:PublishVersion",
        "description": "Add 'lambda:PublishVersion' action",
        "prefix": "lambda:PublishVersion"
    },
    "lambda:PutFunctionConcurrency": {
        "body": "lambda:PutFunctionConcurrency",
        "description": "Add 'lambda:PutFunctionConcurrency' action",
        "prefix": "lambda:PutFunctionConcurrency"
    },
    "lambda:RemovePermission": {
        "body": "lambda:RemovePermission",
        "description": "Add 'lambda:RemovePermission' action",
        "prefix": "lambda:RemovePermission"
    },
    "lambda:TagResource": {
        "body": "lambda:TagResource",
        "description": "Add 'lambda:TagResource' action",
        "prefix": "lambda:TagResource"
    },
    "lambda:UntagResource": {
        "body": "lambda:UntagResource",
        "description": "Add 'lambda:UntagResource' action",
        "prefix": "lambda:UntagResource"
    },
    "lambda:UpdateAlias": {
        "body": "lambda:UpdateAlias",
        "description": "Add 'lambda:UpdateAlias' action",
        "prefix": "lambda:UpdateAlias"
    },
    "lambda:UpdateEventSourceMapping": {
        "body": "lambda:UpdateEventSourceMapping",
        "description": "Add 'lambda:UpdateEventSourceMapping' action",
        "prefix": "lambda:UpdateEventSourceMapping"
    },
    "lambda:UpdateFunctionCode": {
        "body": "lambda:UpdateFunctionCode",
        "description": "Add 'lambda:UpdateFunctionCode' action",
        "prefix": "lambda:UpdateFunctionCode"
    },
    "lambda:UpdateFunctionConfiguration": {
        "body": "lambda:UpdateFunctionConfiguration",
        "description": "Add 'lambda:UpdateFunctionConfiguration' action",
        "prefix": "lambda:UpdateFunctionConfiguration"
    },
    "lex:CreateBotVersion": {
        "body": "lex:CreateBotVersion",
        "description": "Add 'lex:CreateBotVersion' action",
        "prefix": "lex:CreateBotVersion"
    },
    "lex:CreateIntentVersion": {
        "body": "lex:CreateIntentVersion",
        "description": "Add 'lex:CreateIntentVersion' action",
        "prefix": "lex:CreateIntentVersion"
    },
    "lex:CreateSlotTypeVersion": {
        "body": "lex:CreateSlotTypeVersion",
        "description": "Add 'lex:CreateSlotTypeVersion' action",
        "prefix": "lex:CreateSlotTypeVersion"
    },
    "lex:DeleteBot": {
        "body": "lex:DeleteBot",
        "description": "Add 'lex:DeleteBot' action",
        "prefix": "lex:DeleteBot"
    },
    "lex:DeleteBotAlias": {
        "body": "lex:DeleteBotAlias",
        "description": "Add 'lex:DeleteBotAlias' action",
        "prefix": "lex:DeleteBotAlias"
    },
    "lex:DeleteBotChannelAssociation": {
        "body": "lex:DeleteBotChannelAssociation",
        "description": "Add 'lex:DeleteBotChannelAssociation' action",
        "prefix": "lex:DeleteBotChannelAssociation"
    },
    "lex:DeleteBotVersion": {
        "body": "lex:DeleteBotVersion",
        "description": "Add 'lex:DeleteBotVersion' action",
        "prefix": "lex:DeleteBotVersion"
    },
    "lex:DeleteIntent": {
        "body": "lex:DeleteIntent",
        "description": "Add 'lex:DeleteIntent' action",
        "prefix": "lex:DeleteIntent"
    },
    "lex:DeleteIntentVersion": {
        "body": "lex:DeleteIntentVersion",
        "description": "Add 'lex:DeleteIntentVersion' action",
        "prefix": "lex:DeleteIntentVersion"
    },
    "lex:DeleteSlotType": {
        "body": "lex:DeleteSlotType",
        "description": "Add 'lex:DeleteSlotType' action",
        "prefix": "lex:DeleteSlotType"
    },
    "lex:DeleteSlotTypeVersion": {
        "body": "lex:DeleteSlotTypeVersion",
        "description": "Add 'lex:DeleteSlotTypeVersion' action",
        "prefix": "lex:DeleteSlotTypeVersion"
    },
    "lex:DeleteUtterances": {
        "body": "lex:DeleteUtterances",
        "description": "Add 'lex:DeleteUtterances' action",
        "prefix": "lex:DeleteUtterances"
    },
    "lex:GetBot": {
        "body": "lex:GetBot",
        "description": "Add 'lex:GetBot' action",
        "prefix": "lex:GetBot"
    },
    "lex:GetBotAlias": {
        "body": "lex:GetBotAlias",
        "description": "Add 'lex:GetBotAlias' action",
        "prefix": "lex:GetBotAlias"
    },
    "lex:GetBotAliases": {
        "body": "lex:GetBotAliases",
        "description": "Add 'lex:GetBotAliases' action",
        "prefix": "lex:GetBotAliases"
    },
    "lex:GetBotChannelAssociation": {
        "body": "lex:GetBotChannelAssociation",
        "description": "Add 'lex:GetBotChannelAssociation' action",
        "prefix": "lex:GetBotChannelAssociation"
    },
    "lex:GetBotChannelAssociations": {
        "body": "lex:GetBotChannelAssociations",
        "description": "Add 'lex:GetBotChannelAssociations' action",
        "prefix": "lex:GetBotChannelAssociations"
    },
    "lex:GetBotVersions": {
        "body": "lex:GetBotVersions",
        "description": "Add 'lex:GetBotVersions' action",
        "prefix": "lex:GetBotVersions"
    },
    "lex:GetBots": {
        "body": "lex:GetBots",
        "description": "Add 'lex:GetBots' action",
        "prefix": "lex:GetBots"
    },
    "lex:GetBuiltinIntent": {
        "body": "lex:GetBuiltinIntent",
        "description": "Add 'lex:GetBuiltinIntent' action",
        "prefix": "lex:GetBuiltinIntent"
    },
    "lex:GetBuiltinIntents": {
        "body": "lex:GetBuiltinIntents",
        "description": "Add 'lex:GetBuiltinIntents' action",
        "prefix": "lex:GetBuiltinIntents"
    },
    "lex:GetBuiltinSlotTypes": {
        "body": "lex:GetBuiltinSlotTypes",
        "description": "Add 'lex:GetBuiltinSlotTypes' action",
        "prefix": "lex:GetBuiltinSlotTypes"
    },
    "lex:GetIntent": {
        "body": "lex:GetIntent",
        "description": "Add 'lex:GetIntent' action",
        "prefix": "lex:GetIntent"
    },
    "lex:GetIntentVersions": {
        "body": "lex:GetIntentVersions",
        "description": "Add 'lex:GetIntentVersions' action",
        "prefix": "lex:GetIntentVersions"
    },
    "lex:GetIntents": {
        "body": "lex:GetIntents",
        "description": "Add 'lex:GetIntents' action",
        "prefix": "lex:GetIntents"
    },
    "lex:GetSlotType": {
        "body": "lex:GetSlotType",
        "description": "Add 'lex:GetSlotType' action",
        "prefix": "lex:GetSlotType"
    },
    "lex:GetSlotTypeVersions": {
        "body": "lex:GetSlotTypeVersions",
        "description": "Add 'lex:GetSlotTypeVersions' action",
        "prefix": "lex:GetSlotTypeVersions"
    },
    "lex:GetSlotTypes": {
        "body": "lex:GetSlotTypes",
        "description": "Add 'lex:GetSlotTypes' action",
        "prefix": "lex:GetSlotTypes"
    },
    "lex:GetUtterancesView": {
        "body": "lex:GetUtterancesView",
        "description": "Add 'lex:GetUtterancesView' action",
        "prefix": "lex:GetUtterancesView"
    },
    "lex:PostContent": {
        "body": "lex:PostContent",
        "description": "Add 'lex:PostContent' action",
        "prefix": "lex:PostContent"
    },
    "lex:PostText": {
        "body": "lex:PostText",
        "description": "Add 'lex:PostText' action",
        "prefix": "lex:PostText"
    },
    "lex:PutBot": {
        "body": "lex:PutBot",
        "description": "Add 'lex:PutBot' action",
        "prefix": "lex:PutBot"
    },
    "lex:PutBotAlias": {
        "body": "lex:PutBotAlias",
        "description": "Add 'lex:PutBotAlias' action",
        "prefix": "lex:PutBotAlias"
    },
    "lex:PutIntent": {
        "body": "lex:PutIntent",
        "description": "Add 'lex:PutIntent' action",
        "prefix": "lex:PutIntent"
    },
    "lex:PutSlotType": {
        "body": "lex:PutSlotType",
        "description": "Add 'lex:PutSlotType' action",
        "prefix": "lex:PutSlotType"
    },
    "lightsail:AllocateStaticIp": {
        "body": "lightsail:AllocateStaticIp",
        "description": "Add 'lightsail:AllocateStaticIp' action",
        "prefix": "lightsail:AllocateStaticIp"
    },
    "lightsail:AttachStaticIp": {
        "body": "lightsail:AttachStaticIp",
        "description": "Add 'lightsail:AttachStaticIp' action",
        "prefix": "lightsail:AttachStaticIp"
    },
    "lightsail:CloseInstancePublicPorts": {
        "body": "lightsail:CloseInstancePublicPorts",
        "description": "Add 'lightsail:CloseInstancePublicPorts' action",
        "prefix": "lightsail:CloseInstancePublicPorts"
    },
    "lightsail:CreateDomain": {
        "body": "lightsail:CreateDomain",
        "description": "Add 'lightsail:CreateDomain' action",
        "prefix": "lightsail:CreateDomain"
    },
    "lightsail:CreateDomainEntry": {
        "body": "lightsail:CreateDomainEntry",
        "description": "Add 'lightsail:CreateDomainEntry' action",
        "prefix": "lightsail:CreateDomainEntry"
    },
    "lightsail:CreateInstanceSnapshot": {
        "body": "lightsail:CreateInstanceSnapshot",
        "description": "Add 'lightsail:CreateInstanceSnapshot' action",
        "prefix": "lightsail:CreateInstanceSnapshot"
    },
    "lightsail:CreateInstances": {
        "body": "lightsail:CreateInstances",
        "description": "Add 'lightsail:CreateInstances' action",
        "prefix": "lightsail:CreateInstances"
    },
    "lightsail:CreateInstancesFromSnapshot": {
        "body": "lightsail:CreateInstancesFromSnapshot",
        "description": "Add 'lightsail:CreateInstancesFromSnapshot' action",
        "prefix": "lightsail:CreateInstancesFromSnapshot"
    },
    "lightsail:CreateKeyPair": {
        "body": "lightsail:CreateKeyPair",
        "description": "Add 'lightsail:CreateKeyPair' action",
        "prefix": "lightsail:CreateKeyPair"
    },
    "lightsail:DeleteDomain": {
        "body": "lightsail:DeleteDomain",
        "description": "Add 'lightsail:DeleteDomain' action",
        "prefix": "lightsail:DeleteDomain"
    },
    "lightsail:DeleteDomainEntry": {
        "body": "lightsail:DeleteDomainEntry",
        "description": "Add 'lightsail:DeleteDomainEntry' action",
        "prefix": "lightsail:DeleteDomainEntry"
    },
    "lightsail:DeleteInstance": {
        "body": "lightsail:DeleteInstance",
        "description": "Add 'lightsail:DeleteInstance' action",
        "prefix": "lightsail:DeleteInstance"
    },
    "lightsail:DeleteInstanceSnapshot": {
        "body": "lightsail:DeleteInstanceSnapshot",
        "description": "Add 'lightsail:DeleteInstanceSnapshot' action",
        "prefix": "lightsail:DeleteInstanceSnapshot"
    },
    "lightsail:DeleteKeyPair": {
        "body": "lightsail:DeleteKeyPair",
        "description": "Add 'lightsail:DeleteKeyPair' action",
        "prefix": "lightsail:DeleteKeyPair"
    },
    "lightsail:DetachStaticIp": {
        "body": "lightsail:DetachStaticIp",
        "description": "Add 'lightsail:DetachStaticIp' action",
        "prefix": "lightsail:DetachStaticIp"
    },
    "lightsail:DownloadDefaultKeyPair": {
        "body": "lightsail:DownloadDefaultKeyPair",
        "description": "Add 'lightsail:DownloadDefaultKeyPair' action",
        "prefix": "lightsail:DownloadDefaultKeyPair"
    },
    "lightsail:GetActiveNames": {
        "body": "lightsail:GetActiveNames",
        "description": "Add 'lightsail:GetActiveNames' action",
        "prefix": "lightsail:GetActiveNames"
    },
    "lightsail:GetBlueprints": {
        "body": "lightsail:GetBlueprints",
        "description": "Add 'lightsail:GetBlueprints' action",
        "prefix": "lightsail:GetBlueprints"
    },
    "lightsail:GetBundles": {
        "body": "lightsail:GetBundles",
        "description": "Add 'lightsail:GetBundles' action",
        "prefix": "lightsail:GetBundles"
    },
    "lightsail:GetDomain": {
        "body": "lightsail:GetDomain",
        "description": "Add 'lightsail:GetDomain' action",
        "prefix": "lightsail:GetDomain"
    },
    "lightsail:GetDomains": {
        "body": "lightsail:GetDomains",
        "description": "Add 'lightsail:GetDomains' action",
        "prefix": "lightsail:GetDomains"
    },
    "lightsail:GetInstance": {
        "body": "lightsail:GetInstance",
        "description": "Add 'lightsail:GetInstance' action",
        "prefix": "lightsail:GetInstance"
    },
    "lightsail:GetInstanceAccessDetails": {
        "body": "lightsail:GetInstanceAccessDetails",
        "description": "Add 'lightsail:GetInstanceAccessDetails' action",
        "prefix": "lightsail:GetInstanceAccessDetails"
    },
    "lightsail:GetInstanceMetricData": {
        "body": "lightsail:GetInstanceMetricData",
        "description": "Add 'lightsail:GetInstanceMetricData' action",
        "prefix": "lightsail:GetInstanceMetricData"
    },
    "lightsail:GetInstancePortStates": {
        "body": "lightsail:GetInstancePortStates",
        "description": "Add 'lightsail:GetInstancePortStates' action",
        "prefix": "lightsail:GetInstancePortStates"
    },
    "lightsail:GetInstanceSnapshot": {
        "body": "lightsail:GetInstanceSnapshot",
        "description": "Add 'lightsail:GetInstanceSnapshot' action",
        "prefix": "lightsail:GetInstanceSnapshot"
    },
    "lightsail:GetInstanceSnapshots": {
        "body": "lightsail:GetInstanceSnapshots",
        "description": "Add 'lightsail:GetInstanceSnapshots' action",
        "prefix": "lightsail:GetInstanceSnapshots"
    },
    "lightsail:GetInstanceState": {
        "body": "lightsail:GetInstanceState",
        "description": "Add 'lightsail:GetInstanceState' action",
        "prefix": "lightsail:GetInstanceState"
    },
    "lightsail:GetInstances": {
        "body": "lightsail:GetInstances",
        "description": "Add 'lightsail:GetInstances' action",
        "prefix": "lightsail:GetInstances"
    },
    "lightsail:GetKeyPair": {
        "body": "lightsail:GetKeyPair",
        "description": "Add 'lightsail:GetKeyPair' action",
        "prefix": "lightsail:GetKeyPair"
    },
    "lightsail:GetKeyPairs": {
        "body": "lightsail:GetKeyPairs",
        "description": "Add 'lightsail:GetKeyPairs' action",
        "prefix": "lightsail:GetKeyPairs"
    },
    "lightsail:GetOperation": {
        "body": "lightsail:GetOperation",
        "description": "Add 'lightsail:GetOperation' action",
        "prefix": "lightsail:GetOperation"
    },
    "lightsail:GetOperations": {
        "body": "lightsail:GetOperations",
        "description": "Add 'lightsail:GetOperations' action",
        "prefix": "lightsail:GetOperations"
    },
    "lightsail:GetOperationsForResource": {
        "body": "lightsail:GetOperationsForResource",
        "description": "Add 'lightsail:GetOperationsForResource' action",
        "prefix": "lightsail:GetOperationsForResource"
    },
    "lightsail:GetRegions": {
        "body": "lightsail:GetRegions",
        "description": "Add 'lightsail:GetRegions' action",
        "prefix": "lightsail:GetRegions"
    },
    "lightsail:GetStaticIp": {
        "body": "lightsail:GetStaticIp",
        "description": "Add 'lightsail:GetStaticIp' action",
        "prefix": "lightsail:GetStaticIp"
    },
    "lightsail:GetStaticIps": {
        "body": "lightsail:GetStaticIps",
        "description": "Add 'lightsail:GetStaticIps' action",
        "prefix": "lightsail:GetStaticIps"
    },
    "lightsail:ImportKeyPair": {
        "body": "lightsail:ImportKeyPair",
        "description": "Add 'lightsail:ImportKeyPair' action",
        "prefix": "lightsail:ImportKeyPair"
    },
    "lightsail:IsVpcPeered": {
        "body": "lightsail:IsVpcPeered",
        "description": "Add 'lightsail:IsVpcPeered' action",
        "prefix": "lightsail:IsVpcPeered"
    },
    "lightsail:OpenInstancePublicPorts": {
        "body": "lightsail:OpenInstancePublicPorts",
        "description": "Add 'lightsail:OpenInstancePublicPorts' action",
        "prefix": "lightsail:OpenInstancePublicPorts"
    },
    "lightsail:PeerVpc": {
        "body": "lightsail:PeerVpc",
        "description": "Add 'lightsail:PeerVpc' action",
        "prefix": "lightsail:PeerVpc"
    },
    "lightsail:RebootInstance": {
        "body": "lightsail:RebootInstance",
        "description": "Add 'lightsail:RebootInstance' action",
        "prefix": "lightsail:RebootInstance"
    },
    "lightsail:ReleaseStaticIp": {
        "body": "lightsail:ReleaseStaticIp",
        "description": "Add 'lightsail:ReleaseStaticIp' action",
        "prefix": "lightsail:ReleaseStaticIp"
    },
    "lightsail:StartInstance": {
        "body": "lightsail:StartInstance",
        "description": "Add 'lightsail:StartInstance' action",
        "prefix": "lightsail:StartInstance"
    },
    "lightsail:StopInstance": {
        "body": "lightsail:StopInstance",
        "description": "Add 'lightsail:StopInstance' action",
        "prefix": "lightsail:StopInstance"
    },
    "lightsail:UnpeerVpc": {
        "body": "lightsail:UnpeerVpc",
        "description": "Add 'lightsail:UnpeerVpc' action",
        "prefix": "lightsail:UnpeerVpc"
    },
    "lightsail:UpdateDomainEntry": {
        "body": "lightsail:UpdateDomainEntry",
        "description": "Add 'lightsail:UpdateDomainEntry' action",
        "prefix": "lightsail:UpdateDomainEntry"
    },
    "logs:AssociateKmsKey": {
        "body": "logs:AssociateKmsKey",
        "description": "Add 'logs:AssociateKmsKey' action",
        "prefix": "logs:AssociateKmsKey"
    },
    "logs:CancelExportTask": {
        "body": "logs:CancelExportTask",
        "description": "Add 'logs:CancelExportTask' action",
        "prefix": "logs:CancelExportTask"
    },
    "logs:CreateExportTask": {
        "body": "logs:CreateExportTask",
        "description": "Add 'logs:CreateExportTask' action",
        "prefix": "logs:CreateExportTask"
    },
    "logs:CreateLogGroup": {
        "body": "logs:CreateLogGroup",
        "description": "Add 'logs:CreateLogGroup' action",
        "prefix": "logs:CreateLogGroup"
    },
    "logs:CreateLogStream": {
        "body": "logs:CreateLogStream",
        "description": "Add 'logs:CreateLogStream' action",
        "prefix": "logs:CreateLogStream"
    },
    "logs:DeleteDestination": {
        "body": "logs:DeleteDestination",
        "description": "Add 'logs:DeleteDestination' action",
        "prefix": "logs:DeleteDestination"
    },
    "logs:DeleteLogGroup": {
        "body": "logs:DeleteLogGroup",
        "description": "Add 'logs:DeleteLogGroup' action",
        "prefix": "logs:DeleteLogGroup"
    },
    "logs:DeleteLogStream": {
        "body": "logs:DeleteLogStream",
        "description": "Add 'logs:DeleteLogStream' action",
        "prefix": "logs:DeleteLogStream"
    },
    "logs:DeleteMetricFilter": {
        "body": "logs:DeleteMetricFilter",
        "description": "Add 'logs:DeleteMetricFilter' action",
        "prefix": "logs:DeleteMetricFilter"
    },
    "logs:DeleteResourcePolicy": {
        "body": "logs:DeleteResourcePolicy",
        "description": "Add 'logs:DeleteResourcePolicy' action",
        "prefix": "logs:DeleteResourcePolicy"
    },
    "logs:DeleteRetentionPolicy": {
        "body": "logs:DeleteRetentionPolicy",
        "description": "Add 'logs:DeleteRetentionPolicy' action",
        "prefix": "logs:DeleteRetentionPolicy"
    },
    "logs:DeleteSubscriptionFilter": {
        "body": "logs:DeleteSubscriptionFilter",
        "description": "Add 'logs:DeleteSubscriptionFilter' action",
        "prefix": "logs:DeleteSubscriptionFilter"
    },
    "logs:DescribeDestinations": {
        "body": "logs:DescribeDestinations",
        "description": "Add 'logs:DescribeDestinations' action",
        "prefix": "logs:DescribeDestinations"
    },
    "logs:DescribeExportTasks": {
        "body": "logs:DescribeExportTasks",
        "description": "Add 'logs:DescribeExportTasks' action",
        "prefix": "logs:DescribeExportTasks"
    },
    "logs:DescribeLogGroups": {
        "body": "logs:DescribeLogGroups",
        "description": "Add 'logs:DescribeLogGroups' action",
        "prefix": "logs:DescribeLogGroups"
    },
    "logs:DescribeLogStreams": {
        "body": "logs:DescribeLogStreams",
        "description": "Add 'logs:DescribeLogStreams' action",
        "prefix": "logs:DescribeLogStreams"
    },
    "logs:DescribeMetricFilters": {
        "body": "logs:DescribeMetricFilters",
        "description": "Add 'logs:DescribeMetricFilters' action",
        "prefix": "logs:DescribeMetricFilters"
    },
    "logs:DescribeResourcePolicies": {
        "body": "logs:DescribeResourcePolicies",
        "description": "Add 'logs:DescribeResourcePolicies' action",
        "prefix": "logs:DescribeResourcePolicies"
    },
    "logs:DescribeSubscriptionFilters": {
        "body": "logs:DescribeSubscriptionFilters",
        "description": "Add 'logs:DescribeSubscriptionFilters' action",
        "prefix": "logs:DescribeSubscriptionFilters"
    },
    "logs:DisassociateKmsKey": {
        "body": "logs:DisassociateKmsKey",
        "description": "Add 'logs:DisassociateKmsKey' action",
        "prefix": "logs:DisassociateKmsKey"
    },
    "logs:FilterLogEvents": {
        "body": "logs:FilterLogEvents",
        "description": "Add 'logs:FilterLogEvents' action",
        "prefix": "logs:FilterLogEvents"
    },
    "logs:GetLogEvents": {
        "body": "logs:GetLogEvents",
        "description": "Add 'logs:GetLogEvents' action",
        "prefix": "logs:GetLogEvents"
    },
    "logs:ListTagsLogGroup": {
        "body": "logs:ListTagsLogGroup",
        "description": "Add 'logs:ListTagsLogGroup' action",
        "prefix": "logs:ListTagsLogGroup"
    },
    "logs:PutDestination": {
        "body": "logs:PutDestination",
        "description": "Add 'logs:PutDestination' action",
        "prefix": "logs:PutDestination"
    },
    "logs:PutDestinationPolicy": {
        "body": "logs:PutDestinationPolicy",
        "description": "Add 'logs:PutDestinationPolicy' action",
        "prefix": "logs:PutDestinationPolicy"
    },
    "logs:PutLogEvents": {
        "body": "logs:PutLogEvents",
        "description": "Add 'logs:PutLogEvents' action",
        "prefix": "logs:PutLogEvents"
    },
    "logs:PutMetricFilter": {
        "body": "logs:PutMetricFilter",
        "description": "Add 'logs:PutMetricFilter' action",
        "prefix": "logs:PutMetricFilter"
    },
    "logs:PutResourcePolicy": {
        "body": "logs:PutResourcePolicy",
        "description": "Add 'logs:PutResourcePolicy' action",
        "prefix": "logs:PutResourcePolicy"
    },
    "logs:PutRetentionPolicy": {
        "body": "logs:PutRetentionPolicy",
        "description": "Add 'logs:PutRetentionPolicy' action",
        "prefix": "logs:PutRetentionPolicy"
    },
    "logs:PutSubscriptionFilter": {
        "body": "logs:PutSubscriptionFilter",
        "description": "Add 'logs:PutSubscriptionFilter' action",
        "prefix": "logs:PutSubscriptionFilter"
    },
    "logs:TagLogGroup": {
        "body": "logs:TagLogGroup",
        "description": "Add 'logs:TagLogGroup' action",
        "prefix": "logs:TagLogGroup"
    },
    "logs:TestMetricFilter": {
        "body": "logs:TestMetricFilter",
        "description": "Add 'logs:TestMetricFilter' action",
        "prefix": "logs:TestMetricFilter"
    },
    "logs:UntagLogGroup": {
        "body": "logs:UntagLogGroup",
        "description": "Add 'logs:UntagLogGroup' action",
        "prefix": "logs:UntagLogGroup"
    },
    "machinelearning:AddTags": {
        "body": "machinelearning:AddTags",
        "description": "Add 'machinelearning:AddTags' action",
        "prefix": "machinelearning:AddTags"
    },
    "machinelearning:CreateBatchPrediction": {
        "body": "machinelearning:CreateBatchPrediction",
        "description": "Add 'machinelearning:CreateBatchPrediction' action",
        "prefix": "machinelearning:CreateBatchPrediction"
    },
    "machinelearning:CreateDataSourceFromRDS": {
        "body": "machinelearning:CreateDataSourceFromRDS",
        "description": "Add 'machinelearning:CreateDataSourceFromRDS' action",
        "prefix": "machinelearning:CreateDataSourceFromRDS"
    },
    "machinelearning:CreateDataSourceFromRedshift": {
        "body": "machinelearning:CreateDataSourceFromRedshift",
        "description": "Add 'machinelearning:CreateDataSourceFromRedshift' action",
        "prefix": "machinelearning:CreateDataSourceFromRedshift"
    },
    "machinelearning:CreateDataSourceFromS3": {
        "body": "machinelearning:CreateDataSourceFromS3",
        "description": "Add 'machinelearning:CreateDataSourceFromS3' action",
        "prefix": "machinelearning:CreateDataSourceFromS3"
    },
    "machinelearning:CreateEvaluation": {
        "body": "machinelearning:CreateEvaluation",
        "description": "Add 'machinelearning:CreateEvaluation' action",
        "prefix": "machinelearning:CreateEvaluation"
    },
    "machinelearning:CreateMLModel": {
        "body": "machinelearning:CreateMLModel",
        "description": "Add 'machinelearning:CreateMLModel' action",
        "prefix": "machinelearning:CreateMLModel"
    },
    "machinelearning:CreateRealtimeEndpoint": {
        "body": "machinelearning:CreateRealtimeEndpoint",
        "description": "Add 'machinelearning:CreateRealtimeEndpoint' action",
        "prefix": "machinelearning:CreateRealtimeEndpoint"
    },
    "machinelearning:DeleteBatchPrediction": {
        "body": "machinelearning:DeleteBatchPrediction",
        "description": "Add 'machinelearning:DeleteBatchPrediction' action",
        "prefix": "machinelearning:DeleteBatchPrediction"
    },
    "machinelearning:DeleteDataSource": {
        "body": "machinelearning:DeleteDataSource",
        "description": "Add 'machinelearning:DeleteDataSource' action",
        "prefix": "machinelearning:DeleteDataSource"
    },
    "machinelearning:DeleteEvaluation": {
        "body": "machinelearning:DeleteEvaluation",
        "description": "Add 'machinelearning:DeleteEvaluation' action",
        "prefix": "machinelearning:DeleteEvaluation"
    },
    "machinelearning:DeleteMLModel": {
        "body": "machinelearning:DeleteMLModel",
        "description": "Add 'machinelearning:DeleteMLModel' action",
        "prefix": "machinelearning:DeleteMLModel"
    },
    "machinelearning:DeleteRealtimeEndpoint": {
        "body": "machinelearning:DeleteRealtimeEndpoint",
        "description": "Add 'machinelearning:DeleteRealtimeEndpoint' action",
        "prefix": "machinelearning:DeleteRealtimeEndpoint"
    },
    "machinelearning:DeleteTags": {
        "body": "machinelearning:DeleteTags",
        "description": "Add 'machinelearning:DeleteTags' action",
        "prefix": "machinelearning:DeleteTags"
    },
    "machinelearning:DescribeBatchPredictions": {
        "body": "machinelearning:DescribeBatchPredictions",
        "description": "Add 'machinelearning:DescribeBatchPredictions' action",
        "prefix": "machinelearning:DescribeBatchPredictions"
    },
    "machinelearning:DescribeDataSources": {
        "body": "machinelearning:DescribeDataSources",
        "description": "Add 'machinelearning:DescribeDataSources' action",
        "prefix": "machinelearning:DescribeDataSources"
    },
    "machinelearning:DescribeEvaluations": {
        "body": "machinelearning:DescribeEvaluations",
        "description": "Add 'machinelearning:DescribeEvaluations' action",
        "prefix": "machinelearning:DescribeEvaluations"
    },
    "machinelearning:DescribeMLModels": {
        "body": "machinelearning:DescribeMLModels",
        "description": "Add 'machinelearning:DescribeMLModels' action",
        "prefix": "machinelearning:DescribeMLModels"
    },
    "machinelearning:DescribeTags": {
        "body": "machinelearning:DescribeTags",
        "description": "Add 'machinelearning:DescribeTags' action",
        "prefix": "machinelearning:DescribeTags"
    },
    "machinelearning:GetBatchPrediction": {
        "body": "machinelearning:GetBatchPrediction",
        "description": "Add 'machinelearning:GetBatchPrediction' action",
        "prefix": "machinelearning:GetBatchPrediction"
    },
    "machinelearning:GetDataSource": {
        "body": "machinelearning:GetDataSource",
        "description": "Add 'machinelearning:GetDataSource' action",
        "prefix": "machinelearning:GetDataSource"
    },
    "machinelearning:GetEvaluation": {
        "body": "machinelearning:GetEvaluation",
        "description": "Add 'machinelearning:GetEvaluation' action",
        "prefix": "machinelearning:GetEvaluation"
    },
    "machinelearning:GetMLModel": {
        "body": "machinelearning:GetMLModel",
        "description": "Add 'machinelearning:GetMLModel' action",
        "prefix": "machinelearning:GetMLModel"
    },
    "machinelearning:Predict": {
        "body": "machinelearning:Predict",
        "description": "Add 'machinelearning:Predict' action",
        "prefix": "machinelearning:Predict"
    },
    "machinelearning:UpdateBatchPrediction": {
        "body": "machinelearning:UpdateBatchPrediction",
        "description": "Add 'machinelearning:UpdateBatchPrediction' action",
        "prefix": "machinelearning:UpdateBatchPrediction"
    },
    "machinelearning:UpdateDataSource": {
        "body": "machinelearning:UpdateDataSource",
        "description": "Add 'machinelearning:UpdateDataSource' action",
        "prefix": "machinelearning:UpdateDataSource"
    },
    "machinelearning:UpdateEvaluation": {
        "body": "machinelearning:UpdateEvaluation",
        "description": "Add 'machinelearning:UpdateEvaluation' action",
        "prefix": "machinelearning:UpdateEvaluation"
    },
    "machinelearning:UpdateMLModel": {
        "body": "machinelearning:UpdateMLModel",
        "description": "Add 'machinelearning:UpdateMLModel' action",
        "prefix": "machinelearning:UpdateMLModel"
    },
    "mechanicalturk:ApproveAssignment": {
        "body": "mechanicalturk:ApproveAssignment",
        "description": "Add 'mechanicalturk:ApproveAssignment' action",
        "prefix": "mechanicalturk:ApproveAssignment"
    },
    "mechanicalturk:ApproveRejectedAssignment": {
        "body": "mechanicalturk:ApproveRejectedAssignment",
        "description": "Add 'mechanicalturk:ApproveRejectedAssignment' action",
        "prefix": "mechanicalturk:ApproveRejectedAssignment"
    },
    "mechanicalturk:AssignQualification": {
        "body": "mechanicalturk:AssignQualification",
        "description": "Add 'mechanicalturk:AssignQualification' action",
        "prefix": "mechanicalturk:AssignQualification"
    },
    "mechanicalturk:BlockWorker": {
        "body": "mechanicalturk:BlockWorker",
        "description": "Add 'mechanicalturk:BlockWorker' action",
        "prefix": "mechanicalturk:BlockWorker"
    },
    "mechanicalturk:ChangeHITTypeOfHIT": {
        "body": "mechanicalturk:ChangeHITTypeOfHIT",
        "description": "Add 'mechanicalturk:ChangeHITTypeOfHIT' action",
        "prefix": "mechanicalturk:ChangeHITTypeOfHIT"
    },
    "mechanicalturk:CreateHIT": {
        "body": "mechanicalturk:CreateHIT",
        "description": "Add 'mechanicalturk:CreateHIT' action",
        "prefix": "mechanicalturk:CreateHIT"
    },
    "mechanicalturk:CreateQualificationType": {
        "body": "mechanicalturk:CreateQualificationType",
        "description": "Add 'mechanicalturk:CreateQualificationType' action",
        "prefix": "mechanicalturk:CreateQualificationType"
    },
    "mechanicalturk:DisableHIT": {
        "body": "mechanicalturk:DisableHIT",
        "description": "Add 'mechanicalturk:DisableHIT' action",
        "prefix": "mechanicalturk:DisableHIT"
    },
    "mechanicalturk:DisposeHIT": {
        "body": "mechanicalturk:DisposeHIT",
        "description": "Add 'mechanicalturk:DisposeHIT' action",
        "prefix": "mechanicalturk:DisposeHIT"
    },
    "mechanicalturk:DisposeQualificationType": {
        "body": "mechanicalturk:DisposeQualificationType",
        "description": "Add 'mechanicalturk:DisposeQualificationType' action",
        "prefix": "mechanicalturk:DisposeQualificationType"
    },
    "mechanicalturk:ExtendHIT": {
        "body": "mechanicalturk:ExtendHIT",
        "description": "Add 'mechanicalturk:ExtendHIT' action",
        "prefix": "mechanicalturk:ExtendHIT"
    },
    "mechanicalturk:ForceExpireHIT": {
        "body": "mechanicalturk:ForceExpireHIT",
        "description": "Add 'mechanicalturk:ForceExpireHIT' action",
        "prefix": "mechanicalturk:ForceExpireHIT"
    },
    "mechanicalturk:GetAccountBalance": {
        "body": "mechanicalturk:GetAccountBalance",
        "description": "Add 'mechanicalturk:GetAccountBalance' action",
        "prefix": "mechanicalturk:GetAccountBalance"
    },
    "mechanicalturk:GetAssignment": {
        "body": "mechanicalturk:GetAssignment",
        "description": "Add 'mechanicalturk:GetAssignment' action",
        "prefix": "mechanicalturk:GetAssignment"
    },
    "mechanicalturk:GetAssignmentsForHIT": {
        "body": "mechanicalturk:GetAssignmentsForHIT",
        "description": "Add 'mechanicalturk:GetAssignmentsForHIT' action",
        "prefix": "mechanicalturk:GetAssignmentsForHIT"
    },
    "mechanicalturk:GetBlockedWorkers": {
        "body": "mechanicalturk:GetBlockedWorkers",
        "description": "Add 'mechanicalturk:GetBlockedWorkers' action",
        "prefix": "mechanicalturk:GetBlockedWorkers"
    },
    "mechanicalturk:GetBonusPayments": {
        "body": "mechanicalturk:GetBonusPayments",
        "description": "Add 'mechanicalturk:GetBonusPayments' action",
        "prefix": "mechanicalturk:GetBonusPayments"
    },
    "mechanicalturk:GetFileUploadURL": {
        "body": "mechanicalturk:GetFileUploadURL",
        "description": "Add 'mechanicalturk:GetFileUploadURL' action",
        "prefix": "mechanicalturk:GetFileUploadURL"
    },
    "mechanicalturk:GetHIT": {
        "body": "mechanicalturk:GetHIT",
        "description": "Add 'mechanicalturk:GetHIT' action",
        "prefix": "mechanicalturk:GetHIT"
    },
    "mechanicalturk:GetHITsForQualificationType": {
        "body": "mechanicalturk:GetHITsForQualificationType",
        "description": "Add 'mechanicalturk:GetHITsForQualificationType' action",
        "prefix": "mechanicalturk:GetHITsForQualificationType"
    },
    "mechanicalturk:GetQualificationRequests": {
        "body": "mechanicalturk:GetQualificationRequests",
        "description": "Add 'mechanicalturk:GetQualificationRequests' action",
        "prefix": "mechanicalturk:GetQualificationRequests"
    },
    "mechanicalturk:GetQualificationScore": {
        "body": "mechanicalturk:GetQualificationScore",
        "description": "Add 'mechanicalturk:GetQualificationScore' action",
        "prefix": "mechanicalturk:GetQualificationScore"
    },
    "mechanicalturk:GetQualificationType": {
        "body": "mechanicalturk:GetQualificationType",
        "description": "Add 'mechanicalturk:GetQualificationType' action",
        "prefix": "mechanicalturk:GetQualificationType"
    },
    "mechanicalturk:GetQualificationsForQualificationType": {
        "body": "mechanicalturk:GetQualificationsForQualificationType",
        "description": "Add 'mechanicalturk:GetQualificationsForQualificationType' action",
        "prefix": "mechanicalturk:GetQualificationsForQualificationType"
    },
    "mechanicalturk:GetRequesterStatistic": {
        "body": "mechanicalturk:GetRequesterStatistic",
        "description": "Add 'mechanicalturk:GetRequesterStatistic' action",
        "prefix": "mechanicalturk:GetRequesterStatistic"
    },
    "mechanicalturk:GetRequesterWorkerStatistic": {
        "body": "mechanicalturk:GetRequesterWorkerStatistic",
        "description": "Add 'mechanicalturk:GetRequesterWorkerStatistic' action",
        "prefix": "mechanicalturk:GetRequesterWorkerStatistic"
    },
    "mechanicalturk:GetReviewResultsForHIT": {
        "body": "mechanicalturk:GetReviewResultsForHIT",
        "description": "Add 'mechanicalturk:GetReviewResultsForHIT' action",
        "prefix": "mechanicalturk:GetReviewResultsForHIT"
    },
    "mechanicalturk:GetReviewableHITs": {
        "body": "mechanicalturk:GetReviewableHITs",
        "description": "Add 'mechanicalturk:GetReviewableHITs' action",
        "prefix": "mechanicalturk:GetReviewableHITs"
    },
    "mechanicalturk:GrantBonus": {
        "body": "mechanicalturk:GrantBonus",
        "description": "Add 'mechanicalturk:GrantBonus' action",
        "prefix": "mechanicalturk:GrantBonus"
    },
    "mechanicalturk:GrantQualification": {
        "body": "mechanicalturk:GrantQualification",
        "description": "Add 'mechanicalturk:GrantQualification' action",
        "prefix": "mechanicalturk:GrantQualification"
    },
    "mechanicalturk:NotifyWorkers": {
        "body": "mechanicalturk:NotifyWorkers",
        "description": "Add 'mechanicalturk:NotifyWorkers' action",
        "prefix": "mechanicalturk:NotifyWorkers"
    },
    "mechanicalturk:RegisterHITType": {
        "body": "mechanicalturk:RegisterHITType",
        "description": "Add 'mechanicalturk:RegisterHITType' action",
        "prefix": "mechanicalturk:RegisterHITType"
    },
    "mechanicalturk:RejectAssignment": {
        "body": "mechanicalturk:RejectAssignment",
        "description": "Add 'mechanicalturk:RejectAssignment' action",
        "prefix": "mechanicalturk:RejectAssignment"
    },
    "mechanicalturk:RejectQualificationRequest": {
        "body": "mechanicalturk:RejectQualificationRequest",
        "description": "Add 'mechanicalturk:RejectQualificationRequest' action",
        "prefix": "mechanicalturk:RejectQualificationRequest"
    },
    "mechanicalturk:RevokeQualification": {
        "body": "mechanicalturk:RevokeQualification",
        "description": "Add 'mechanicalturk:RevokeQualification' action",
        "prefix": "mechanicalturk:RevokeQualification"
    },
    "mechanicalturk:SearchHITs": {
        "body": "mechanicalturk:SearchHITs",
        "description": "Add 'mechanicalturk:SearchHITs' action",
        "prefix": "mechanicalturk:SearchHITs"
    },
    "mechanicalturk:SearchQualificationTypes": {
        "body": "mechanicalturk:SearchQualificationTypes",
        "description": "Add 'mechanicalturk:SearchQualificationTypes' action",
        "prefix": "mechanicalturk:SearchQualificationTypes"
    },
    "mechanicalturk:SendTestEventNotification": {
        "body": "mechanicalturk:SendTestEventNotification",
        "description": "Add 'mechanicalturk:SendTestEventNotification' action",
        "prefix": "mechanicalturk:SendTestEventNotification"
    },
    "mechanicalturk:SetHITAsReviewing": {
        "body": "mechanicalturk:SetHITAsReviewing",
        "description": "Add 'mechanicalturk:SetHITAsReviewing' action",
        "prefix": "mechanicalturk:SetHITAsReviewing"
    },
    "mechanicalturk:SetHITTypeNotification": {
        "body": "mechanicalturk:SetHITTypeNotification",
        "description": "Add 'mechanicalturk:SetHITTypeNotification' action",
        "prefix": "mechanicalturk:SetHITTypeNotification"
    },
    "mechanicalturk:UnblockWorker": {
        "body": "mechanicalturk:UnblockWorker",
        "description": "Add 'mechanicalturk:UnblockWorker' action",
        "prefix": "mechanicalturk:UnblockWorker"
    },
    "mechanicalturk:UpdateQualificationScore": {
        "body": "mechanicalturk:UpdateQualificationScore",
        "description": "Add 'mechanicalturk:UpdateQualificationScore' action",
        "prefix": "mechanicalturk:UpdateQualificationScore"
    },
    "mechanicalturk:UpdateQualificationType": {
        "body": "mechanicalturk:UpdateQualificationType",
        "description": "Add 'mechanicalturk:UpdateQualificationType' action",
        "prefix": "mechanicalturk:UpdateQualificationType"
    },
    "mediaconvert:CancelJob": {
        "body": "mediaconvert:CancelJob",
        "description": "Add 'mediaconvert:CancelJob' action",
        "prefix": "mediaconvert:CancelJob"
    },
    "mediaconvert:CreateJob": {
        "body": "mediaconvert:CreateJob",
        "description": "Add 'mediaconvert:CreateJob' action",
        "prefix": "mediaconvert:CreateJob"
    },
    "mediaconvert:CreateJobTemplate": {
        "body": "mediaconvert:CreateJobTemplate",
        "description": "Add 'mediaconvert:CreateJobTemplate' action",
        "prefix": "mediaconvert:CreateJobTemplate"
    },
    "mediaconvert:CreatePreset": {
        "body": "mediaconvert:CreatePreset",
        "description": "Add 'mediaconvert:CreatePreset' action",
        "prefix": "mediaconvert:CreatePreset"
    },
    "mediaconvert:CreateQueue": {
        "body": "mediaconvert:CreateQueue",
        "description": "Add 'mediaconvert:CreateQueue' action",
        "prefix": "mediaconvert:CreateQueue"
    },
    "mediaconvert:DeleteJobTemplate": {
        "body": "mediaconvert:DeleteJobTemplate",
        "description": "Add 'mediaconvert:DeleteJobTemplate' action",
        "prefix": "mediaconvert:DeleteJobTemplate"
    },
    "mediaconvert:DeletePreset": {
        "body": "mediaconvert:DeletePreset",
        "description": "Add 'mediaconvert:DeletePreset' action",
        "prefix": "mediaconvert:DeletePreset"
    },
    "mediaconvert:DeleteQueue": {
        "body": "mediaconvert:DeleteQueue",
        "description": "Add 'mediaconvert:DeleteQueue' action",
        "prefix": "mediaconvert:DeleteQueue"
    },
    "mediaconvert:DescribeEndpoint": {
        "body": "mediaconvert:DescribeEndpoint",
        "description": "Add 'mediaconvert:DescribeEndpoint' action",
        "prefix": "mediaconvert:DescribeEndpoint"
    },
    "mediaconvert:GetJob": {
        "body": "mediaconvert:GetJob",
        "description": "Add 'mediaconvert:GetJob' action",
        "prefix": "mediaconvert:GetJob"
    },
    "mediaconvert:GetJobTemplate": {
        "body": "mediaconvert:GetJobTemplate",
        "description": "Add 'mediaconvert:GetJobTemplate' action",
        "prefix": "mediaconvert:GetJobTemplate"
    },
    "mediaconvert:GetPreset": {
        "body": "mediaconvert:GetPreset",
        "description": "Add 'mediaconvert:GetPreset' action",
        "prefix": "mediaconvert:GetPreset"
    },
    "mediaconvert:GetQueue": {
        "body": "mediaconvert:GetQueue",
        "description": "Add 'mediaconvert:GetQueue' action",
        "prefix": "mediaconvert:GetQueue"
    },
    "mediaconvert:ListJobTemplates": {
        "body": "mediaconvert:ListJobTemplates",
        "description": "Add 'mediaconvert:ListJobTemplates' action",
        "prefix": "mediaconvert:ListJobTemplates"
    },
    "mediaconvert:ListJobs": {
        "body": "mediaconvert:ListJobs",
        "description": "Add 'mediaconvert:ListJobs' action",
        "prefix": "mediaconvert:ListJobs"
    },
    "mediaconvert:ListPresets": {
        "body": "mediaconvert:ListPresets",
        "description": "Add 'mediaconvert:ListPresets' action",
        "prefix": "mediaconvert:ListPresets"
    },
    "mediaconvert:ListQueues": {
        "body": "mediaconvert:ListQueues",
        "description": "Add 'mediaconvert:ListQueues' action",
        "prefix": "mediaconvert:ListQueues"
    },
    "mediaconvert:UpdateJobTemplate": {
        "body": "mediaconvert:UpdateJobTemplate",
        "description": "Add 'mediaconvert:UpdateJobTemplate' action",
        "prefix": "mediaconvert:UpdateJobTemplate"
    },
    "mediaconvert:UpdatePreset": {
        "body": "mediaconvert:UpdatePreset",
        "description": "Add 'mediaconvert:UpdatePreset' action",
        "prefix": "mediaconvert:UpdatePreset"
    },
    "mediaconvert:UpdateQueue": {
        "body": "mediaconvert:UpdateQueue",
        "description": "Add 'mediaconvert:UpdateQueue' action",
        "prefix": "mediaconvert:UpdateQueue"
    },
    "medialive:CreateChannel": {
        "body": "medialive:CreateChannel",
        "description": "Add 'medialive:CreateChannel' action",
        "prefix": "medialive:CreateChannel"
    },
    "medialive:CreateInput": {
        "body": "medialive:CreateInput",
        "description": "Add 'medialive:CreateInput' action",
        "prefix": "medialive:CreateInput"
    },
    "medialive:CreateInputSecurityGroup": {
        "body": "medialive:CreateInputSecurityGroup",
        "description": "Add 'medialive:CreateInputSecurityGroup' action",
        "prefix": "medialive:CreateInputSecurityGroup"
    },
    "medialive:DeleteChannel": {
        "body": "medialive:DeleteChannel",
        "description": "Add 'medialive:DeleteChannel' action",
        "prefix": "medialive:DeleteChannel"
    },
    "medialive:DeleteInput": {
        "body": "medialive:DeleteInput",
        "description": "Add 'medialive:DeleteInput' action",
        "prefix": "medialive:DeleteInput"
    },
    "medialive:DeleteInputSecurityGroup": {
        "body": "medialive:DeleteInputSecurityGroup",
        "description": "Add 'medialive:DeleteInputSecurityGroup' action",
        "prefix": "medialive:DeleteInputSecurityGroup"
    },
    "medialive:DescribeChannel": {
        "body": "medialive:DescribeChannel",
        "description": "Add 'medialive:DescribeChannel' action",
        "prefix": "medialive:DescribeChannel"
    },
    "medialive:DescribeInput": {
        "body": "medialive:DescribeInput",
        "description": "Add 'medialive:DescribeInput' action",
        "prefix": "medialive:DescribeInput"
    },
    "medialive:DescribeInputSecurityGroup": {
        "body": "medialive:DescribeInputSecurityGroup",
        "description": "Add 'medialive:DescribeInputSecurityGroup' action",
        "prefix": "medialive:DescribeInputSecurityGroup"
    },
    "medialive:ListChannels": {
        "body": "medialive:ListChannels",
        "description": "Add 'medialive:ListChannels' action",
        "prefix": "medialive:ListChannels"
    },
    "medialive:ListInputSecurityGroups": {
        "body": "medialive:ListInputSecurityGroups",
        "description": "Add 'medialive:ListInputSecurityGroups' action",
        "prefix": "medialive:ListInputSecurityGroups"
    },
    "medialive:ListInputs": {
        "body": "medialive:ListInputs",
        "description": "Add 'medialive:ListInputs' action",
        "prefix": "medialive:ListInputs"
    },
    "medialive:StartChannel": {
        "body": "medialive:StartChannel",
        "description": "Add 'medialive:StartChannel' action",
        "prefix": "medialive:StartChannel"
    },
    "medialive:StopChannel": {
        "body": "medialive:StopChannel",
        "description": "Add 'medialive:StopChannel' action",
        "prefix": "medialive:StopChannel"
    },
    "mediapackage:CreateChannel": {
        "body": "mediapackage:CreateChannel",
        "description": "Add 'mediapackage:CreateChannel' action",
        "prefix": "mediapackage:CreateChannel"
    },
    "mediapackage:CreateOriginEndpoint": {
        "body": "mediapackage:CreateOriginEndpoint",
        "description": "Add 'mediapackage:CreateOriginEndpoint' action",
        "prefix": "mediapackage:CreateOriginEndpoint"
    },
    "mediapackage:DeleteChannel": {
        "body": "mediapackage:DeleteChannel",
        "description": "Add 'mediapackage:DeleteChannel' action",
        "prefix": "mediapackage:DeleteChannel"
    },
    "mediapackage:DeleteOriginEndpoint": {
        "body": "mediapackage:DeleteOriginEndpoint",
        "description": "Add 'mediapackage:DeleteOriginEndpoint' action",
        "prefix": "mediapackage:DeleteOriginEndpoint"
    },
    "mediapackage:DescribeChannel": {
        "body": "mediapackage:DescribeChannel",
        "description": "Add 'mediapackage:DescribeChannel' action",
        "prefix": "mediapackage:DescribeChannel"
    },
    "mediapackage:DescribeOriginEndpoint": {
        "body": "mediapackage:DescribeOriginEndpoint",
        "description": "Add 'mediapackage:DescribeOriginEndpoint' action",
        "prefix": "mediapackage:DescribeOriginEndpoint"
    },
    "mediapackage:ListChannels": {
        "body": "mediapackage:ListChannels",
        "description": "Add 'mediapackage:ListChannels' action",
        "prefix": "mediapackage:ListChannels"
    },
    "mediapackage:ListOriginEndpoints": {
        "body": "mediapackage:ListOriginEndpoints",
        "description": "Add 'mediapackage:ListOriginEndpoints' action",
        "prefix": "mediapackage:ListOriginEndpoints"
    },
    "mediapackage:UpdateChannel": {
        "body": "mediapackage:UpdateChannel",
        "description": "Add 'mediapackage:UpdateChannel' action",
        "prefix": "mediapackage:UpdateChannel"
    },
    "mediapackage:UpdateOriginEndpoint": {
        "body": "mediapackage:UpdateOriginEndpoint",
        "description": "Add 'mediapackage:UpdateOriginEndpoint' action",
        "prefix": "mediapackage:UpdateOriginEndpoint"
    },
    "mediastore:CreateContainer": {
        "body": "mediastore:CreateContainer",
        "description": "Add 'mediastore:CreateContainer' action",
        "prefix": "mediastore:CreateContainer"
    },
    "mediastore:DeleteContainer": {
        "body": "mediastore:DeleteContainer",
        "description": "Add 'mediastore:DeleteContainer' action",
        "prefix": "mediastore:DeleteContainer"
    },
    "mediastore:DeleteContainerPolicy": {
        "body": "mediastore:DeleteContainerPolicy",
        "description": "Add 'mediastore:DeleteContainerPolicy' action",
        "prefix": "mediastore:DeleteContainerPolicy"
    },
    "mediastore:DeleteObject": {
        "body": "mediastore:DeleteObject",
        "description": "Add 'mediastore:DeleteObject' action",
        "prefix": "mediastore:DeleteObject"
    },
    "mediastore:DescribeContainer": {
        "body": "mediastore:DescribeContainer",
        "description": "Add 'mediastore:DescribeContainer' action",
        "prefix": "mediastore:DescribeContainer"
    },
    "mediastore:DescribeObject": {
        "body": "mediastore:DescribeObject",
        "description": "Add 'mediastore:DescribeObject' action",
        "prefix": "mediastore:DescribeObject"
    },
    "mediastore:GetContainerPolicy": {
        "body": "mediastore:GetContainerPolicy",
        "description": "Add 'mediastore:GetContainerPolicy' action",
        "prefix": "mediastore:GetContainerPolicy"
    },
    "mediastore:GetObject": {
        "body": "mediastore:GetObject",
        "description": "Add 'mediastore:GetObject' action",
        "prefix": "mediastore:GetObject"
    },
    "mediastore:ListContainers": {
        "body": "mediastore:ListContainers",
        "description": "Add 'mediastore:ListContainers' action",
        "prefix": "mediastore:ListContainers"
    },
    "mediastore:ListItems": {
        "body": "mediastore:ListItems",
        "description": "Add 'mediastore:ListItems' action",
        "prefix": "mediastore:ListItems"
    },
    "mediastore:PutContainerPolicy": {
        "body": "mediastore:PutContainerPolicy",
        "description": "Add 'mediastore:PutContainerPolicy' action",
        "prefix": "mediastore:PutContainerPolicy"
    },
    "mediastore:PutObject": {
        "body": "mediastore:PutObject",
        "description": "Add 'mediastore:PutObject' action",
        "prefix": "mediastore:PutObject"
    },
    "mgh:AssociateCreatedArtifact": {
        "body": "mgh:AssociateCreatedArtifact",
        "description": "Add 'mgh:AssociateCreatedArtifact' action",
        "prefix": "mgh:AssociateCreatedArtifact"
    },
    "mgh:AssociateDiscoveredResource": {
        "body": "mgh:AssociateDiscoveredResource",
        "description": "Add 'mgh:AssociateDiscoveredResource' action",
        "prefix": "mgh:AssociateDiscoveredResource"
    },
    "mgh:CreateProgressUpdateStream": {
        "body": "mgh:CreateProgressUpdateStream",
        "description": "Add 'mgh:CreateProgressUpdateStream' action",
        "prefix": "mgh:CreateProgressUpdateStream"
    },
    "mgh:DeleteProgressUpdateStream": {
        "body": "mgh:DeleteProgressUpdateStream",
        "description": "Add 'mgh:DeleteProgressUpdateStream' action",
        "prefix": "mgh:DeleteProgressUpdateStream"
    },
    "mgh:DescribeApplicationState": {
        "body": "mgh:DescribeApplicationState",
        "description": "Add 'mgh:DescribeApplicationState' action",
        "prefix": "mgh:DescribeApplicationState"
    },
    "mgh:DescribeMigrationTask": {
        "body": "mgh:DescribeMigrationTask",
        "description": "Add 'mgh:DescribeMigrationTask' action",
        "prefix": "mgh:DescribeMigrationTask"
    },
    "mgh:DisassociateCreatedArtifact": {
        "body": "mgh:DisassociateCreatedArtifact",
        "description": "Add 'mgh:DisassociateCreatedArtifact' action",
        "prefix": "mgh:DisassociateCreatedArtifact"
    },
    "mgh:DisassociateDiscoveredResource": {
        "body": "mgh:DisassociateDiscoveredResource",
        "description": "Add 'mgh:DisassociateDiscoveredResource' action",
        "prefix": "mgh:DisassociateDiscoveredResource"
    },
    "mgh:ImportMigrationTask": {
        "body": "mgh:ImportMigrationTask",
        "description": "Add 'mgh:ImportMigrationTask' action",
        "prefix": "mgh:ImportMigrationTask"
    },
    "mgh:ListCreatedArtifacts": {
        "body": "mgh:ListCreatedArtifacts",
        "description": "Add 'mgh:ListCreatedArtifacts' action",
        "prefix": "mgh:ListCreatedArtifacts"
    },
    "mgh:ListDiscoveredResources": {
        "body": "mgh:ListDiscoveredResources",
        "description": "Add 'mgh:ListDiscoveredResources' action",
        "prefix": "mgh:ListDiscoveredResources"
    },
    "mgh:ListMigrationTasks": {
        "body": "mgh:ListMigrationTasks",
        "description": "Add 'mgh:ListMigrationTasks' action",
        "prefix": "mgh:ListMigrationTasks"
    },
    "mgh:ListProgressUpdateStreams": {
        "body": "mgh:ListProgressUpdateStreams",
        "description": "Add 'mgh:ListProgressUpdateStreams' action",
        "prefix": "mgh:ListProgressUpdateStreams"
    },
    "mgh:NotifyApplicationState": {
        "body": "mgh:NotifyApplicationState",
        "description": "Add 'mgh:NotifyApplicationState' action",
        "prefix": "mgh:NotifyApplicationState"
    },
    "mgh:NotifyMigrationTaskState": {
        "body": "mgh:NotifyMigrationTaskState",
        "description": "Add 'mgh:NotifyMigrationTaskState' action",
        "prefix": "mgh:NotifyMigrationTaskState"
    },
    "mgh:PutResourceAttributes": {
        "body": "mgh:PutResourceAttributes",
        "description": "Add 'mgh:PutResourceAttributes' action",
        "prefix": "mgh:PutResourceAttributes"
    },
    "mobileanalytics:GetFinancialReports": {
        "body": "mobileanalytics:GetFinancialReports",
        "description": "Add 'mobileanalytics:GetFinancialReports' action",
        "prefix": "mobileanalytics:GetFinancialReports"
    },
    "mobileanalytics:GetReports": {
        "body": "mobileanalytics:GetReports",
        "description": "Add 'mobileanalytics:GetReports' action",
        "prefix": "mobileanalytics:GetReports"
    },
    "mobileanalytics:PutEvents": {
        "body": "mobileanalytics:PutEvents",
        "description": "Add 'mobileanalytics:PutEvents' action",
        "prefix": "mobileanalytics:PutEvents"
    },
    "mobilehub:CreateProject": {
        "body": "mobilehub:CreateProject",
        "description": "Add 'mobilehub:CreateProject' action",
        "prefix": "mobilehub:CreateProject"
    },
    "mobilehub:CreateServiceRole": {
        "body": "mobilehub:CreateServiceRole",
        "description": "Add 'mobilehub:CreateServiceRole' action",
        "prefix": "mobilehub:CreateServiceRole"
    },
    "mobilehub:DeleteProject": {
        "body": "mobilehub:DeleteProject",
        "description": "Add 'mobilehub:DeleteProject' action",
        "prefix": "mobilehub:DeleteProject"
    },
    "mobilehub:DeployToStage": {
        "body": "mobilehub:DeployToStage",
        "description": "Add 'mobilehub:DeployToStage' action",
        "prefix": "mobilehub:DeployToStage"
    },
    "mobilehub:DescribeBundle": {
        "body": "mobilehub:DescribeBundle",
        "description": "Add 'mobilehub:DescribeBundle' action",
        "prefix": "mobilehub:DescribeBundle"
    },
    "mobilehub:ExportBundle": {
        "body": "mobilehub:ExportBundle",
        "description": "Add 'mobilehub:ExportBundle' action",
        "prefix": "mobilehub:ExportBundle"
    },
    "mobilehub:ExportProject": {
        "body": "mobilehub:ExportProject",
        "description": "Add 'mobilehub:ExportProject' action",
        "prefix": "mobilehub:ExportProject"
    },
    "mobilehub:GenerateProjectParameters": {
        "body": "mobilehub:GenerateProjectParameters",
        "description": "Add 'mobilehub:GenerateProjectParameters' action",
        "prefix": "mobilehub:GenerateProjectParameters"
    },
    "mobilehub:GetProject": {
        "body": "mobilehub:GetProject",
        "description": "Add 'mobilehub:GetProject' action",
        "prefix": "mobilehub:GetProject"
    },
    "mobilehub:GetProjectSnapshot": {
        "body": "mobilehub:GetProjectSnapshot",
        "description": "Add 'mobilehub:GetProjectSnapshot' action",
        "prefix": "mobilehub:GetProjectSnapshot"
    },
    "mobilehub:ImportProject": {
        "body": "mobilehub:ImportProject",
        "description": "Add 'mobilehub:ImportProject' action",
        "prefix": "mobilehub:ImportProject"
    },
    "mobilehub:ListAvailableConnectors": {
        "body": "mobilehub:ListAvailableConnectors",
        "description": "Add 'mobilehub:ListAvailableConnectors' action",
        "prefix": "mobilehub:ListAvailableConnectors"
    },
    "mobilehub:ListAvailableFeatures": {
        "body": "mobilehub:ListAvailableFeatures",
        "description": "Add 'mobilehub:ListAvailableFeatures' action",
        "prefix": "mobilehub:ListAvailableFeatures"
    },
    "mobilehub:ListAvailableRegions": {
        "body": "mobilehub:ListAvailableRegions",
        "description": "Add 'mobilehub:ListAvailableRegions' action",
        "prefix": "mobilehub:ListAvailableRegions"
    },
    "mobilehub:ListBundles": {
        "body": "mobilehub:ListBundles",
        "description": "Add 'mobilehub:ListBundles' action",
        "prefix": "mobilehub:ListBundles"
    },
    "mobilehub:ListProjects": {
        "body": "mobilehub:ListProjects",
        "description": "Add 'mobilehub:ListProjects' action",
        "prefix": "mobilehub:ListProjects"
    },
    "mobilehub:SynchronizeProject": {
        "body": "mobilehub:SynchronizeProject",
        "description": "Add 'mobilehub:SynchronizeProject' action",
        "prefix": "mobilehub:SynchronizeProject"
    },
    "mobilehub:UpdateProject": {
        "body": "mobilehub:UpdateProject",
        "description": "Add 'mobilehub:UpdateProject' action",
        "prefix": "mobilehub:UpdateProject"
    },
    "mobilehub:VerifyServiceRole": {
        "body": "mobilehub:VerifyServiceRole",
        "description": "Add 'mobilehub:VerifyServiceRole' action",
        "prefix": "mobilehub:VerifyServiceRole"
    },
    "mobiletargeting:CreateCampaign": {
        "body": "mobiletargeting:CreateCampaign",
        "description": "Add 'mobiletargeting:CreateCampaign' action",
        "prefix": "mobiletargeting:CreateCampaign"
    },
    "mobiletargeting:CreateImportJob": {
        "body": "mobiletargeting:CreateImportJob",
        "description": "Add 'mobiletargeting:CreateImportJob' action",
        "prefix": "mobiletargeting:CreateImportJob"
    },
    "mobiletargeting:CreateSegment": {
        "body": "mobiletargeting:CreateSegment",
        "description": "Add 'mobiletargeting:CreateSegment' action",
        "prefix": "mobiletargeting:CreateSegment"
    },
    "mobiletargeting:DeleteApnsChannel": {
        "body": "mobiletargeting:DeleteApnsChannel",
        "description": "Add 'mobiletargeting:DeleteApnsChannel' action",
        "prefix": "mobiletargeting:DeleteApnsChannel"
    },
    "mobiletargeting:DeleteCampaign": {
        "body": "mobiletargeting:DeleteCampaign",
        "description": "Add 'mobiletargeting:DeleteCampaign' action",
        "prefix": "mobiletargeting:DeleteCampaign"
    },
    "mobiletargeting:DeleteGcmChannel": {
        "body": "mobiletargeting:DeleteGcmChannel",
        "description": "Add 'mobiletargeting:DeleteGcmChannel' action",
        "prefix": "mobiletargeting:DeleteGcmChannel"
    },
    "mobiletargeting:DeleteSegment": {
        "body": "mobiletargeting:DeleteSegment",
        "description": "Add 'mobiletargeting:DeleteSegment' action",
        "prefix": "mobiletargeting:DeleteSegment"
    },
    "mobiletargeting:GetApnsChannel": {
        "body": "mobiletargeting:GetApnsChannel",
        "description": "Add 'mobiletargeting:GetApnsChannel' action",
        "prefix": "mobiletargeting:GetApnsChannel"
    },
    "mobiletargeting:GetApplicationSettings": {
        "body": "mobiletargeting:GetApplicationSettings",
        "description": "Add 'mobiletargeting:GetApplicationSettings' action",
        "prefix": "mobiletargeting:GetApplicationSettings"
    },
    "mobiletargeting:GetCampaign": {
        "body": "mobiletargeting:GetCampaign",
        "description": "Add 'mobiletargeting:GetCampaign' action",
        "prefix": "mobiletargeting:GetCampaign"
    },
    "mobiletargeting:GetCampaignActivities": {
        "body": "mobiletargeting:GetCampaignActivities",
        "description": "Add 'mobiletargeting:GetCampaignActivities' action",
        "prefix": "mobiletargeting:GetCampaignActivities"
    },
    "mobiletargeting:GetCampaignVersion": {
        "body": "mobiletargeting:GetCampaignVersion",
        "description": "Add 'mobiletargeting:GetCampaignVersion' action",
        "prefix": "mobiletargeting:GetCampaignVersion"
    },
    "mobiletargeting:GetCampaignVersions": {
        "body": "mobiletargeting:GetCampaignVersions",
        "description": "Add 'mobiletargeting:GetCampaignVersions' action",
        "prefix": "mobiletargeting:GetCampaignVersions"
    },
    "mobiletargeting:GetCampaigns": {
        "body": "mobiletargeting:GetCampaigns",
        "description": "Add 'mobiletargeting:GetCampaigns' action",
        "prefix": "mobiletargeting:GetCampaigns"
    },
    "mobiletargeting:GetEndpoint": {
        "body": "mobiletargeting:GetEndpoint",
        "description": "Add 'mobiletargeting:GetEndpoint' action",
        "prefix": "mobiletargeting:GetEndpoint"
    },
    "mobiletargeting:GetGcmChannel": {
        "body": "mobiletargeting:GetGcmChannel",
        "description": "Add 'mobiletargeting:GetGcmChannel' action",
        "prefix": "mobiletargeting:GetGcmChannel"
    },
    "mobiletargeting:GetImportJob": {
        "body": "mobiletargeting:GetImportJob",
        "description": "Add 'mobiletargeting:GetImportJob' action",
        "prefix": "mobiletargeting:GetImportJob"
    },
    "mobiletargeting:GetImportJobs": {
        "body": "mobiletargeting:GetImportJobs",
        "description": "Add 'mobiletargeting:GetImportJobs' action",
        "prefix": "mobiletargeting:GetImportJobs"
    },
    "mobiletargeting:GetReports": {
        "body": "mobiletargeting:GetReports",
        "description": "Add 'mobiletargeting:GetReports' action",
        "prefix": "mobiletargeting:GetReports"
    },
    "mobiletargeting:GetSegment": {
        "body": "mobiletargeting:GetSegment",
        "description": "Add 'mobiletargeting:GetSegment' action",
        "prefix": "mobiletargeting:GetSegment"
    },
    "mobiletargeting:GetSegmentImportJobs": {
        "body": "mobiletargeting:GetSegmentImportJobs",
        "description": "Add 'mobiletargeting:GetSegmentImportJobs' action",
        "prefix": "mobiletargeting:GetSegmentImportJobs"
    },
    "mobiletargeting:GetSegmentVersion": {
        "body": "mobiletargeting:GetSegmentVersion",
        "description": "Add 'mobiletargeting:GetSegmentVersion' action",
        "prefix": "mobiletargeting:GetSegmentVersion"
    },
    "mobiletargeting:GetSegmentVersions": {
        "body": "mobiletargeting:GetSegmentVersions",
        "description": "Add 'mobiletargeting:GetSegmentVersions' action",
        "prefix": "mobiletargeting:GetSegmentVersions"
    },
    "mobiletargeting:GetSegments": {
        "body": "mobiletargeting:GetSegments",
        "description": "Add 'mobiletargeting:GetSegments' action",
        "prefix": "mobiletargeting:GetSegments"
    },
    "mobiletargeting:UpdateApnsChannel": {
        "body": "mobiletargeting:UpdateApnsChannel",
        "description": "Add 'mobiletargeting:UpdateApnsChannel' action",
        "prefix": "mobiletargeting:UpdateApnsChannel"
    },
    "mobiletargeting:UpdateApplicationSettings": {
        "body": "mobiletargeting:UpdateApplicationSettings",
        "description": "Add 'mobiletargeting:UpdateApplicationSettings' action",
        "prefix": "mobiletargeting:UpdateApplicationSettings"
    },
    "mobiletargeting:UpdateCampaign": {
        "body": "mobiletargeting:UpdateCampaign",
        "description": "Add 'mobiletargeting:UpdateCampaign' action",
        "prefix": "mobiletargeting:UpdateCampaign"
    },
    "mobiletargeting:UpdateEndpoint": {
        "body": "mobiletargeting:UpdateEndpoint",
        "description": "Add 'mobiletargeting:UpdateEndpoint' action",
        "prefix": "mobiletargeting:UpdateEndpoint"
    },
    "mobiletargeting:UpdateEndpointsBatch": {
        "body": "mobiletargeting:UpdateEndpointsBatch",
        "description": "Add 'mobiletargeting:UpdateEndpointsBatch' action",
        "prefix": "mobiletargeting:UpdateEndpointsBatch"
    },
    "mobiletargeting:UpdateGcmChannel": {
        "body": "mobiletargeting:UpdateGcmChannel",
        "description": "Add 'mobiletargeting:UpdateGcmChannel' action",
        "prefix": "mobiletargeting:UpdateGcmChannel"
    },
    "mobiletargeting:UpdateSegment": {
        "body": "mobiletargeting:UpdateSegment",
        "description": "Add 'mobiletargeting:UpdateSegment' action",
        "prefix": "mobiletargeting:UpdateSegment"
    },
    "mq:CreateBroker": {
        "body": "mq:CreateBroker",
        "description": "Add 'mq:CreateBroker' action",
        "prefix": "mq:CreateBroker"
    },
    "mq:CreateConfiguration": {
        "body": "mq:CreateConfiguration",
        "description": "Add 'mq:CreateConfiguration' action",
        "prefix": "mq:CreateConfiguration"
    },
    "mq:CreateUser": {
        "body": "mq:CreateUser",
        "description": "Add 'mq:CreateUser' action",
        "prefix": "mq:CreateUser"
    },
    "mq:DeleteBroker": {
        "body": "mq:DeleteBroker",
        "description": "Add 'mq:DeleteBroker' action",
        "prefix": "mq:DeleteBroker"
    },
    "mq:DeleteUser": {
        "body": "mq:DeleteUser",
        "description": "Add 'mq:DeleteUser' action",
        "prefix": "mq:DeleteUser"
    },
    "mq:DescribeBroker": {
        "body": "mq:DescribeBroker",
        "description": "Add 'mq:DescribeBroker' action",
        "prefix": "mq:DescribeBroker"
    },
    "mq:DescribeConfiguration": {
        "body": "mq:DescribeConfiguration",
        "description": "Add 'mq:DescribeConfiguration' action",
        "prefix": "mq:DescribeConfiguration"
    },
    "mq:DescribeConfigurationRevision": {
        "body": "mq:DescribeConfigurationRevision",
        "description": "Add 'mq:DescribeConfigurationRevision' action",
        "prefix": "mq:DescribeConfigurationRevision"
    },
    "mq:DescribeUser": {
        "body": "mq:DescribeUser",
        "description": "Add 'mq:DescribeUser' action",
        "prefix": "mq:DescribeUser"
    },
    "mq:ListBrokers": {
        "body": "mq:ListBrokers",
        "description": "Add 'mq:ListBrokers' action",
        "prefix": "mq:ListBrokers"
    },
    "mq:ListConfigurationRevisions": {
        "body": "mq:ListConfigurationRevisions",
        "description": "Add 'mq:ListConfigurationRevisions' action",
        "prefix": "mq:ListConfigurationRevisions"
    },
    "mq:ListConfigurations": {
        "body": "mq:ListConfigurations",
        "description": "Add 'mq:ListConfigurations' action",
        "prefix": "mq:ListConfigurations"
    },
    "mq:ListUsers": {
        "body": "mq:ListUsers",
        "description": "Add 'mq:ListUsers' action",
        "prefix": "mq:ListUsers"
    },
    "mq:RebootBroker": {
        "body": "mq:RebootBroker",
        "description": "Add 'mq:RebootBroker' action",
        "prefix": "mq:RebootBroker"
    },
    "mq:UpdateBroker": {
        "body": "mq:UpdateBroker",
        "description": "Add 'mq:UpdateBroker' action",
        "prefix": "mq:UpdateBroker"
    },
    "mq:UpdateConfiguration": {
        "body": "mq:UpdateConfiguration",
        "description": "Add 'mq:UpdateConfiguration' action",
        "prefix": "mq:UpdateConfiguration"
    },
    "mq:UpdateUser": {
        "body": "mq:UpdateUser",
        "description": "Add 'mq:UpdateUser' action",
        "prefix": "mq:UpdateUser"
    },
    "opsworks-cm:AssociateNode": {
        "body": "opsworks-cm:AssociateNode",
        "description": "Add 'opsworks-cm:AssociateNode' action",
        "prefix": "opsworks-cm:AssociateNode"
    },
    "opsworks-cm:CreateBackup": {
        "body": "opsworks-cm:CreateBackup",
        "description": "Add 'opsworks-cm:CreateBackup' action",
        "prefix": "opsworks-cm:CreateBackup"
    },
    "opsworks-cm:CreateServer": {
        "body": "opsworks-cm:CreateServer",
        "description": "Add 'opsworks-cm:CreateServer' action",
        "prefix": "opsworks-cm:CreateServer"
    },
    "opsworks-cm:DeleteBackup": {
        "body": "opsworks-cm:DeleteBackup",
        "description": "Add 'opsworks-cm:DeleteBackup' action",
        "prefix": "opsworks-cm:DeleteBackup"
    },
    "opsworks-cm:DeleteServer": {
        "body": "opsworks-cm:DeleteServer",
        "description": "Add 'opsworks-cm:DeleteServer' action",
        "prefix": "opsworks-cm:DeleteServer"
    },
    "opsworks-cm:DescribeAccountAttributes": {
        "body": "opsworks-cm:DescribeAccountAttributes",
        "description": "Add 'opsworks-cm:DescribeAccountAttributes' action",
        "prefix": "opsworks-cm:DescribeAccountAttributes"
    },
    "opsworks-cm:DescribeBackups": {
        "body": "opsworks-cm:DescribeBackups",
        "description": "Add 'opsworks-cm:DescribeBackups' action",
        "prefix": "opsworks-cm:DescribeBackups"
    },
    "opsworks-cm:DescribeEvents": {
        "body": "opsworks-cm:DescribeEvents",
        "description": "Add 'opsworks-cm:DescribeEvents' action",
        "prefix": "opsworks-cm:DescribeEvents"
    },
    "opsworks-cm:DescribeNodeAssociationStatus": {
        "body": "opsworks-cm:DescribeNodeAssociationStatus",
        "description": "Add 'opsworks-cm:DescribeNodeAssociationStatus' action",
        "prefix": "opsworks-cm:DescribeNodeAssociationStatus"
    },
    "opsworks-cm:DescribeServers": {
        "body": "opsworks-cm:DescribeServers",
        "description": "Add 'opsworks-cm:DescribeServers' action",
        "prefix": "opsworks-cm:DescribeServers"
    },
    "opsworks-cm:DisassociateNode": {
        "body": "opsworks-cm:DisassociateNode",
        "description": "Add 'opsworks-cm:DisassociateNode' action",
        "prefix": "opsworks-cm:DisassociateNode"
    },
    "opsworks-cm:RestoreServer": {
        "body": "opsworks-cm:RestoreServer",
        "description": "Add 'opsworks-cm:RestoreServer' action",
        "prefix": "opsworks-cm:RestoreServer"
    },
    "opsworks-cm:StartMaintenance": {
        "body": "opsworks-cm:StartMaintenance",
        "description": "Add 'opsworks-cm:StartMaintenance' action",
        "prefix": "opsworks-cm:StartMaintenance"
    },
    "opsworks-cm:UpdateServer": {
        "body": "opsworks-cm:UpdateServer",
        "description": "Add 'opsworks-cm:UpdateServer' action",
        "prefix": "opsworks-cm:UpdateServer"
    },
    "opsworks-cm:UpdateServerEngineAttributes": {
        "body": "opsworks-cm:UpdateServerEngineAttributes",
        "description": "Add 'opsworks-cm:UpdateServerEngineAttributes' action",
        "prefix": "opsworks-cm:UpdateServerEngineAttributes"
    },
    "opsworks:AssignInstance": {
        "body": "opsworks:AssignInstance",
        "description": "Add 'opsworks:AssignInstance' action",
        "prefix": "opsworks:AssignInstance"
    },
    "opsworks:AssignVolume": {
        "body": "opsworks:AssignVolume",
        "description": "Add 'opsworks:AssignVolume' action",
        "prefix": "opsworks:AssignVolume"
    },
    "opsworks:AssociateElasticIp": {
        "body": "opsworks:AssociateElasticIp",
        "description": "Add 'opsworks:AssociateElasticIp' action",
        "prefix": "opsworks:AssociateElasticIp"
    },
    "opsworks:AttachElasticLoadBalancer": {
        "body": "opsworks:AttachElasticLoadBalancer",
        "description": "Add 'opsworks:AttachElasticLoadBalancer' action",
        "prefix": "opsworks:AttachElasticLoadBalancer"
    },
    "opsworks:CloneStack": {
        "body": "opsworks:CloneStack",
        "description": "Add 'opsworks:CloneStack' action",
        "prefix": "opsworks:CloneStack"
    },
    "opsworks:CreateApp": {
        "body": "opsworks:CreateApp",
        "description": "Add 'opsworks:CreateApp' action",
        "prefix": "opsworks:CreateApp"
    },
    "opsworks:CreateDeployment": {
        "body": "opsworks:CreateDeployment",
        "description": "Add 'opsworks:CreateDeployment' action",
        "prefix": "opsworks:CreateDeployment"
    },
    "opsworks:CreateInstance": {
        "body": "opsworks:CreateInstance",
        "description": "Add 'opsworks:CreateInstance' action",
        "prefix": "opsworks:CreateInstance"
    },
    "opsworks:CreateLayer": {
        "body": "opsworks:CreateLayer",
        "description": "Add 'opsworks:CreateLayer' action",
        "prefix": "opsworks:CreateLayer"
    },
    "opsworks:CreateStack": {
        "body": "opsworks:CreateStack",
        "description": "Add 'opsworks:CreateStack' action",
        "prefix": "opsworks:CreateStack"
    },
    "opsworks:CreateUserProfile": {
        "body": "opsworks:CreateUserProfile",
        "description": "Add 'opsworks:CreateUserProfile' action",
        "prefix": "opsworks:CreateUserProfile"
    },
    "opsworks:DeleteApp": {
        "body": "opsworks:DeleteApp",
        "description": "Add 'opsworks:DeleteApp' action",
        "prefix": "opsworks:DeleteApp"
    },
    "opsworks:DeleteInstance": {
        "body": "opsworks:DeleteInstance",
        "description": "Add 'opsworks:DeleteInstance' action",
        "prefix": "opsworks:DeleteInstance"
    },
    "opsworks:DeleteLayer": {
        "body": "opsworks:DeleteLayer",
        "description": "Add 'opsworks:DeleteLayer' action",
        "prefix": "opsworks:DeleteLayer"
    },
    "opsworks:DeleteStack": {
        "body": "opsworks:DeleteStack",
        "description": "Add 'opsworks:DeleteStack' action",
        "prefix": "opsworks:DeleteStack"
    },
    "opsworks:DeleteUserProfile": {
        "body": "opsworks:DeleteUserProfile",
        "description": "Add 'opsworks:DeleteUserProfile' action",
        "prefix": "opsworks:DeleteUserProfile"
    },
    "opsworks:DeregisterEcsCluster": {
        "body": "opsworks:DeregisterEcsCluster",
        "description": "Add 'opsworks:DeregisterEcsCluster' action",
        "prefix": "opsworks:DeregisterEcsCluster"
    },
    "opsworks:DeregisterElasticIp": {
        "body": "opsworks:DeregisterElasticIp",
        "description": "Add 'opsworks:DeregisterElasticIp' action",
        "prefix": "opsworks:DeregisterElasticIp"
    },
    "opsworks:DeregisterInstance": {
        "body": "opsworks:DeregisterInstance",
        "description": "Add 'opsworks:DeregisterInstance' action",
        "prefix": "opsworks:DeregisterInstance"
    },
    "opsworks:DeregisterRdsDbInstance": {
        "body": "opsworks:DeregisterRdsDbInstance",
        "description": "Add 'opsworks:DeregisterRdsDbInstance' action",
        "prefix": "opsworks:DeregisterRdsDbInstance"
    },
    "opsworks:DeregisterVolume": {
        "body": "opsworks:DeregisterVolume",
        "description": "Add 'opsworks:DeregisterVolume' action",
        "prefix": "opsworks:DeregisterVolume"
    },
    "opsworks:DescribeAgentVersions": {
        "body": "opsworks:DescribeAgentVersions",
        "description": "Add 'opsworks:DescribeAgentVersions' action",
        "prefix": "opsworks:DescribeAgentVersions"
    },
    "opsworks:DescribeApps": {
        "body": "opsworks:DescribeApps",
        "description": "Add 'opsworks:DescribeApps' action",
        "prefix": "opsworks:DescribeApps"
    },
    "opsworks:DescribeCommands": {
        "body": "opsworks:DescribeCommands",
        "description": "Add 'opsworks:DescribeCommands' action",
        "prefix": "opsworks:DescribeCommands"
    },
    "opsworks:DescribeDeployments": {
        "body": "opsworks:DescribeDeployments",
        "description": "Add 'opsworks:DescribeDeployments' action",
        "prefix": "opsworks:DescribeDeployments"
    },
    "opsworks:DescribeEcsClusters": {
        "body": "opsworks:DescribeEcsClusters",
        "description": "Add 'opsworks:DescribeEcsClusters' action",
        "prefix": "opsworks:DescribeEcsClusters"
    },
    "opsworks:DescribeElasticIps": {
        "body": "opsworks:DescribeElasticIps",
        "description": "Add 'opsworks:DescribeElasticIps' action",
        "prefix": "opsworks:DescribeElasticIps"
    },
    "opsworks:DescribeElasticLoadBalancers": {
        "body": "opsworks:DescribeElasticLoadBalancers",
        "description": "Add 'opsworks:DescribeElasticLoadBalancers' action",
        "prefix": "opsworks:DescribeElasticLoadBalancers"
    },
    "opsworks:DescribeInstances": {
        "body": "opsworks:DescribeInstances",
        "description": "Add 'opsworks:DescribeInstances' action",
        "prefix": "opsworks:DescribeInstances"
    },
    "opsworks:DescribeLayers": {
        "body": "opsworks:DescribeLayers",
        "description": "Add 'opsworks:DescribeLayers' action",
        "prefix": "opsworks:DescribeLayers"
    },
    "opsworks:DescribeLoadBasedAutoScaling": {
        "body": "opsworks:DescribeLoadBasedAutoScaling",
        "description": "Add 'opsworks:DescribeLoadBasedAutoScaling' action",
        "prefix": "opsworks:DescribeLoadBasedAutoScaling"
    },
    "opsworks:DescribeMyUserProfile": {
        "body": "opsworks:DescribeMyUserProfile",
        "description": "Add 'opsworks:DescribeMyUserProfile' action",
        "prefix": "opsworks:DescribeMyUserProfile"
    },
    "opsworks:DescribePermissions": {
        "body": "opsworks:DescribePermissions",
        "description": "Add 'opsworks:DescribePermissions' action",
        "prefix": "opsworks:DescribePermissions"
    },
    "opsworks:DescribeRaidArrays": {
        "body": "opsworks:DescribeRaidArrays",
        "description": "Add 'opsworks:DescribeRaidArrays' action",
        "prefix": "opsworks:DescribeRaidArrays"
    },
    "opsworks:DescribeRdsDbInstances": {
        "body": "opsworks:DescribeRdsDbInstances",
        "description": "Add 'opsworks:DescribeRdsDbInstances' action",
        "prefix": "opsworks:DescribeRdsDbInstances"
    },
    "opsworks:DescribeServiceErrors": {
        "body": "opsworks:DescribeServiceErrors",
        "description": "Add 'opsworks:DescribeServiceErrors' action",
        "prefix": "opsworks:DescribeServiceErrors"
    },
    "opsworks:DescribeStackProvisioningParameters": {
        "body": "opsworks:DescribeStackProvisioningParameters",
        "description": "Add 'opsworks:DescribeStackProvisioningParameters' action",
        "prefix": "opsworks:DescribeStackProvisioningParameters"
    },
    "opsworks:DescribeStackSummary": {
        "body": "opsworks:DescribeStackSummary",
        "description": "Add 'opsworks:DescribeStackSummary' action",
        "prefix": "opsworks:DescribeStackSummary"
    },
    "opsworks:DescribeStacks": {
        "body": "opsworks:DescribeStacks",
        "description": "Add 'opsworks:DescribeStacks' action",
        "prefix": "opsworks:DescribeStacks"
    },
    "opsworks:DescribeTimeBasedAutoScaling": {
        "body": "opsworks:DescribeTimeBasedAutoScaling",
        "description": "Add 'opsworks:DescribeTimeBasedAutoScaling' action",
        "prefix": "opsworks:DescribeTimeBasedAutoScaling"
    },
    "opsworks:DescribeUserProfiles": {
        "body": "opsworks:DescribeUserProfiles",
        "description": "Add 'opsworks:DescribeUserProfiles' action",
        "prefix": "opsworks:DescribeUserProfiles"
    },
    "opsworks:DescribeVolumes": {
        "body": "opsworks:DescribeVolumes",
        "description": "Add 'opsworks:DescribeVolumes' action",
        "prefix": "opsworks:DescribeVolumes"
    },
    "opsworks:DetachElasticLoadBalancer": {
        "body": "opsworks:DetachElasticLoadBalancer",
        "description": "Add 'opsworks:DetachElasticLoadBalancer' action",
        "prefix": "opsworks:DetachElasticLoadBalancer"
    },
    "opsworks:DisassociateElasticIp": {
        "body": "opsworks:DisassociateElasticIp",
        "description": "Add 'opsworks:DisassociateElasticIp' action",
        "prefix": "opsworks:DisassociateElasticIp"
    },
    "opsworks:GetHostnameSuggestion": {
        "body": "opsworks:GetHostnameSuggestion",
        "description": "Add 'opsworks:GetHostnameSuggestion' action",
        "prefix": "opsworks:GetHostnameSuggestion"
    },
    "opsworks:GrantAccess": {
        "body": "opsworks:GrantAccess",
        "description": "Add 'opsworks:GrantAccess' action",
        "prefix": "opsworks:GrantAccess"
    },
    "opsworks:ListTags": {
        "body": "opsworks:ListTags",
        "description": "Add 'opsworks:ListTags' action",
        "prefix": "opsworks:ListTags"
    },
    "opsworks:RebootInstance": {
        "body": "opsworks:RebootInstance",
        "description": "Add 'opsworks:RebootInstance' action",
        "prefix": "opsworks:RebootInstance"
    },
    "opsworks:RegisterEcsCluster": {
        "body": "opsworks:RegisterEcsCluster",
        "description": "Add 'opsworks:RegisterEcsCluster' action",
        "prefix": "opsworks:RegisterEcsCluster"
    },
    "opsworks:RegisterElasticIp": {
        "body": "opsworks:RegisterElasticIp",
        "description": "Add 'opsworks:RegisterElasticIp' action",
        "prefix": "opsworks:RegisterElasticIp"
    },
    "opsworks:RegisterInstance": {
        "body": "opsworks:RegisterInstance",
        "description": "Add 'opsworks:RegisterInstance' action",
        "prefix": "opsworks:RegisterInstance"
    },
    "opsworks:RegisterRdsDbInstance": {
        "body": "opsworks:RegisterRdsDbInstance",
        "description": "Add 'opsworks:RegisterRdsDbInstance' action",
        "prefix": "opsworks:RegisterRdsDbInstance"
    },
    "opsworks:RegisterVolume": {
        "body": "opsworks:RegisterVolume",
        "description": "Add 'opsworks:RegisterVolume' action",
        "prefix": "opsworks:RegisterVolume"
    },
    "opsworks:SetLoadBasedAutoScaling": {
        "body": "opsworks:SetLoadBasedAutoScaling",
        "description": "Add 'opsworks:SetLoadBasedAutoScaling' action",
        "prefix": "opsworks:SetLoadBasedAutoScaling"
    },
    "opsworks:SetPermission": {
        "body": "opsworks:SetPermission",
        "description": "Add 'opsworks:SetPermission' action",
        "prefix": "opsworks:SetPermission"
    },
    "opsworks:SetTimeBasedAutoScaling": {
        "body": "opsworks:SetTimeBasedAutoScaling",
        "description": "Add 'opsworks:SetTimeBasedAutoScaling' action",
        "prefix": "opsworks:SetTimeBasedAutoScaling"
    },
    "opsworks:StartInstance": {
        "body": "opsworks:StartInstance",
        "description": "Add 'opsworks:StartInstance' action",
        "prefix": "opsworks:StartInstance"
    },
    "opsworks:StartStack": {
        "body": "opsworks:StartStack",
        "description": "Add 'opsworks:StartStack' action",
        "prefix": "opsworks:StartStack"
    },
    "opsworks:StopInstance": {
        "body": "opsworks:StopInstance",
        "description": "Add 'opsworks:StopInstance' action",
        "prefix": "opsworks:StopInstance"
    },
    "opsworks:StopStack": {
        "body": "opsworks:StopStack",
        "description": "Add 'opsworks:StopStack' action",
        "prefix": "opsworks:StopStack"
    },
    "opsworks:TagResource": {
        "body": "opsworks:TagResource",
        "description": "Add 'opsworks:TagResource' action",
        "prefix": "opsworks:TagResource"
    },
    "opsworks:UnassignInstance": {
        "body": "opsworks:UnassignInstance",
        "description": "Add 'opsworks:UnassignInstance' action",
        "prefix": "opsworks:UnassignInstance"
    },
    "opsworks:UnassignVolume": {
        "body": "opsworks:UnassignVolume",
        "description": "Add 'opsworks:UnassignVolume' action",
        "prefix": "opsworks:UnassignVolume"
    },
    "opsworks:UntagResource": {
        "body": "opsworks:UntagResource",
        "description": "Add 'opsworks:UntagResource' action",
        "prefix": "opsworks:UntagResource"
    },
    "opsworks:UpdateApp": {
        "body": "opsworks:UpdateApp",
        "description": "Add 'opsworks:UpdateApp' action",
        "prefix": "opsworks:UpdateApp"
    },
    "opsworks:UpdateElasticIp": {
        "body": "opsworks:UpdateElasticIp",
        "description": "Add 'opsworks:UpdateElasticIp' action",
        "prefix": "opsworks:UpdateElasticIp"
    },
    "opsworks:UpdateInstance": {
        "body": "opsworks:UpdateInstance",
        "description": "Add 'opsworks:UpdateInstance' action",
        "prefix": "opsworks:UpdateInstance"
    },
    "opsworks:UpdateLayer": {
        "body": "opsworks:UpdateLayer",
        "description": "Add 'opsworks:UpdateLayer' action",
        "prefix": "opsworks:UpdateLayer"
    },
    "opsworks:UpdateMyUserProfile": {
        "body": "opsworks:UpdateMyUserProfile",
        "description": "Add 'opsworks:UpdateMyUserProfile' action",
        "prefix": "opsworks:UpdateMyUserProfile"
    },
    "opsworks:UpdateRdsDbInstance": {
        "body": "opsworks:UpdateRdsDbInstance",
        "description": "Add 'opsworks:UpdateRdsDbInstance' action",
        "prefix": "opsworks:UpdateRdsDbInstance"
    },
    "opsworks:UpdateStack": {
        "body": "opsworks:UpdateStack",
        "description": "Add 'opsworks:UpdateStack' action",
        "prefix": "opsworks:UpdateStack"
    },
    "opsworks:UpdateUserProfile": {
        "body": "opsworks:UpdateUserProfile",
        "description": "Add 'opsworks:UpdateUserProfile' action",
        "prefix": "opsworks:UpdateUserProfile"
    },
    "opsworks:UpdateVolume": {
        "body": "opsworks:UpdateVolume",
        "description": "Add 'opsworks:UpdateVolume' action",
        "prefix": "opsworks:UpdateVolume"
    },
    "organizations:AcceptHandshake": {
        "body": "organizations:AcceptHandshake",
        "description": "Add 'organizations:AcceptHandshake' action",
        "prefix": "organizations:AcceptHandshake"
    },
    "organizations:AttachPolicy": {
        "body": "organizations:AttachPolicy",
        "description": "Add 'organizations:AttachPolicy' action",
        "prefix": "organizations:AttachPolicy"
    },
    "organizations:CancelHandshake": {
        "body": "organizations:CancelHandshake",
        "description": "Add 'organizations:CancelHandshake' action",
        "prefix": "organizations:CancelHandshake"
    },
    "organizations:CreateAccount": {
        "body": "organizations:CreateAccount",
        "description": "Add 'organizations:CreateAccount' action",
        "prefix": "organizations:CreateAccount"
    },
    "organizations:CreateOrganization": {
        "body": "organizations:CreateOrganization",
        "description": "Add 'organizations:CreateOrganization' action",
        "prefix": "organizations:CreateOrganization"
    },
    "organizations:CreateOrganizationalUnit": {
        "body": "organizations:CreateOrganizationalUnit",
        "description": "Add 'organizations:CreateOrganizationalUnit' action",
        "prefix": "organizations:CreateOrganizationalUnit"
    },
    "organizations:CreatePolicy": {
        "body": "organizations:CreatePolicy",
        "description": "Add 'organizations:CreatePolicy' action",
        "prefix": "organizations:CreatePolicy"
    },
    "organizations:DeclineHandshake": {
        "body": "organizations:DeclineHandshake",
        "description": "Add 'organizations:DeclineHandshake' action",
        "prefix": "organizations:DeclineHandshake"
    },
    "organizations:DeleteOrganization": {
        "body": "organizations:DeleteOrganization",
        "description": "Add 'organizations:DeleteOrganization' action",
        "prefix": "organizations:DeleteOrganization"
    },
    "organizations:DeleteOrganizationalUnit": {
        "body": "organizations:DeleteOrganizationalUnit",
        "description": "Add 'organizations:DeleteOrganizationalUnit' action",
        "prefix": "organizations:DeleteOrganizationalUnit"
    },
    "organizations:DeletePolicy": {
        "body": "organizations:DeletePolicy",
        "description": "Add 'organizations:DeletePolicy' action",
        "prefix": "organizations:DeletePolicy"
    },
    "organizations:DescribeAccount": {
        "body": "organizations:DescribeAccount",
        "description": "Add 'organizations:DescribeAccount' action",
        "prefix": "organizations:DescribeAccount"
    },
    "organizations:DescribeCreateAccountStatus": {
        "body": "organizations:DescribeCreateAccountStatus",
        "description": "Add 'organizations:DescribeCreateAccountStatus' action",
        "prefix": "organizations:DescribeCreateAccountStatus"
    },
    "organizations:DescribeHandshake": {
        "body": "organizations:DescribeHandshake",
        "description": "Add 'organizations:DescribeHandshake' action",
        "prefix": "organizations:DescribeHandshake"
    },
    "organizations:DescribeOrganization": {
        "body": "organizations:DescribeOrganization",
        "description": "Add 'organizations:DescribeOrganization' action",
        "prefix": "organizations:DescribeOrganization"
    },
    "organizations:DescribeOrganizationalUnit": {
        "body": "organizations:DescribeOrganizationalUnit",
        "description": "Add 'organizations:DescribeOrganizationalUnit' action",
        "prefix": "organizations:DescribeOrganizationalUnit"
    },
    "organizations:DescribePolicy": {
        "body": "organizations:DescribePolicy",
        "description": "Add 'organizations:DescribePolicy' action",
        "prefix": "organizations:DescribePolicy"
    },
    "organizations:DetachPolicy": {
        "body": "organizations:DetachPolicy",
        "description": "Add 'organizations:DetachPolicy' action",
        "prefix": "organizations:DetachPolicy"
    },
    "organizations:DisablePolicyType": {
        "body": "organizations:DisablePolicyType",
        "description": "Add 'organizations:DisablePolicyType' action",
        "prefix": "organizations:DisablePolicyType"
    },
    "organizations:EnableAllFeatures": {
        "body": "organizations:EnableAllFeatures",
        "description": "Add 'organizations:EnableAllFeatures' action",
        "prefix": "organizations:EnableAllFeatures"
    },
    "organizations:EnablePolicyType": {
        "body": "organizations:EnablePolicyType",
        "description": "Add 'organizations:EnablePolicyType' action",
        "prefix": "organizations:EnablePolicyType"
    },
    "organizations:InviteAccountToOrganization": {
        "body": "organizations:InviteAccountToOrganization",
        "description": "Add 'organizations:InviteAccountToOrganization' action",
        "prefix": "organizations:InviteAccountToOrganization"
    },
    "organizations:LeaveOrganization": {
        "body": "organizations:LeaveOrganization",
        "description": "Add 'organizations:LeaveOrganization' action",
        "prefix": "organizations:LeaveOrganization"
    },
    "organizations:ListAccounts": {
        "body": "organizations:ListAccounts",
        "description": "Add 'organizations:ListAccounts' action",
        "prefix": "organizations:ListAccounts"
    },
    "organizations:ListAccountsForParent": {
        "body": "organizations:ListAccountsForParent",
        "description": "Add 'organizations:ListAccountsForParent' action",
        "prefix": "organizations:ListAccountsForParent"
    },
    "organizations:ListChildren": {
        "body": "organizations:ListChildren",
        "description": "Add 'organizations:ListChildren' action",
        "prefix": "organizations:ListChildren"
    },
    "organizations:ListCreateAccountStatus": {
        "body": "organizations:ListCreateAccountStatus",
        "description": "Add 'organizations:ListCreateAccountStatus' action",
        "prefix": "organizations:ListCreateAccountStatus"
    },
    "organizations:ListHandshakesForAccount": {
        "body": "organizations:ListHandshakesForAccount",
        "description": "Add 'organizations:ListHandshakesForAccount' action",
        "prefix": "organizations:ListHandshakesForAccount"
    },
    "organizations:ListHandshakesForOrganization": {
        "body": "organizations:ListHandshakesForOrganization",
        "description": "Add 'organizations:ListHandshakesForOrganization' action",
        "prefix": "organizations:ListHandshakesForOrganization"
    },
    "organizations:ListOrganizationalUnitsForParent": {
        "body": "organizations:ListOrganizationalUnitsForParent",
        "description": "Add 'organizations:ListOrganizationalUnitsForParent' action",
        "prefix": "organizations:ListOrganizationalUnitsForParent"
    },
    "organizations:ListParents": {
        "body": "organizations:ListParents",
        "description": "Add 'organizations:ListParents' action",
        "prefix": "organizations:ListParents"
    },
    "organizations:ListPolicies": {
        "body": "organizations:ListPolicies",
        "description": "Add 'organizations:ListPolicies' action",
        "prefix": "organizations:ListPolicies"
    },
    "organizations:ListPoliciesForTarget": {
        "body": "organizations:ListPoliciesForTarget",
        "description": "Add 'organizations:ListPoliciesForTarget' action",
        "prefix": "organizations:ListPoliciesForTarget"
    },
    "organizations:ListRoots": {
        "body": "organizations:ListRoots",
        "description": "Add 'organizations:ListRoots' action",
        "prefix": "organizations:ListRoots"
    },
    "organizations:ListTargetsForPolicy": {
        "body": "organizations:ListTargetsForPolicy",
        "description": "Add 'organizations:ListTargetsForPolicy' action",
        "prefix": "organizations:ListTargetsForPolicy"
    },
    "organizations:MoveAccount": {
        "body": "organizations:MoveAccount",
        "description": "Add 'organizations:MoveAccount' action",
        "prefix": "organizations:MoveAccount"
    },
    "organizations:RemoveAccountFromOrganization": {
        "body": "organizations:RemoveAccountFromOrganization",
        "description": "Add 'organizations:RemoveAccountFromOrganization' action",
        "prefix": "organizations:RemoveAccountFromOrganization"
    },
    "organizations:UpdateOrganizationalUnit": {
        "body": "organizations:UpdateOrganizationalUnit",
        "description": "Add 'organizations:UpdateOrganizationalUnit' action",
        "prefix": "organizations:UpdateOrganizationalUnit"
    },
    "organizations:UpdatePolicy": {
        "body": "organizations:UpdatePolicy",
        "description": "Add 'organizations:UpdatePolicy' action",
        "prefix": "organizations:UpdatePolicy"
    },
    "polly:DeleteLexicon": {
        "body": "polly:DeleteLexicon",
        "description": "Add 'polly:DeleteLexicon' action",
        "prefix": "polly:DeleteLexicon"
    },
    "polly:DescribeVoices": {
        "body": "polly:DescribeVoices",
        "description": "Add 'polly:DescribeVoices' action",
        "prefix": "polly:DescribeVoices"
    },
    "polly:GetLexicon": {
        "body": "polly:GetLexicon",
        "description": "Add 'polly:GetLexicon' action",
        "prefix": "polly:GetLexicon"
    },
    "polly:ListLexicons": {
        "body": "polly:ListLexicons",
        "description": "Add 'polly:ListLexicons' action",
        "prefix": "polly:ListLexicons"
    },
    "polly:PutLexicon": {
        "body": "polly:PutLexicon",
        "description": "Add 'polly:PutLexicon' action",
        "prefix": "polly:PutLexicon"
    },
    "polly:SynthesizeSpeech": {
        "body": "polly:SynthesizeSpeech",
        "description": "Add 'polly:SynthesizeSpeech' action",
        "prefix": "polly:SynthesizeSpeech"
    },
    "pricing:DescribeServices": {
        "body": "pricing:DescribeServices",
        "description": "Add 'pricing:DescribeServices' action",
        "prefix": "pricing:DescribeServices"
    },
    "pricing:GetAttributeValues": {
        "body": "pricing:GetAttributeValues",
        "description": "Add 'pricing:GetAttributeValues' action",
        "prefix": "pricing:GetAttributeValues"
    },
    "pricing:GetProducts": {
        "body": "pricing:GetProducts",
        "description": "Add 'pricing:GetProducts' action",
        "prefix": "pricing:GetProducts"
    },
    "rds:AddRoleToDBCluster": {
        "body": "rds:AddRoleToDBCluster",
        "description": "Add 'rds:AddRoleToDBCluster' action",
        "prefix": "rds:AddRoleToDBCluster"
    },
    "rds:AddSourceIdentifierToSubscription": {
        "body": "rds:AddSourceIdentifierToSubscription",
        "description": "Add 'rds:AddSourceIdentifierToSubscription' action",
        "prefix": "rds:AddSourceIdentifierToSubscription"
    },
    "rds:AddTagsToResource": {
        "body": "rds:AddTagsToResource",
        "description": "Add 'rds:AddTagsToResource' action",
        "prefix": "rds:AddTagsToResource"
    },
    "rds:ApplyPendingMaintenanceAction": {
        "body": "rds:ApplyPendingMaintenanceAction",
        "description": "Add 'rds:ApplyPendingMaintenanceAction' action",
        "prefix": "rds:ApplyPendingMaintenanceAction"
    },
    "rds:AuthorizeDBSecurityGroupIngress": {
        "body": "rds:AuthorizeDBSecurityGroupIngress",
        "description": "Add 'rds:AuthorizeDBSecurityGroupIngress' action",
        "prefix": "rds:AuthorizeDBSecurityGroupIngress"
    },
    "rds:CopyDBClusterSnapshot": {
        "body": "rds:CopyDBClusterSnapshot",
        "description": "Add 'rds:CopyDBClusterSnapshot' action",
        "prefix": "rds:CopyDBClusterSnapshot"
    },
    "rds:CopyDBParameterGroup": {
        "body": "rds:CopyDBParameterGroup",
        "description": "Add 'rds:CopyDBParameterGroup' action",
        "prefix": "rds:CopyDBParameterGroup"
    },
    "rds:CopyDBSnapshot": {
        "body": "rds:CopyDBSnapshot",
        "description": "Add 'rds:CopyDBSnapshot' action",
        "prefix": "rds:CopyDBSnapshot"
    },
    "rds:CopyOptionGroup": {
        "body": "rds:CopyOptionGroup",
        "description": "Add 'rds:CopyOptionGroup' action",
        "prefix": "rds:CopyOptionGroup"
    },
    "rds:CreateDBCluster": {
        "body": "rds:CreateDBCluster",
        "description": "Add 'rds:CreateDBCluster' action",
        "prefix": "rds:CreateDBCluster"
    },
    "rds:CreateDBClusterParameterGroup": {
        "body": "rds:CreateDBClusterParameterGroup",
        "description": "Add 'rds:CreateDBClusterParameterGroup' action",
        "prefix": "rds:CreateDBClusterParameterGroup"
    },
    "rds:CreateDBClusterSnapshot": {
        "body": "rds:CreateDBClusterSnapshot",
        "description": "Add 'rds:CreateDBClusterSnapshot' action",
        "prefix": "rds:CreateDBClusterSnapshot"
    },
    "rds:CreateDBInstance": {
        "body": "rds:CreateDBInstance",
        "description": "Add 'rds:CreateDBInstance' action",
        "prefix": "rds:CreateDBInstance"
    },
    "rds:CreateDBInstanceReadReplica": {
        "body": "rds:CreateDBInstanceReadReplica",
        "description": "Add 'rds:CreateDBInstanceReadReplica' action",
        "prefix": "rds:CreateDBInstanceReadReplica"
    },
    "rds:CreateDBParameterGroup": {
        "body": "rds:CreateDBParameterGroup",
        "description": "Add 'rds:CreateDBParameterGroup' action",
        "prefix": "rds:CreateDBParameterGroup"
    },
    "rds:CreateDBSecurityGroup": {
        "body": "rds:CreateDBSecurityGroup",
        "description": "Add 'rds:CreateDBSecurityGroup' action",
        "prefix": "rds:CreateDBSecurityGroup"
    },
    "rds:CreateDBSnapshot": {
        "body": "rds:CreateDBSnapshot",
        "description": "Add 'rds:CreateDBSnapshot' action",
        "prefix": "rds:CreateDBSnapshot"
    },
    "rds:CreateDBSubnetGroup": {
        "body": "rds:CreateDBSubnetGroup",
        "description": "Add 'rds:CreateDBSubnetGroup' action",
        "prefix": "rds:CreateDBSubnetGroup"
    },
    "rds:CreateEventSubscription": {
        "body": "rds:CreateEventSubscription",
        "description": "Add 'rds:CreateEventSubscription' action",
        "prefix": "rds:CreateEventSubscription"
    },
    "rds:CreateOptionGroup": {
        "body": "rds:CreateOptionGroup",
        "description": "Add 'rds:CreateOptionGroup' action",
        "prefix": "rds:CreateOptionGroup"
    },
    "rds:DeleteDBCluster": {
        "body": "rds:DeleteDBCluster",
        "description": "Add 'rds:DeleteDBCluster' action",
        "prefix": "rds:DeleteDBCluster"
    },
    "rds:DeleteDBClusterParameterGroup": {
        "body": "rds:DeleteDBClusterParameterGroup",
        "description": "Add 'rds:DeleteDBClusterParameterGroup' action",
        "prefix": "rds:DeleteDBClusterParameterGroup"
    },
    "rds:DeleteDBClusterSnapshot": {
        "body": "rds:DeleteDBClusterSnapshot",
        "description": "Add 'rds:DeleteDBClusterSnapshot' action",
        "prefix": "rds:DeleteDBClusterSnapshot"
    },
    "rds:DeleteDBInstance": {
        "body": "rds:DeleteDBInstance",
        "description": "Add 'rds:DeleteDBInstance' action",
        "prefix": "rds:DeleteDBInstance"
    },
    "rds:DeleteDBParameterGroup": {
        "body": "rds:DeleteDBParameterGroup",
        "description": "Add 'rds:DeleteDBParameterGroup' action",
        "prefix": "rds:DeleteDBParameterGroup"
    },
    "rds:DeleteDBSecurityGroup": {
        "body": "rds:DeleteDBSecurityGroup",
        "description": "Add 'rds:DeleteDBSecurityGroup' action",
        "prefix": "rds:DeleteDBSecurityGroup"
    },
    "rds:DeleteDBSnapshot": {
        "body": "rds:DeleteDBSnapshot",
        "description": "Add 'rds:DeleteDBSnapshot' action",
        "prefix": "rds:DeleteDBSnapshot"
    },
    "rds:DeleteDBSubnetGroup": {
        "body": "rds:DeleteDBSubnetGroup",
        "description": "Add 'rds:DeleteDBSubnetGroup' action",
        "prefix": "rds:DeleteDBSubnetGroup"
    },
    "rds:DeleteEventSubscription": {
        "body": "rds:DeleteEventSubscription",
        "description": "Add 'rds:DeleteEventSubscription' action",
        "prefix": "rds:DeleteEventSubscription"
    },
    "rds:DeleteOptionGroup": {
        "body": "rds:DeleteOptionGroup",
        "description": "Add 'rds:DeleteOptionGroup' action",
        "prefix": "rds:DeleteOptionGroup"
    },
    "rds:DescribeAccountAttributes": {
        "body": "rds:DescribeAccountAttributes",
        "description": "Add 'rds:DescribeAccountAttributes' action",
        "prefix": "rds:DescribeAccountAttributes"
    },
    "rds:DescribeCertificates": {
        "body": "rds:DescribeCertificates",
        "description": "Add 'rds:DescribeCertificates' action",
        "prefix": "rds:DescribeCertificates"
    },
    "rds:DescribeDBClusterParameterGroups": {
        "body": "rds:DescribeDBClusterParameterGroups",
        "description": "Add 'rds:DescribeDBClusterParameterGroups' action",
        "prefix": "rds:DescribeDBClusterParameterGroups"
    },
    "rds:DescribeDBClusterParameters": {
        "body": "rds:DescribeDBClusterParameters",
        "description": "Add 'rds:DescribeDBClusterParameters' action",
        "prefix": "rds:DescribeDBClusterParameters"
    },
    "rds:DescribeDBClusterSnapshotAttributes": {
        "body": "rds:DescribeDBClusterSnapshotAttributes",
        "description": "Add 'rds:DescribeDBClusterSnapshotAttributes' action",
        "prefix": "rds:DescribeDBClusterSnapshotAttributes"
    },
    "rds:DescribeDBClusterSnapshots": {
        "body": "rds:DescribeDBClusterSnapshots",
        "description": "Add 'rds:DescribeDBClusterSnapshots' action",
        "prefix": "rds:DescribeDBClusterSnapshots"
    },
    "rds:DescribeDBClusters": {
        "body": "rds:DescribeDBClusters",
        "description": "Add 'rds:DescribeDBClusters' action",
        "prefix": "rds:DescribeDBClusters"
    },
    "rds:DescribeDBEngineVersions": {
        "body": "rds:DescribeDBEngineVersions",
        "description": "Add 'rds:DescribeDBEngineVersions' action",
        "prefix": "rds:DescribeDBEngineVersions"
    },
    "rds:DescribeDBInstances": {
        "body": "rds:DescribeDBInstances",
        "description": "Add 'rds:DescribeDBInstances' action",
        "prefix": "rds:DescribeDBInstances"
    },
    "rds:DescribeDBLogFiles": {
        "body": "rds:DescribeDBLogFiles",
        "description": "Add 'rds:DescribeDBLogFiles' action",
        "prefix": "rds:DescribeDBLogFiles"
    },
    "rds:DescribeDBParameterGroups": {
        "body": "rds:DescribeDBParameterGroups",
        "description": "Add 'rds:DescribeDBParameterGroups' action",
        "prefix": "rds:DescribeDBParameterGroups"
    },
    "rds:DescribeDBParameters": {
        "body": "rds:DescribeDBParameters",
        "description": "Add 'rds:DescribeDBParameters' action",
        "prefix": "rds:DescribeDBParameters"
    },
    "rds:DescribeDBSecurityGroups": {
        "body": "rds:DescribeDBSecurityGroups",
        "description": "Add 'rds:DescribeDBSecurityGroups' action",
        "prefix": "rds:DescribeDBSecurityGroups"
    },
    "rds:DescribeDBSnapshotAttributes": {
        "body": "rds:DescribeDBSnapshotAttributes",
        "description": "Add 'rds:DescribeDBSnapshotAttributes' action",
        "prefix": "rds:DescribeDBSnapshotAttributes"
    },
    "rds:DescribeDBSnapshots": {
        "body": "rds:DescribeDBSnapshots",
        "description": "Add 'rds:DescribeDBSnapshots' action",
        "prefix": "rds:DescribeDBSnapshots"
    },
    "rds:DescribeDBSubnetGroups": {
        "body": "rds:DescribeDBSubnetGroups",
        "description": "Add 'rds:DescribeDBSubnetGroups' action",
        "prefix": "rds:DescribeDBSubnetGroups"
    },
    "rds:DescribeEngineDefaultClusterParameters": {
        "body": "rds:DescribeEngineDefaultClusterParameters",
        "description": "Add 'rds:DescribeEngineDefaultClusterParameters' action",
        "prefix": "rds:DescribeEngineDefaultClusterParameters"
    },
    "rds:DescribeEngineDefaultParameters": {
        "body": "rds:DescribeEngineDefaultParameters",
        "description": "Add 'rds:DescribeEngineDefaultParameters' action",
        "prefix": "rds:DescribeEngineDefaultParameters"
    },
    "rds:DescribeEventCategories": {
        "body": "rds:DescribeEventCategories",
        "description": "Add 'rds:DescribeEventCategories' action",
        "prefix": "rds:DescribeEventCategories"
    },
    "rds:DescribeEventSubscriptions": {
        "body": "rds:DescribeEventSubscriptions",
        "description": "Add 'rds:DescribeEventSubscriptions' action",
        "prefix": "rds:DescribeEventSubscriptions"
    },
    "rds:DescribeEvents": {
        "body": "rds:DescribeEvents",
        "description": "Add 'rds:DescribeEvents' action",
        "prefix": "rds:DescribeEvents"
    },
    "rds:DescribeOptionGroupOptions": {
        "body": "rds:DescribeOptionGroupOptions",
        "description": "Add 'rds:DescribeOptionGroupOptions' action",
        "prefix": "rds:DescribeOptionGroupOptions"
    },
    "rds:DescribeOptionGroups": {
        "body": "rds:DescribeOptionGroups",
        "description": "Add 'rds:DescribeOptionGroups' action",
        "prefix": "rds:DescribeOptionGroups"
    },
    "rds:DescribeOrderableDBInstanceOptions": {
        "body": "rds:DescribeOrderableDBInstanceOptions",
        "description": "Add 'rds:DescribeOrderableDBInstanceOptions' action",
        "prefix": "rds:DescribeOrderableDBInstanceOptions"
    },
    "rds:DescribePendingMaintenanceActions": {
        "body": "rds:DescribePendingMaintenanceActions",
        "description": "Add 'rds:DescribePendingMaintenanceActions' action",
        "prefix": "rds:DescribePendingMaintenanceActions"
    },
    "rds:DescribeReservedDBInstances": {
        "body": "rds:DescribeReservedDBInstances",
        "description": "Add 'rds:DescribeReservedDBInstances' action",
        "prefix": "rds:DescribeReservedDBInstances"
    },
    "rds:DescribeReservedDBInstancesOfferings": {
        "body": "rds:DescribeReservedDBInstancesOfferings",
        "description": "Add 'rds:DescribeReservedDBInstancesOfferings' action",
        "prefix": "rds:DescribeReservedDBInstancesOfferings"
    },
    "rds:DownloadCompleteDBLogFile": {
        "body": "rds:DownloadCompleteDBLogFile",
        "description": "Add 'rds:DownloadCompleteDBLogFile' action",
        "prefix": "rds:DownloadCompleteDBLogFile"
    },
    "rds:DownloadDBLogFilePortion": {
        "body": "rds:DownloadDBLogFilePortion",
        "description": "Add 'rds:DownloadDBLogFilePortion' action",
        "prefix": "rds:DownloadDBLogFilePortion"
    },
    "rds:FailoverDBCluster": {
        "body": "rds:FailoverDBCluster",
        "description": "Add 'rds:FailoverDBCluster' action",
        "prefix": "rds:FailoverDBCluster"
    },
    "rds:ListTagsForResource": {
        "body": "rds:ListTagsForResource",
        "description": "Add 'rds:ListTagsForResource' action",
        "prefix": "rds:ListTagsForResource"
    },
    "rds:ModifyDBCluster": {
        "body": "rds:ModifyDBCluster",
        "description": "Add 'rds:ModifyDBCluster' action",
        "prefix": "rds:ModifyDBCluster"
    },
    "rds:ModifyDBClusterParameterGroup": {
        "body": "rds:ModifyDBClusterParameterGroup",
        "description": "Add 'rds:ModifyDBClusterParameterGroup' action",
        "prefix": "rds:ModifyDBClusterParameterGroup"
    },
    "rds:ModifyDBClusterSnapshotAttribute": {
        "body": "rds:ModifyDBClusterSnapshotAttribute",
        "description": "Add 'rds:ModifyDBClusterSnapshotAttribute' action",
        "prefix": "rds:ModifyDBClusterSnapshotAttribute"
    },
    "rds:ModifyDBInstance": {
        "body": "rds:ModifyDBInstance",
        "description": "Add 'rds:ModifyDBInstance' action",
        "prefix": "rds:ModifyDBInstance"
    },
    "rds:ModifyDBParameterGroup": {
        "body": "rds:ModifyDBParameterGroup",
        "description": "Add 'rds:ModifyDBParameterGroup' action",
        "prefix": "rds:ModifyDBParameterGroup"
    },
    "rds:ModifyDBSnapshotAttribute": {
        "body": "rds:ModifyDBSnapshotAttribute",
        "description": "Add 'rds:ModifyDBSnapshotAttribute' action",
        "prefix": "rds:ModifyDBSnapshotAttribute"
    },
    "rds:ModifyDBSubnetGroup": {
        "body": "rds:ModifyDBSubnetGroup",
        "description": "Add 'rds:ModifyDBSubnetGroup' action",
        "prefix": "rds:ModifyDBSubnetGroup"
    },
    "rds:ModifyEventSubscription": {
        "body": "rds:ModifyEventSubscription",
        "description": "Add 'rds:ModifyEventSubscription' action",
        "prefix": "rds:ModifyEventSubscription"
    },
    "rds:ModifyOptionGroup": {
        "body": "rds:ModifyOptionGroup",
        "description": "Add 'rds:ModifyOptionGroup' action",
        "prefix": "rds:ModifyOptionGroup"
    },
    "rds:PromoteReadReplica": {
        "body": "rds:PromoteReadReplica",
        "description": "Add 'rds:PromoteReadReplica' action",
        "prefix": "rds:PromoteReadReplica"
    },
    "rds:PurchaseReservedDBInstancesOffering": {
        "body": "rds:PurchaseReservedDBInstancesOffering",
        "description": "Add 'rds:PurchaseReservedDBInstancesOffering' action",
        "prefix": "rds:PurchaseReservedDBInstancesOffering"
    },
    "rds:RebootDBInstance": {
        "body": "rds:RebootDBInstance",
        "description": "Add 'rds:RebootDBInstance' action",
        "prefix": "rds:RebootDBInstance"
    },
    "rds:RemoveSourceIdentifierFromSubscription": {
        "body": "rds:RemoveSourceIdentifierFromSubscription",
        "description": "Add 'rds:RemoveSourceIdentifierFromSubscription' action",
        "prefix": "rds:RemoveSourceIdentifierFromSubscription"
    },
    "rds:RemoveTagsFromResource": {
        "body": "rds:RemoveTagsFromResource",
        "description": "Add 'rds:RemoveTagsFromResource' action",
        "prefix": "rds:RemoveTagsFromResource"
    },
    "rds:ResetDBClusterParameterGroup": {
        "body": "rds:ResetDBClusterParameterGroup",
        "description": "Add 'rds:ResetDBClusterParameterGroup' action",
        "prefix": "rds:ResetDBClusterParameterGroup"
    },
    "rds:ResetDBParameterGroup": {
        "body": "rds:ResetDBParameterGroup",
        "description": "Add 'rds:ResetDBParameterGroup' action",
        "prefix": "rds:ResetDBParameterGroup"
    },
    "rds:RestoreDBClusterFromSnapshot": {
        "body": "rds:RestoreDBClusterFromSnapshot",
        "description": "Add 'rds:RestoreDBClusterFromSnapshot' action",
        "prefix": "rds:RestoreDBClusterFromSnapshot"
    },
    "rds:RestoreDBClusterToPointInTime": {
        "body": "rds:RestoreDBClusterToPointInTime",
        "description": "Add 'rds:RestoreDBClusterToPointInTime' action",
        "prefix": "rds:RestoreDBClusterToPointInTime"
    },
    "rds:RestoreDBInstanceFromDBSnapshot": {
        "body": "rds:RestoreDBInstanceFromDBSnapshot",
        "description": "Add 'rds:RestoreDBInstanceFromDBSnapshot' action",
        "prefix": "rds:RestoreDBInstanceFromDBSnapshot"
    },
    "rds:RestoreDBInstanceToPointInTime": {
        "body": "rds:RestoreDBInstanceToPointInTime",
        "description": "Add 'rds:RestoreDBInstanceToPointInTime' action",
        "prefix": "rds:RestoreDBInstanceToPointInTime"
    },
    "rds:RevokeDBSecurityGroupIngress": {
        "body": "rds:RevokeDBSecurityGroupIngress",
        "description": "Add 'rds:RevokeDBSecurityGroupIngress' action",
        "prefix": "rds:RevokeDBSecurityGroupIngress"
    },
    "rds:StartDBInstance": {
        "body": "rds:StartDBInstance",
        "description": "Add 'rds:StartDBInstance' action",
        "prefix": "rds:StartDBInstance"
    },
    "rds:StopDBInstance": {
        "body": "rds:StopDBInstance",
        "description": "Add 'rds:StopDBInstance' action",
        "prefix": "rds:StopDBInstance"
    },
    "redshift:AuthorizeClusterSecurityGroupIngress": {
        "body": "redshift:AuthorizeClusterSecurityGroupIngress",
        "description": "Add 'redshift:AuthorizeClusterSecurityGroupIngress' action",
        "prefix": "redshift:AuthorizeClusterSecurityGroupIngress"
    },
    "redshift:AuthorizeSnapshotAccess": {
        "body": "redshift:AuthorizeSnapshotAccess",
        "description": "Add 'redshift:AuthorizeSnapshotAccess' action",
        "prefix": "redshift:AuthorizeSnapshotAccess"
    },
    "redshift:CancelQuerySession": {
        "body": "redshift:CancelQuerySession",
        "description": "Add 'redshift:CancelQuerySession' action",
        "prefix": "redshift:CancelQuerySession"
    },
    "redshift:CopyClusterSnapshot": {
        "body": "redshift:CopyClusterSnapshot",
        "description": "Add 'redshift:CopyClusterSnapshot' action",
        "prefix": "redshift:CopyClusterSnapshot"
    },
    "redshift:CreateCluster": {
        "body": "redshift:CreateCluster",
        "description": "Add 'redshift:CreateCluster' action",
        "prefix": "redshift:CreateCluster"
    },
    "redshift:CreateClusterParameterGroup": {
        "body": "redshift:CreateClusterParameterGroup",
        "description": "Add 'redshift:CreateClusterParameterGroup' action",
        "prefix": "redshift:CreateClusterParameterGroup"
    },
    "redshift:CreateClusterSecurityGroup": {
        "body": "redshift:CreateClusterSecurityGroup",
        "description": "Add 'redshift:CreateClusterSecurityGroup' action",
        "prefix": "redshift:CreateClusterSecurityGroup"
    },
    "redshift:CreateClusterSnapshot": {
        "body": "redshift:CreateClusterSnapshot",
        "description": "Add 'redshift:CreateClusterSnapshot' action",
        "prefix": "redshift:CreateClusterSnapshot"
    },
    "redshift:CreateClusterSubnetGroup": {
        "body": "redshift:CreateClusterSubnetGroup",
        "description": "Add 'redshift:CreateClusterSubnetGroup' action",
        "prefix": "redshift:CreateClusterSubnetGroup"
    },
    "redshift:CreateClusterUser": {
        "body": "redshift:CreateClusterUser",
        "description": "Add 'redshift:CreateClusterUser' action",
        "prefix": "redshift:CreateClusterUser"
    },
    "redshift:CreateEventSubscription": {
        "body": "redshift:CreateEventSubscription",
        "description": "Add 'redshift:CreateEventSubscription' action",
        "prefix": "redshift:CreateEventSubscription"
    },
    "redshift:CreateHsmClientCertificate": {
        "body": "redshift:CreateHsmClientCertificate",
        "description": "Add 'redshift:CreateHsmClientCertificate' action",
        "prefix": "redshift:CreateHsmClientCertificate"
    },
    "redshift:CreateHsmConfiguration": {
        "body": "redshift:CreateHsmConfiguration",
        "description": "Add 'redshift:CreateHsmConfiguration' action",
        "prefix": "redshift:CreateHsmConfiguration"
    },
    "redshift:CreateSnapshotCopyGrant": {
        "body": "redshift:CreateSnapshotCopyGrant",
        "description": "Add 'redshift:CreateSnapshotCopyGrant' action",
        "prefix": "redshift:CreateSnapshotCopyGrant"
    },
    "redshift:CreateTags": {
        "body": "redshift:CreateTags",
        "description": "Add 'redshift:CreateTags' action",
        "prefix": "redshift:CreateTags"
    },
    "redshift:DeleteCluster": {
        "body": "redshift:DeleteCluster",
        "description": "Add 'redshift:DeleteCluster' action",
        "prefix": "redshift:DeleteCluster"
    },
    "redshift:DeleteClusterParameterGroup": {
        "body": "redshift:DeleteClusterParameterGroup",
        "description": "Add 'redshift:DeleteClusterParameterGroup' action",
        "prefix": "redshift:DeleteClusterParameterGroup"
    },
    "redshift:DeleteClusterSecurityGroup": {
        "body": "redshift:DeleteClusterSecurityGroup",
        "description": "Add 'redshift:DeleteClusterSecurityGroup' action",
        "prefix": "redshift:DeleteClusterSecurityGroup"
    },
    "redshift:DeleteClusterSnapshot": {
        "body": "redshift:DeleteClusterSnapshot",
        "description": "Add 'redshift:DeleteClusterSnapshot' action",
        "prefix": "redshift:DeleteClusterSnapshot"
    },
    "redshift:DeleteClusterSubnetGroup": {
        "body": "redshift:DeleteClusterSubnetGroup",
        "description": "Add 'redshift:DeleteClusterSubnetGroup' action",
        "prefix": "redshift:DeleteClusterSubnetGroup"
    },
    "redshift:DeleteEventSubscription": {
        "body": "redshift:DeleteEventSubscription",
        "description": "Add 'redshift:DeleteEventSubscription' action",
        "prefix": "redshift:DeleteEventSubscription"
    },
    "redshift:DeleteHsmClientCertificate": {
        "body": "redshift:DeleteHsmClientCertificate",
        "description": "Add 'redshift:DeleteHsmClientCertificate' action",
        "prefix": "redshift:DeleteHsmClientCertificate"
    },
    "redshift:DeleteHsmConfiguration": {
        "body": "redshift:DeleteHsmConfiguration",
        "description": "Add 'redshift:DeleteHsmConfiguration' action",
        "prefix": "redshift:DeleteHsmConfiguration"
    },
    "redshift:DeleteSnapshotCopyGrant": {
        "body": "redshift:DeleteSnapshotCopyGrant",
        "description": "Add 'redshift:DeleteSnapshotCopyGrant' action",
        "prefix": "redshift:DeleteSnapshotCopyGrant"
    },
    "redshift:DeleteTags": {
        "body": "redshift:DeleteTags",
        "description": "Add 'redshift:DeleteTags' action",
        "prefix": "redshift:DeleteTags"
    },
    "redshift:DescribeClusterParameterGroups": {
        "body": "redshift:DescribeClusterParameterGroups",
        "description": "Add 'redshift:DescribeClusterParameterGroups' action",
        "prefix": "redshift:DescribeClusterParameterGroups"
    },
    "redshift:DescribeClusterParameters": {
        "body": "redshift:DescribeClusterParameters",
        "description": "Add 'redshift:DescribeClusterParameters' action",
        "prefix": "redshift:DescribeClusterParameters"
    },
    "redshift:DescribeClusterSecurityGroups": {
        "body": "redshift:DescribeClusterSecurityGroups",
        "description": "Add 'redshift:DescribeClusterSecurityGroups' action",
        "prefix": "redshift:DescribeClusterSecurityGroups"
    },
    "redshift:DescribeClusterSnapshots": {
        "body": "redshift:DescribeClusterSnapshots",
        "description": "Add 'redshift:DescribeClusterSnapshots' action",
        "prefix": "redshift:DescribeClusterSnapshots"
    },
    "redshift:DescribeClusterSubnetGroups": {
        "body": "redshift:DescribeClusterSubnetGroups",
        "description": "Add 'redshift:DescribeClusterSubnetGroups' action",
        "prefix": "redshift:DescribeClusterSubnetGroups"
    },
    "redshift:DescribeClusterVersions": {
        "body": "redshift:DescribeClusterVersions",
        "description": "Add 'redshift:DescribeClusterVersions' action",
        "prefix": "redshift:DescribeClusterVersions"
    },
    "redshift:DescribeClusters": {
        "body": "redshift:DescribeClusters",
        "description": "Add 'redshift:DescribeClusters' action",
        "prefix": "redshift:DescribeClusters"
    },
    "redshift:DescribeDefaultClusterParameters": {
        "body": "redshift:DescribeDefaultClusterParameters",
        "description": "Add 'redshift:DescribeDefaultClusterParameters' action",
        "prefix": "redshift:DescribeDefaultClusterParameters"
    },
    "redshift:DescribeEventCategories": {
        "body": "redshift:DescribeEventCategories",
        "description": "Add 'redshift:DescribeEventCategories' action",
        "prefix": "redshift:DescribeEventCategories"
    },
    "redshift:DescribeEventSubscriptions": {
        "body": "redshift:DescribeEventSubscriptions",
        "description": "Add 'redshift:DescribeEventSubscriptions' action",
        "prefix": "redshift:DescribeEventSubscriptions"
    },
    "redshift:DescribeEvents": {
        "body": "redshift:DescribeEvents",
        "description": "Add 'redshift:DescribeEvents' action",
        "prefix": "redshift:DescribeEvents"
    },
    "redshift:DescribeHsmClientCertificates": {
        "body": "redshift:DescribeHsmClientCertificates",
        "description": "Add 'redshift:DescribeHsmClientCertificates' action",
        "prefix": "redshift:DescribeHsmClientCertificates"
    },
    "redshift:DescribeHsmConfigurations": {
        "body": "redshift:DescribeHsmConfigurations",
        "description": "Add 'redshift:DescribeHsmConfigurations' action",
        "prefix": "redshift:DescribeHsmConfigurations"
    },
    "redshift:DescribeLoggingStatus": {
        "body": "redshift:DescribeLoggingStatus",
        "description": "Add 'redshift:DescribeLoggingStatus' action",
        "prefix": "redshift:DescribeLoggingStatus"
    },
    "redshift:DescribeOrderableClusterOptions": {
        "body": "redshift:DescribeOrderableClusterOptions",
        "description": "Add 'redshift:DescribeOrderableClusterOptions' action",
        "prefix": "redshift:DescribeOrderableClusterOptions"
    },
    "redshift:DescribeReservedNodeOfferings": {
        "body": "redshift:DescribeReservedNodeOfferings",
        "description": "Add 'redshift:DescribeReservedNodeOfferings' action",
        "prefix": "redshift:DescribeReservedNodeOfferings"
    },
    "redshift:DescribeReservedNodes": {
        "body": "redshift:DescribeReservedNodes",
        "description": "Add 'redshift:DescribeReservedNodes' action",
        "prefix": "redshift:DescribeReservedNodes"
    },
    "redshift:DescribeResize": {
        "body": "redshift:DescribeResize",
        "description": "Add 'redshift:DescribeResize' action",
        "prefix": "redshift:DescribeResize"
    },
    "redshift:DescribeSnapshotCopyGrants": {
        "body": "redshift:DescribeSnapshotCopyGrants",
        "description": "Add 'redshift:DescribeSnapshotCopyGrants' action",
        "prefix": "redshift:DescribeSnapshotCopyGrants"
    },
    "redshift:DescribeTableRestoreStatus": {
        "body": "redshift:DescribeTableRestoreStatus",
        "description": "Add 'redshift:DescribeTableRestoreStatus' action",
        "prefix": "redshift:DescribeTableRestoreStatus"
    },
    "redshift:DescribeTags": {
        "body": "redshift:DescribeTags",
        "description": "Add 'redshift:DescribeTags' action",
        "prefix": "redshift:DescribeTags"
    },
    "redshift:DisableLogging": {
        "body": "redshift:DisableLogging",
        "description": "Add 'redshift:DisableLogging' action",
        "prefix": "redshift:DisableLogging"
    },
    "redshift:DisableSnapshotCopy": {
        "body": "redshift:DisableSnapshotCopy",
        "description": "Add 'redshift:DisableSnapshotCopy' action",
        "prefix": "redshift:DisableSnapshotCopy"
    },
    "redshift:EnableLogging": {
        "body": "redshift:EnableLogging",
        "description": "Add 'redshift:EnableLogging' action",
        "prefix": "redshift:EnableLogging"
    },
    "redshift:EnableSnapshotCopy": {
        "body": "redshift:EnableSnapshotCopy",
        "description": "Add 'redshift:EnableSnapshotCopy' action",
        "prefix": "redshift:EnableSnapshotCopy"
    },
    "redshift:GetClusterCredentials": {
        "body": "redshift:GetClusterCredentials",
        "description": "Add 'redshift:GetClusterCredentials' action",
        "prefix": "redshift:GetClusterCredentials"
    },
    "redshift:JoinGroup": {
        "body": "redshift:JoinGroup",
        "description": "Add 'redshift:JoinGroup' action",
        "prefix": "redshift:JoinGroup"
    },
    "redshift:ModifyCluster": {
        "body": "redshift:ModifyCluster",
        "description": "Add 'redshift:ModifyCluster' action",
        "prefix": "redshift:ModifyCluster"
    },
    "redshift:ModifyClusterIamRoles": {
        "body": "redshift:ModifyClusterIamRoles",
        "description": "Add 'redshift:ModifyClusterIamRoles' action",
        "prefix": "redshift:ModifyClusterIamRoles"
    },
    "redshift:ModifyClusterParameterGroup": {
        "body": "redshift:ModifyClusterParameterGroup",
        "description": "Add 'redshift:ModifyClusterParameterGroup' action",
        "prefix": "redshift:ModifyClusterParameterGroup"
    },
    "redshift:ModifyClusterSubnetGroup": {
        "body": "redshift:ModifyClusterSubnetGroup",
        "description": "Add 'redshift:ModifyClusterSubnetGroup' action",
        "prefix": "redshift:ModifyClusterSubnetGroup"
    },
    "redshift:ModifyEventSubscription": {
        "body": "redshift:ModifyEventSubscription",
        "description": "Add 'redshift:ModifyEventSubscription' action",
        "prefix": "redshift:ModifyEventSubscription"
    },
    "redshift:ModifySnapshotCopyRetentionPeriod": {
        "body": "redshift:ModifySnapshotCopyRetentionPeriod",
        "description": "Add 'redshift:ModifySnapshotCopyRetentionPeriod' action",
        "prefix": "redshift:ModifySnapshotCopyRetentionPeriod"
    },
    "redshift:PurchaseReservedNodeOffering": {
        "body": "redshift:PurchaseReservedNodeOffering",
        "description": "Add 'redshift:PurchaseReservedNodeOffering' action",
        "prefix": "redshift:PurchaseReservedNodeOffering"
    },
    "redshift:RebootCluster": {
        "body": "redshift:RebootCluster",
        "description": "Add 'redshift:RebootCluster' action",
        "prefix": "redshift:RebootCluster"
    },
    "redshift:ResetClusterParameterGroup": {
        "body": "redshift:ResetClusterParameterGroup",
        "description": "Add 'redshift:ResetClusterParameterGroup' action",
        "prefix": "redshift:ResetClusterParameterGroup"
    },
    "redshift:RestoreFromClusterSnapshot": {
        "body": "redshift:RestoreFromClusterSnapshot",
        "description": "Add 'redshift:RestoreFromClusterSnapshot' action",
        "prefix": "redshift:RestoreFromClusterSnapshot"
    },
    "redshift:RestoreTableFromClusterSnapshot": {
        "body": "redshift:RestoreTableFromClusterSnapshot",
        "description": "Add 'redshift:RestoreTableFromClusterSnapshot' action",
        "prefix": "redshift:RestoreTableFromClusterSnapshot"
    },
    "redshift:RevokeClusterSecurityGroupIngress": {
        "body": "redshift:RevokeClusterSecurityGroupIngress",
        "description": "Add 'redshift:RevokeClusterSecurityGroupIngress' action",
        "prefix": "redshift:RevokeClusterSecurityGroupIngress"
    },
    "redshift:RevokeSnapshotAccess": {
        "body": "redshift:RevokeSnapshotAccess",
        "description": "Add 'redshift:RevokeSnapshotAccess' action",
        "prefix": "redshift:RevokeSnapshotAccess"
    },
    "redshift:RotateEncryptionKey": {
        "body": "redshift:RotateEncryptionKey",
        "description": "Add 'redshift:RotateEncryptionKey' action",
        "prefix": "redshift:RotateEncryptionKey"
    },
    "redshift:ViewQueriesInConsole": {
        "body": "redshift:ViewQueriesInConsole",
        "description": "Add 'redshift:ViewQueriesInConsole' action",
        "prefix": "redshift:ViewQueriesInConsole"
    },
    "rekognition:CompareFaces": {
        "body": "rekognition:CompareFaces",
        "description": "Add 'rekognition:CompareFaces' action",
        "prefix": "rekognition:CompareFaces"
    },
    "rekognition:CreateCollection": {
        "body": "rekognition:CreateCollection",
        "description": "Add 'rekognition:CreateCollection' action",
        "prefix": "rekognition:CreateCollection"
    },
    "rekognition:CreateStreamProcessor": {
        "body": "rekognition:CreateStreamProcessor",
        "description": "Add 'rekognition:CreateStreamProcessor' action",
        "prefix": "rekognition:CreateStreamProcessor"
    },
    "rekognition:DeleteCollection": {
        "body": "rekognition:DeleteCollection",
        "description": "Add 'rekognition:DeleteCollection' action",
        "prefix": "rekognition:DeleteCollection"
    },
    "rekognition:DeleteFaces": {
        "body": "rekognition:DeleteFaces",
        "description": "Add 'rekognition:DeleteFaces' action",
        "prefix": "rekognition:DeleteFaces"
    },
    "rekognition:DeleteStreamProcessor": {
        "body": "rekognition:DeleteStreamProcessor",
        "description": "Add 'rekognition:DeleteStreamProcessor' action",
        "prefix": "rekognition:DeleteStreamProcessor"
    },
    "rekognition:DescribeStreamProcessor": {
        "body": "rekognition:DescribeStreamProcessor",
        "description": "Add 'rekognition:DescribeStreamProcessor' action",
        "prefix": "rekognition:DescribeStreamProcessor"
    },
    "rekognition:DetectFaces": {
        "body": "rekognition:DetectFaces",
        "description": "Add 'rekognition:DetectFaces' action",
        "prefix": "rekognition:DetectFaces"
    },
    "rekognition:DetectLabels": {
        "body": "rekognition:DetectLabels",
        "description": "Add 'rekognition:DetectLabels' action",
        "prefix": "rekognition:DetectLabels"
    },
    "rekognition:DetectModerationLabels": {
        "body": "rekognition:DetectModerationLabels",
        "description": "Add 'rekognition:DetectModerationLabels' action",
        "prefix": "rekognition:DetectModerationLabels"
    },
    "rekognition:DetectText": {
        "body": "rekognition:DetectText",
        "description": "Add 'rekognition:DetectText' action",
        "prefix": "rekognition:DetectText"
    },
    "rekognition:GetCelebrityInfo": {
        "body": "rekognition:GetCelebrityInfo",
        "description": "Add 'rekognition:GetCelebrityInfo' action",
        "prefix": "rekognition:GetCelebrityInfo"
    },
    "rekognition:GetCelebrityRecognition": {
        "body": "rekognition:GetCelebrityRecognition",
        "description": "Add 'rekognition:GetCelebrityRecognition' action",
        "prefix": "rekognition:GetCelebrityRecognition"
    },
    "rekognition:GetContentModeration": {
        "body": "rekognition:GetContentModeration",
        "description": "Add 'rekognition:GetContentModeration' action",
        "prefix": "rekognition:GetContentModeration"
    },
    "rekognition:GetFaceDetection": {
        "body": "rekognition:GetFaceDetection",
        "description": "Add 'rekognition:GetFaceDetection' action",
        "prefix": "rekognition:GetFaceDetection"
    },
    "rekognition:GetFaceSearch": {
        "body": "rekognition:GetFaceSearch",
        "description": "Add 'rekognition:GetFaceSearch' action",
        "prefix": "rekognition:GetFaceSearch"
    },
    "rekognition:GetLabelDetection": {
        "body": "rekognition:GetLabelDetection",
        "description": "Add 'rekognition:GetLabelDetection' action",
        "prefix": "rekognition:GetLabelDetection"
    },
    "rekognition:GetPersonTracking": {
        "body": "rekognition:GetPersonTracking",
        "description": "Add 'rekognition:GetPersonTracking' action",
        "prefix": "rekognition:GetPersonTracking"
    },
    "rekognition:IndexFaces": {
        "body": "rekognition:IndexFaces",
        "description": "Add 'rekognition:IndexFaces' action",
        "prefix": "rekognition:IndexFaces"
    },
    "rekognition:ListCollections": {
        "body": "rekognition:ListCollections",
        "description": "Add 'rekognition:ListCollections' action",
        "prefix": "rekognition:ListCollections"
    },
    "rekognition:ListFaces": {
        "body": "rekognition:ListFaces",
        "description": "Add 'rekognition:ListFaces' action",
        "prefix": "rekognition:ListFaces"
    },
    "rekognition:ListStreamProcessors": {
        "body": "rekognition:ListStreamProcessors",
        "description": "Add 'rekognition:ListStreamProcessors' action",
        "prefix": "rekognition:ListStreamProcessors"
    },
    "rekognition:RecognizeCelebrities": {
        "body": "rekognition:RecognizeCelebrities",
        "description": "Add 'rekognition:RecognizeCelebrities' action",
        "prefix": "rekognition:RecognizeCelebrities"
    },
    "rekognition:SearchFaces": {
        "body": "rekognition:SearchFaces",
        "description": "Add 'rekognition:SearchFaces' action",
        "prefix": "rekognition:SearchFaces"
    },
    "rekognition:SearchFacesByImage": {
        "body": "rekognition:SearchFacesByImage",
        "description": "Add 'rekognition:SearchFacesByImage' action",
        "prefix": "rekognition:SearchFacesByImage"
    },
    "rekognition:StartCelebrityRecognition": {
        "body": "rekognition:StartCelebrityRecognition",
        "description": "Add 'rekognition:StartCelebrityRecognition' action",
        "prefix": "rekognition:StartCelebrityRecognition"
    },
    "rekognition:StartContentModeration": {
        "body": "rekognition:StartContentModeration",
        "description": "Add 'rekognition:StartContentModeration' action",
        "prefix": "rekognition:StartContentModeration"
    },
    "rekognition:StartFaceDetection": {
        "body": "rekognition:StartFaceDetection",
        "description": "Add 'rekognition:StartFaceDetection' action",
        "prefix": "rekognition:StartFaceDetection"
    },
    "rekognition:StartFaceSearch": {
        "body": "rekognition:StartFaceSearch",
        "description": "Add 'rekognition:StartFaceSearch' action",
        "prefix": "rekognition:StartFaceSearch"
    },
    "rekognition:StartLabelDetection": {
        "body": "rekognition:StartLabelDetection",
        "description": "Add 'rekognition:StartLabelDetection' action",
        "prefix": "rekognition:StartLabelDetection"
    },
    "rekognition:StartPersonTracking": {
        "body": "rekognition:StartPersonTracking",
        "description": "Add 'rekognition:StartPersonTracking' action",
        "prefix": "rekognition:StartPersonTracking"
    },
    "rekognition:StartStreamProcessor": {
        "body": "rekognition:StartStreamProcessor",
        "description": "Add 'rekognition:StartStreamProcessor' action",
        "prefix": "rekognition:StartStreamProcessor"
    },
    "rekognition:StopStreamProcessor": {
        "body": "rekognition:StopStreamProcessor",
        "description": "Add 'rekognition:StopStreamProcessor' action",
        "prefix": "rekognition:StopStreamProcessor"
    },
    "resource-groups:CreateGroup": {
        "body": "resource-groups:CreateGroup",
        "description": "Add 'resource-groups:CreateGroup' action",
        "prefix": "resource-groups:CreateGroup"
    },
    "resource-groups:DeleteGroup": {
        "body": "resource-groups:DeleteGroup",
        "description": "Add 'resource-groups:DeleteGroup' action",
        "prefix": "resource-groups:DeleteGroup"
    },
    "resource-groups:GetGroup": {
        "body": "resource-groups:GetGroup",
        "description": "Add 'resource-groups:GetGroup' action",
        "prefix": "resource-groups:GetGroup"
    },
    "resource-groups:GetGroupQuery": {
        "body": "resource-groups:GetGroupQuery",
        "description": "Add 'resource-groups:GetGroupQuery' action",
        "prefix": "resource-groups:GetGroupQuery"
    },
    "resource-groups:GetTags": {
        "body": "resource-groups:GetTags",
        "description": "Add 'resource-groups:GetTags' action",
        "prefix": "resource-groups:GetTags"
    },
    "resource-groups:ListGroupResources": {
        "body": "resource-groups:ListGroupResources",
        "description": "Add 'resource-groups:ListGroupResources' action",
        "prefix": "resource-groups:ListGroupResources"
    },
    "resource-groups:ListGroups": {
        "body": "resource-groups:ListGroups",
        "description": "Add 'resource-groups:ListGroups' action",
        "prefix": "resource-groups:ListGroups"
    },
    "resource-groups:SearchResources": {
        "body": "resource-groups:SearchResources",
        "description": "Add 'resource-groups:SearchResources' action",
        "prefix": "resource-groups:SearchResources"
    },
    "resource-groups:Tag": {
        "body": "resource-groups:Tag",
        "description": "Add 'resource-groups:Tag' action",
        "prefix": "resource-groups:Tag"
    },
    "resource-groups:Untag": {
        "body": "resource-groups:Untag",
        "description": "Add 'resource-groups:Untag' action",
        "prefix": "resource-groups:Untag"
    },
    "resource-groups:UpdateGroup": {
        "body": "resource-groups:UpdateGroup",
        "description": "Add 'resource-groups:UpdateGroup' action",
        "prefix": "resource-groups:UpdateGroup"
    },
    "resource-groups:UpdateGroupQuery": {
        "body": "resource-groups:UpdateGroupQuery",
        "description": "Add 'resource-groups:UpdateGroupQuery' action",
        "prefix": "resource-groups:UpdateGroupQuery"
    },
    "route53:AssociateVPCWithHostedZone": {
        "body": "route53:AssociateVPCWithHostedZone",
        "description": "Add 'route53:AssociateVPCWithHostedZone' action",
        "prefix": "route53:AssociateVPCWithHostedZone"
    },
    "route53:ChangeResourceRecordSets": {
        "body": "route53:ChangeResourceRecordSets",
        "description": "Add 'route53:ChangeResourceRecordSets' action",
        "prefix": "route53:ChangeResourceRecordSets"
    },
    "route53:ChangeTagsForResource": {
        "body": "route53:ChangeTagsForResource",
        "description": "Add 'route53:ChangeTagsForResource' action",
        "prefix": "route53:ChangeTagsForResource"
    },
    "route53:CreateHealthCheck": {
        "body": "route53:CreateHealthCheck",
        "description": "Add 'route53:CreateHealthCheck' action",
        "prefix": "route53:CreateHealthCheck"
    },
    "route53:CreateHostedZone": {
        "body": "route53:CreateHostedZone",
        "description": "Add 'route53:CreateHostedZone' action",
        "prefix": "route53:CreateHostedZone"
    },
    "route53:CreateReusableDelegationSet": {
        "body": "route53:CreateReusableDelegationSet",
        "description": "Add 'route53:CreateReusableDelegationSet' action",
        "prefix": "route53:CreateReusableDelegationSet"
    },
    "route53:CreateTrafficPolicy": {
        "body": "route53:CreateTrafficPolicy",
        "description": "Add 'route53:CreateTrafficPolicy' action",
        "prefix": "route53:CreateTrafficPolicy"
    },
    "route53:CreateTrafficPolicyInstance": {
        "body": "route53:CreateTrafficPolicyInstance",
        "description": "Add 'route53:CreateTrafficPolicyInstance' action",
        "prefix": "route53:CreateTrafficPolicyInstance"
    },
    "route53:CreateTrafficPolicyVersion": {
        "body": "route53:CreateTrafficPolicyVersion",
        "description": "Add 'route53:CreateTrafficPolicyVersion' action",
        "prefix": "route53:CreateTrafficPolicyVersion"
    },
    "route53:DeleteHealthCheck": {
        "body": "route53:DeleteHealthCheck",
        "description": "Add 'route53:DeleteHealthCheck' action",
        "prefix": "route53:DeleteHealthCheck"
    },
    "route53:DeleteHostedZone": {
        "body": "route53:DeleteHostedZone",
        "description": "Add 'route53:DeleteHostedZone' action",
        "prefix": "route53:DeleteHostedZone"
    },
    "route53:DeleteReusableDelegationSet": {
        "body": "route53:DeleteReusableDelegationSet",
        "description": "Add 'route53:DeleteReusableDelegationSet' action",
        "prefix": "route53:DeleteReusableDelegationSet"
    },
    "route53:DeleteTrafficPolicy": {
        "body": "route53:DeleteTrafficPolicy",
        "description": "Add 'route53:DeleteTrafficPolicy' action",
        "prefix": "route53:DeleteTrafficPolicy"
    },
    "route53:DeleteTrafficPolicyInstance": {
        "body": "route53:DeleteTrafficPolicyInstance",
        "description": "Add 'route53:DeleteTrafficPolicyInstance' action",
        "prefix": "route53:DeleteTrafficPolicyInstance"
    },
    "route53:DisableDomainAutoRenew": {
        "body": "route53:DisableDomainAutoRenew",
        "description": "Add 'route53:DisableDomainAutoRenew' action",
        "prefix": "route53:DisableDomainAutoRenew"
    },
    "route53:DisassociateVPCFromHostedZone": {
        "body": "route53:DisassociateVPCFromHostedZone",
        "description": "Add 'route53:DisassociateVPCFromHostedZone' action",
        "prefix": "route53:DisassociateVPCFromHostedZone"
    },
    "route53:EnableDomainAutoRenew": {
        "body": "route53:EnableDomainAutoRenew",
        "description": "Add 'route53:EnableDomainAutoRenew' action",
        "prefix": "route53:EnableDomainAutoRenew"
    },
    "route53:GetChange": {
        "body": "route53:GetChange",
        "description": "Add 'route53:GetChange' action",
        "prefix": "route53:GetChange"
    },
    "route53:GetCheckerIpRanges": {
        "body": "route53:GetCheckerIpRanges",
        "description": "Add 'route53:GetCheckerIpRanges' action",
        "prefix": "route53:GetCheckerIpRanges"
    },
    "route53:GetGeoLocation": {
        "body": "route53:GetGeoLocation",
        "description": "Add 'route53:GetGeoLocation' action",
        "prefix": "route53:GetGeoLocation"
    },
    "route53:GetHealthCheck": {
        "body": "route53:GetHealthCheck",
        "description": "Add 'route53:GetHealthCheck' action",
        "prefix": "route53:GetHealthCheck"
    },
    "route53:GetHealthCheckCount": {
        "body": "route53:GetHealthCheckCount",
        "description": "Add 'route53:GetHealthCheckCount' action",
        "prefix": "route53:GetHealthCheckCount"
    },
    "route53:GetHealthCheckLastFailureReason": {
        "body": "route53:GetHealthCheckLastFailureReason",
        "description": "Add 'route53:GetHealthCheckLastFailureReason' action",
        "prefix": "route53:GetHealthCheckLastFailureReason"
    },
    "route53:GetHealthCheckStatus": {
        "body": "route53:GetHealthCheckStatus",
        "description": "Add 'route53:GetHealthCheckStatus' action",
        "prefix": "route53:GetHealthCheckStatus"
    },
    "route53:GetHostedZone": {
        "body": "route53:GetHostedZone",
        "description": "Add 'route53:GetHostedZone' action",
        "prefix": "route53:GetHostedZone"
    },
    "route53:GetHostedZoneCount": {
        "body": "route53:GetHostedZoneCount",
        "description": "Add 'route53:GetHostedZoneCount' action",
        "prefix": "route53:GetHostedZoneCount"
    },
    "route53:GetReusableDelegationSet": {
        "body": "route53:GetReusableDelegationSet",
        "description": "Add 'route53:GetReusableDelegationSet' action",
        "prefix": "route53:GetReusableDelegationSet"
    },
    "route53:GetTrafficPolicy": {
        "body": "route53:GetTrafficPolicy",
        "description": "Add 'route53:GetTrafficPolicy' action",
        "prefix": "route53:GetTrafficPolicy"
    },
    "route53:GetTrafficPolicyInstance": {
        "body": "route53:GetTrafficPolicyInstance",
        "description": "Add 'route53:GetTrafficPolicyInstance' action",
        "prefix": "route53:GetTrafficPolicyInstance"
    },
    "route53:GetTrafficPolicyInstanceCount": {
        "body": "route53:GetTrafficPolicyInstanceCount",
        "description": "Add 'route53:GetTrafficPolicyInstanceCount' action",
        "prefix": "route53:GetTrafficPolicyInstanceCount"
    },
    "route53:ListGeoLocations": {
        "body": "route53:ListGeoLocations",
        "description": "Add 'route53:ListGeoLocations' action",
        "prefix": "route53:ListGeoLocations"
    },
    "route53:ListHealthChecks": {
        "body": "route53:ListHealthChecks",
        "description": "Add 'route53:ListHealthChecks' action",
        "prefix": "route53:ListHealthChecks"
    },
    "route53:ListHostedZones": {
        "body": "route53:ListHostedZones",
        "description": "Add 'route53:ListHostedZones' action",
        "prefix": "route53:ListHostedZones"
    },
    "route53:ListHostedZonesByName": {
        "body": "route53:ListHostedZonesByName",
        "description": "Add 'route53:ListHostedZonesByName' action",
        "prefix": "route53:ListHostedZonesByName"
    },
    "route53:ListResourceRecordSets": {
        "body": "route53:ListResourceRecordSets",
        "description": "Add 'route53:ListResourceRecordSets' action",
        "prefix": "route53:ListResourceRecordSets"
    },
    "route53:ListReusableDelegationSets": {
        "body": "route53:ListReusableDelegationSets",
        "description": "Add 'route53:ListReusableDelegationSets' action",
        "prefix": "route53:ListReusableDelegationSets"
    },
    "route53:ListTagsForResource": {
        "body": "route53:ListTagsForResource",
        "description": "Add 'route53:ListTagsForResource' action",
        "prefix": "route53:ListTagsForResource"
    },
    "route53:ListTagsForResources": {
        "body": "route53:ListTagsForResources",
        "description": "Add 'route53:ListTagsForResources' action",
        "prefix": "route53:ListTagsForResources"
    },
    "route53:ListTrafficPolicies": {
        "body": "route53:ListTrafficPolicies",
        "description": "Add 'route53:ListTrafficPolicies' action",
        "prefix": "route53:ListTrafficPolicies"
    },
    "route53:ListTrafficPolicyInstances": {
        "body": "route53:ListTrafficPolicyInstances",
        "description": "Add 'route53:ListTrafficPolicyInstances' action",
        "prefix": "route53:ListTrafficPolicyInstances"
    },
    "route53:ListTrafficPolicyInstancesByHostedZone": {
        "body": "route53:ListTrafficPolicyInstancesByHostedZone",
        "description": "Add 'route53:ListTrafficPolicyInstancesByHostedZone' action",
        "prefix": "route53:ListTrafficPolicyInstancesByHostedZone"
    },
    "route53:ListTrafficPolicyInstancesByPolicy": {
        "body": "route53:ListTrafficPolicyInstancesByPolicy",
        "description": "Add 'route53:ListTrafficPolicyInstancesByPolicy' action",
        "prefix": "route53:ListTrafficPolicyInstancesByPolicy"
    },
    "route53:ListTrafficPolicyVersions": {
        "body": "route53:ListTrafficPolicyVersions",
        "description": "Add 'route53:ListTrafficPolicyVersions' action",
        "prefix": "route53:ListTrafficPolicyVersions"
    },
    "route53:TestDNSAnswer": {
        "body": "route53:TestDNSAnswer",
        "description": "Add 'route53:TestDNSAnswer' action",
        "prefix": "route53:TestDNSAnswer"
    },
    "route53:UpdateHealthCheck": {
        "body": "route53:UpdateHealthCheck",
        "description": "Add 'route53:UpdateHealthCheck' action",
        "prefix": "route53:UpdateHealthCheck"
    },
    "route53:UpdateHostedZoneComment": {
        "body": "route53:UpdateHostedZoneComment",
        "description": "Add 'route53:UpdateHostedZoneComment' action",
        "prefix": "route53:UpdateHostedZoneComment"
    },
    "route53:UpdateTrafficPolicyComment": {
        "body": "route53:UpdateTrafficPolicyComment",
        "description": "Add 'route53:UpdateTrafficPolicyComment' action",
        "prefix": "route53:UpdateTrafficPolicyComment"
    },
    "route53:UpdateTrafficPolicyInstance": {
        "body": "route53:UpdateTrafficPolicyInstance",
        "description": "Add 'route53:UpdateTrafficPolicyInstance' action",
        "prefix": "route53:UpdateTrafficPolicyInstance"
    },
    "route53domains:CheckDomainAvailability": {
        "body": "route53domains:CheckDomainAvailability",
        "description": "Add 'route53domains:CheckDomainAvailability' action",
        "prefix": "route53domains:CheckDomainAvailability"
    },
    "route53domains:DeleteTagsForDomain": {
        "body": "route53domains:DeleteTagsForDomain",
        "description": "Add 'route53domains:DeleteTagsForDomain' action",
        "prefix": "route53domains:DeleteTagsForDomain"
    },
    "route53domains:DisableDomainAutoRenew": {
        "body": "route53domains:DisableDomainAutoRenew",
        "description": "Add 'route53domains:DisableDomainAutoRenew' action",
        "prefix": "route53domains:DisableDomainAutoRenew"
    },
    "route53domains:DisableDomainTransferLock": {
        "body": "route53domains:DisableDomainTransferLock",
        "description": "Add 'route53domains:DisableDomainTransferLock' action",
        "prefix": "route53domains:DisableDomainTransferLock"
    },
    "route53domains:EnableDomainAutoRenew": {
        "body": "route53domains:EnableDomainAutoRenew",
        "description": "Add 'route53domains:EnableDomainAutoRenew' action",
        "prefix": "route53domains:EnableDomainAutoRenew"
    },
    "route53domains:EnableDomainTransferLock": {
        "body": "route53domains:EnableDomainTransferLock",
        "description": "Add 'route53domains:EnableDomainTransferLock' action",
        "prefix": "route53domains:EnableDomainTransferLock"
    },
    "route53domains:GetContactReachabilityStatus": {
        "body": "route53domains:GetContactReachabilityStatus",
        "description": "Add 'route53domains:GetContactReachabilityStatus' action",
        "prefix": "route53domains:GetContactReachabilityStatus"
    },
    "route53domains:GetDomainDetail": {
        "body": "route53domains:GetDomainDetail",
        "description": "Add 'route53domains:GetDomainDetail' action",
        "prefix": "route53domains:GetDomainDetail"
    },
    "route53domains:GetDomainSuggestions": {
        "body": "route53domains:GetDomainSuggestions",
        "description": "Add 'route53domains:GetDomainSuggestions' action",
        "prefix": "route53domains:GetDomainSuggestions"
    },
    "route53domains:GetOperationDetail": {
        "body": "route53domains:GetOperationDetail",
        "description": "Add 'route53domains:GetOperationDetail' action",
        "prefix": "route53domains:GetOperationDetail"
    },
    "route53domains:ListDomains": {
        "body": "route53domains:ListDomains",
        "description": "Add 'route53domains:ListDomains' action",
        "prefix": "route53domains:ListDomains"
    },
    "route53domains:ListOperations": {
        "body": "route53domains:ListOperations",
        "description": "Add 'route53domains:ListOperations' action",
        "prefix": "route53domains:ListOperations"
    },
    "route53domains:ListTagsForDomain": {
        "body": "route53domains:ListTagsForDomain",
        "description": "Add 'route53domains:ListTagsForDomain' action",
        "prefix": "route53domains:ListTagsForDomain"
    },
    "route53domains:RegisterDomain": {
        "body": "route53domains:RegisterDomain",
        "description": "Add 'route53domains:RegisterDomain' action",
        "prefix": "route53domains:RegisterDomain"
    },
    "route53domains:RenewDomain": {
        "body": "route53domains:RenewDomain",
        "description": "Add 'route53domains:RenewDomain' action",
        "prefix": "route53domains:RenewDomain"
    },
    "route53domains:ResendContactReachabilityEmail": {
        "body": "route53domains:ResendContactReachabilityEmail",
        "description": "Add 'route53domains:ResendContactReachabilityEmail' action",
        "prefix": "route53domains:ResendContactReachabilityEmail"
    },
    "route53domains:RetrieveDomainAuthCode": {
        "body": "route53domains:RetrieveDomainAuthCode",
        "description": "Add 'route53domains:RetrieveDomainAuthCode' action",
        "prefix": "route53domains:RetrieveDomainAuthCode"
    },
    "route53domains:TransferDomain": {
        "body": "route53domains:TransferDomain",
        "description": "Add 'route53domains:TransferDomain' action",
        "prefix": "route53domains:TransferDomain"
    },
    "route53domains:UpdateDomainContact": {
        "body": "route53domains:UpdateDomainContact",
        "description": "Add 'route53domains:UpdateDomainContact' action",
        "prefix": "route53domains:UpdateDomainContact"
    },
    "route53domains:UpdateDomainContactPrivacy": {
        "body": "route53domains:UpdateDomainContactPrivacy",
        "description": "Add 'route53domains:UpdateDomainContactPrivacy' action",
        "prefix": "route53domains:UpdateDomainContactPrivacy"
    },
    "route53domains:UpdateDomainNameservers": {
        "body": "route53domains:UpdateDomainNameservers",
        "description": "Add 'route53domains:UpdateDomainNameservers' action",
        "prefix": "route53domains:UpdateDomainNameservers"
    },
    "route53domains:UpdateTagsForDomain": {
        "body": "route53domains:UpdateTagsForDomain",
        "description": "Add 'route53domains:UpdateTagsForDomain' action",
        "prefix": "route53domains:UpdateTagsForDomain"
    },
    "route53domains:ViewBilling": {
        "body": "route53domains:ViewBilling",
        "description": "Add 'route53domains:ViewBilling' action",
        "prefix": "route53domains:ViewBilling"
    },
    "s3:AbortMultipartUpload": {
        "body": "s3:AbortMultipartUpload",
        "description": "Add 's3:AbortMultipartUpload' action",
        "prefix": "s3:AbortMultipartUpload"
    },
    "s3:CreateBucket": {
        "body": "s3:CreateBucket",
        "description": "Add 's3:CreateBucket' action",
        "prefix": "s3:CreateBucket"
    },
    "s3:DeleteBucket": {
        "body": "s3:DeleteBucket",
        "description": "Add 's3:DeleteBucket' action",
        "prefix": "s3:DeleteBucket"
    },
    "s3:DeleteBucketPolicy": {
        "body": "s3:DeleteBucketPolicy",
        "description": "Add 's3:DeleteBucketPolicy' action",
        "prefix": "s3:DeleteBucketPolicy"
    },
    "s3:DeleteBucketWebsite": {
        "body": "s3:DeleteBucketWebsite",
        "description": "Add 's3:DeleteBucketWebsite' action",
        "prefix": "s3:DeleteBucketWebsite"
    },
    "s3:DeleteObject": {
        "body": "s3:DeleteObject",
        "description": "Add 's3:DeleteObject' action",
        "prefix": "s3:DeleteObject"
    },
    "s3:DeleteObjectTagging": {
        "body": "s3:DeleteObjectTagging",
        "description": "Add 's3:DeleteObjectTagging' action",
        "prefix": "s3:DeleteObjectTagging"
    },
    "s3:DeleteObjectVersion": {
        "body": "s3:DeleteObjectVersion",
        "description": "Add 's3:DeleteObjectVersion' action",
        "prefix": "s3:DeleteObjectVersion"
    },
    "s3:DeleteObjectVersionTagging": {
        "body": "s3:DeleteObjectVersionTagging",
        "description": "Add 's3:DeleteObjectVersionTagging' action",
        "prefix": "s3:DeleteObjectVersionTagging"
    },
    "s3:GetAccelerateConfiguration": {
        "body": "s3:GetAccelerateConfiguration",
        "description": "Add 's3:GetAccelerateConfiguration' action",
        "prefix": "s3:GetAccelerateConfiguration"
    },
    "s3:GetAnalyticsConfiguration": {
        "body": "s3:GetAnalyticsConfiguration",
        "description": "Add 's3:GetAnalyticsConfiguration' action",
        "prefix": "s3:GetAnalyticsConfiguration"
    },
    "s3:GetBucketAcl": {
        "body": "s3:GetBucketAcl",
        "description": "Add 's3:GetBucketAcl' action",
        "prefix": "s3:GetBucketAcl"
    },
    "s3:GetBucketCORS": {
        "body": "s3:GetBucketCORS",
        "description": "Add 's3:GetBucketCORS' action",
        "prefix": "s3:GetBucketCORS"
    },
    "s3:GetBucketLocation": {
        "body": "s3:GetBucketLocation",
        "description": "Add 's3:GetBucketLocation' action",
        "prefix": "s3:GetBucketLocation"
    },
    "s3:GetBucketLogging": {
        "body": "s3:GetBucketLogging",
        "description": "Add 's3:GetBucketLogging' action",
        "prefix": "s3:GetBucketLogging"
    },
    "s3:GetBucketNotification": {
        "body": "s3:GetBucketNotification",
        "description": "Add 's3:GetBucketNotification' action",
        "prefix": "s3:GetBucketNotification"
    },
    "s3:GetBucketPolicy": {
        "body": "s3:GetBucketPolicy",
        "description": "Add 's3:GetBucketPolicy' action",
        "prefix": "s3:GetBucketPolicy"
    },
    "s3:GetBucketRequestPayment": {
        "body": "s3:GetBucketRequestPayment",
        "description": "Add 's3:GetBucketRequestPayment' action",
        "prefix": "s3:GetBucketRequestPayment"
    },
    "s3:GetBucketTagging": {
        "body": "s3:GetBucketTagging",
        "description": "Add 's3:GetBucketTagging' action",
        "prefix": "s3:GetBucketTagging"
    },
    "s3:GetBucketVersioning": {
        "body": "s3:GetBucketVersioning",
        "description": "Add 's3:GetBucketVersioning' action",
        "prefix": "s3:GetBucketVersioning"
    },
    "s3:GetBucketWebsite": {
        "body": "s3:GetBucketWebsite",
        "description": "Add 's3:GetBucketWebsite' action",
        "prefix": "s3:GetBucketWebsite"
    },
    "s3:GetInventoryConfiguration": {
        "body": "s3:GetInventoryConfiguration",
        "description": "Add 's3:GetInventoryConfiguration' action",
        "prefix": "s3:GetInventoryConfiguration"
    },
    "s3:GetIpConfiguration": {
        "body": "s3:GetIpConfiguration",
        "description": "Add 's3:GetIpConfiguration' action",
        "prefix": "s3:GetIpConfiguration"
    },
    "s3:GetLifecycleConfiguration": {
        "body": "s3:GetLifecycleConfiguration",
        "description": "Add 's3:GetLifecycleConfiguration' action",
        "prefix": "s3:GetLifecycleConfiguration"
    },
    "s3:GetMetricsConfiguration": {
        "body": "s3:GetMetricsConfiguration",
        "description": "Add 's3:GetMetricsConfiguration' action",
        "prefix": "s3:GetMetricsConfiguration"
    },
    "s3:GetObject": {
        "body": "s3:GetObject",
        "description": "Add 's3:GetObject' action",
        "prefix": "s3:GetObject"
    },
    "s3:GetObjectAcl": {
        "body": "s3:GetObjectAcl",
        "description": "Add 's3:GetObjectAcl' action",
        "prefix": "s3:GetObjectAcl"
    },
    "s3:GetObjectTagging": {
        "body": "s3:GetObjectTagging",
        "description": "Add 's3:GetObjectTagging' action",
        "prefix": "s3:GetObjectTagging"
    },
    "s3:GetObjectTorrent": {
        "body": "s3:GetObjectTorrent",
        "description": "Add 's3:GetObjectTorrent' action",
        "prefix": "s3:GetObjectTorrent"
    },
    "s3:GetObjectVersion": {
        "body": "s3:GetObjectVersion",
        "description": "Add 's3:GetObjectVersion' action",
        "prefix": "s3:GetObjectVersion"
    },
    "s3:GetObjectVersionAcl": {
        "body": "s3:GetObjectVersionAcl",
        "description": "Add 's3:GetObjectVersionAcl' action",
        "prefix": "s3:GetObjectVersionAcl"
    },
    "s3:GetObjectVersionForReplication": {
        "body": "s3:GetObjectVersionForReplication",
        "description": "Add 's3:GetObjectVersionForReplication' action",
        "prefix": "s3:GetObjectVersionForReplication"
    },
    "s3:GetObjectVersionTagging": {
        "body": "s3:GetObjectVersionTagging",
        "description": "Add 's3:GetObjectVersionTagging' action",
        "prefix": "s3:GetObjectVersionTagging"
    },
    "s3:GetObjectVersionTorrent": {
        "body": "s3:GetObjectVersionTorrent",
        "description": "Add 's3:GetObjectVersionTorrent' action",
        "prefix": "s3:GetObjectVersionTorrent"
    },
    "s3:GetReplicationConfiguration": {
        "body": "s3:GetReplicationConfiguration",
        "description": "Add 's3:GetReplicationConfiguration' action",
        "prefix": "s3:GetReplicationConfiguration"
    },
    "s3:HeadBucket": {
        "body": "s3:HeadBucket",
        "description": "Add 's3:HeadBucket' action",
        "prefix": "s3:HeadBucket"
    },
    "s3:ListAllMyBuckets": {
        "body": "s3:ListAllMyBuckets",
        "description": "Add 's3:ListAllMyBuckets' action",
        "prefix": "s3:ListAllMyBuckets"
    },
    "s3:ListBucket": {
        "body": "s3:ListBucket",
        "description": "Add 's3:ListBucket' action",
        "prefix": "s3:ListBucket"
    },
    "s3:ListBucketByTags": {
        "body": "s3:ListBucketByTags",
        "description": "Add 's3:ListBucketByTags' action",
        "prefix": "s3:ListBucketByTags"
    },
    "s3:ListBucketMultipartUploads": {
        "body": "s3:ListBucketMultipartUploads",
        "description": "Add 's3:ListBucketMultipartUploads' action",
        "prefix": "s3:ListBucketMultipartUploads"
    },
    "s3:ListBucketVersions": {
        "body": "s3:ListBucketVersions",
        "description": "Add 's3:ListBucketVersions' action",
        "prefix": "s3:ListBucketVersions"
    },
    "s3:ListMultipartUploadParts": {
        "body": "s3:ListMultipartUploadParts",
        "description": "Add 's3:ListMultipartUploadParts' action",
        "prefix": "s3:ListMultipartUploadParts"
    },
    "s3:ListObjects": {
        "body": "s3:ListObjects",
        "description": "Add 's3:ListObjects' action",
        "prefix": "s3:ListObjects"
    },
    "s3:ObjectOwnerOverrideToBucketOwner": {
        "body": "s3:ObjectOwnerOverrideToBucketOwner",
        "description": "Add 's3:ObjectOwnerOverrideToBucketOwner' action",
        "prefix": "s3:ObjectOwnerOverrideToBucketOwner"
    },
    "s3:PutAccelerateConfiguration": {
        "body": "s3:PutAccelerateConfiguration",
        "description": "Add 's3:PutAccelerateConfiguration' action",
        "prefix": "s3:PutAccelerateConfiguration"
    },
    "s3:PutAnalyticsConfiguration": {
        "body": "s3:PutAnalyticsConfiguration",
        "description": "Add 's3:PutAnalyticsConfiguration' action",
        "prefix": "s3:PutAnalyticsConfiguration"
    },
    "s3:PutBucketAcl": {
        "body": "s3:PutBucketAcl",
        "description": "Add 's3:PutBucketAcl' action",
        "prefix": "s3:PutBucketAcl"
    },
    "s3:PutBucketCORS": {
        "body": "s3:PutBucketCORS",
        "description": "Add 's3:PutBucketCORS' action",
        "prefix": "s3:PutBucketCORS"
    },
    "s3:PutBucketLogging": {
        "body": "s3:PutBucketLogging",
        "description": "Add 's3:PutBucketLogging' action",
        "prefix": "s3:PutBucketLogging"
    },
    "s3:PutBucketNotification": {
        "body": "s3:PutBucketNotification",
        "description": "Add 's3:PutBucketNotification' action",
        "prefix": "s3:PutBucketNotification"
    },
    "s3:PutBucketPolicy": {
        "body": "s3:PutBucketPolicy",
        "description": "Add 's3:PutBucketPolicy' action",
        "prefix": "s3:PutBucketPolicy"
    },
    "s3:PutBucketRequestPayment": {
        "body": "s3:PutBucketRequestPayment",
        "description": "Add 's3:PutBucketRequestPayment' action",
        "prefix": "s3:PutBucketRequestPayment"
    },
    "s3:PutBucketTagging": {
        "body": "s3:PutBucketTagging",
        "description": "Add 's3:PutBucketTagging' action",
        "prefix": "s3:PutBucketTagging"
    },
    "s3:PutBucketVersioning": {
        "body": "s3:PutBucketVersioning",
        "description": "Add 's3:PutBucketVersioning' action",
        "prefix": "s3:PutBucketVersioning"
    },
    "s3:PutBucketWebsite": {
        "body": "s3:PutBucketWebsite",
        "description": "Add 's3:PutBucketWebsite' action",
        "prefix": "s3:PutBucketWebsite"
    },
    "s3:PutInventoryConfiguration": {
        "body": "s3:PutInventoryConfiguration",
        "description": "Add 's3:PutInventoryConfiguration' action",
        "prefix": "s3:PutInventoryConfiguration"
    },
    "s3:PutIpConfiguration": {
        "body": "s3:PutIpConfiguration",
        "description": "Add 's3:PutIpConfiguration' action",
        "prefix": "s3:PutIpConfiguration"
    },
    "s3:PutLifecycleConfiguration": {
        "body": "s3:PutLifecycleConfiguration",
        "description": "Add 's3:PutLifecycleConfiguration' action",
        "prefix": "s3:PutLifecycleConfiguration"
    },
    "s3:PutMetricsConfiguration": {
        "body": "s3:PutMetricsConfiguration",
        "description": "Add 's3:PutMetricsConfiguration' action",
        "prefix": "s3:PutMetricsConfiguration"
    },
    "s3:PutObject": {
        "body": "s3:PutObject",
        "description": "Add 's3:PutObject' action",
        "prefix": "s3:PutObject"
    },
    "s3:PutObjectAcl": {
        "body": "s3:PutObjectAcl",
        "description": "Add 's3:PutObjectAcl' action",
        "prefix": "s3:PutObjectAcl"
    },
    "s3:PutObjectTagging": {
        "body": "s3:PutObjectTagging",
        "description": "Add 's3:PutObjectTagging' action",
        "prefix": "s3:PutObjectTagging"
    },
    "s3:PutObjectVersionAcl": {
        "body": "s3:PutObjectVersionAcl",
        "description": "Add 's3:PutObjectVersionAcl' action",
        "prefix": "s3:PutObjectVersionAcl"
    },
    "s3:PutObjectVersionTagging": {
        "body": "s3:PutObjectVersionTagging",
        "description": "Add 's3:PutObjectVersionTagging' action",
        "prefix": "s3:PutObjectVersionTagging"
    },
    "s3:PutReplicationConfiguration": {
        "body": "s3:PutReplicationConfiguration",
        "description": "Add 's3:PutReplicationConfiguration' action",
        "prefix": "s3:PutReplicationConfiguration"
    },
    "s3:ReplicateDelete": {
        "body": "s3:ReplicateDelete",
        "description": "Add 's3:ReplicateDelete' action",
        "prefix": "s3:ReplicateDelete"
    },
    "s3:ReplicateObject": {
        "body": "s3:ReplicateObject",
        "description": "Add 's3:ReplicateObject' action",
        "prefix": "s3:ReplicateObject"
    },
    "s3:ReplicateTags": {
        "body": "s3:ReplicateTags",
        "description": "Add 's3:ReplicateTags' action",
        "prefix": "s3:ReplicateTags"
    },
    "s3:RestoreObject": {
        "body": "s3:RestoreObject",
        "description": "Add 's3:RestoreObject' action",
        "prefix": "s3:RestoreObject"
    },
    "sagemaker:AddTags": {
        "body": "sagemaker:AddTags",
        "description": "Add 'sagemaker:AddTags' action",
        "prefix": "sagemaker:AddTags"
    },
    "sagemaker:CreateEndpoint": {
        "body": "sagemaker:CreateEndpoint",
        "description": "Add 'sagemaker:CreateEndpoint' action",
        "prefix": "sagemaker:CreateEndpoint"
    },
    "sagemaker:CreateEndpointConfig": {
        "body": "sagemaker:CreateEndpointConfig",
        "description": "Add 'sagemaker:CreateEndpointConfig' action",
        "prefix": "sagemaker:CreateEndpointConfig"
    },
    "sagemaker:CreateModel": {
        "body": "sagemaker:CreateModel",
        "description": "Add 'sagemaker:CreateModel' action",
        "prefix": "sagemaker:CreateModel"
    },
    "sagemaker:CreateNotebookInstance": {
        "body": "sagemaker:CreateNotebookInstance",
        "description": "Add 'sagemaker:CreateNotebookInstance' action",
        "prefix": "sagemaker:CreateNotebookInstance"
    },
    "sagemaker:CreatePresignedNotebookInstanceUrl": {
        "body": "sagemaker:CreatePresignedNotebookInstanceUrl",
        "description": "Add 'sagemaker:CreatePresignedNotebookInstanceUrl' action",
        "prefix": "sagemaker:CreatePresignedNotebookInstanceUrl"
    },
    "sagemaker:CreateTrainingJob": {
        "body": "sagemaker:CreateTrainingJob",
        "description": "Add 'sagemaker:CreateTrainingJob' action",
        "prefix": "sagemaker:CreateTrainingJob"
    },
    "sagemaker:DeleteEndpoint": {
        "body": "sagemaker:DeleteEndpoint",
        "description": "Add 'sagemaker:DeleteEndpoint' action",
        "prefix": "sagemaker:DeleteEndpoint"
    },
    "sagemaker:DeleteEndpointConfig": {
        "body": "sagemaker:DeleteEndpointConfig",
        "description": "Add 'sagemaker:DeleteEndpointConfig' action",
        "prefix": "sagemaker:DeleteEndpointConfig"
    },
    "sagemaker:DeleteModel": {
        "body": "sagemaker:DeleteModel",
        "description": "Add 'sagemaker:DeleteModel' action",
        "prefix": "sagemaker:DeleteModel"
    },
    "sagemaker:DeleteNotebookInstance": {
        "body": "sagemaker:DeleteNotebookInstance",
        "description": "Add 'sagemaker:DeleteNotebookInstance' action",
        "prefix": "sagemaker:DeleteNotebookInstance"
    },
    "sagemaker:DeleteTags": {
        "body": "sagemaker:DeleteTags",
        "description": "Add 'sagemaker:DeleteTags' action",
        "prefix": "sagemaker:DeleteTags"
    },
    "sagemaker:DescribeEndpoint": {
        "body": "sagemaker:DescribeEndpoint",
        "description": "Add 'sagemaker:DescribeEndpoint' action",
        "prefix": "sagemaker:DescribeEndpoint"
    },
    "sagemaker:DescribeEndpointConfig": {
        "body": "sagemaker:DescribeEndpointConfig",
        "description": "Add 'sagemaker:DescribeEndpointConfig' action",
        "prefix": "sagemaker:DescribeEndpointConfig"
    },
    "sagemaker:DescribeModel": {
        "body": "sagemaker:DescribeModel",
        "description": "Add 'sagemaker:DescribeModel' action",
        "prefix": "sagemaker:DescribeModel"
    },
    "sagemaker:DescribeNotebookInstance": {
        "body": "sagemaker:DescribeNotebookInstance",
        "description": "Add 'sagemaker:DescribeNotebookInstance' action",
        "prefix": "sagemaker:DescribeNotebookInstance"
    },
    "sagemaker:DescribeTrainingJob": {
        "body": "sagemaker:DescribeTrainingJob",
        "description": "Add 'sagemaker:DescribeTrainingJob' action",
        "prefix": "sagemaker:DescribeTrainingJob"
    },
    "sagemaker:InvokeEndpoint": {
        "body": "sagemaker:InvokeEndpoint",
        "description": "Add 'sagemaker:InvokeEndpoint' action",
        "prefix": "sagemaker:InvokeEndpoint"
    },
    "sagemaker:ListEndpointConfigs": {
        "body": "sagemaker:ListEndpointConfigs",
        "description": "Add 'sagemaker:ListEndpointConfigs' action",
        "prefix": "sagemaker:ListEndpointConfigs"
    },
    "sagemaker:ListEndpoints": {
        "body": "sagemaker:ListEndpoints",
        "description": "Add 'sagemaker:ListEndpoints' action",
        "prefix": "sagemaker:ListEndpoints"
    },
    "sagemaker:ListModels": {
        "body": "sagemaker:ListModels",
        "description": "Add 'sagemaker:ListModels' action",
        "prefix": "sagemaker:ListModels"
    },
    "sagemaker:ListNotebookInstances": {
        "body": "sagemaker:ListNotebookInstances",
        "description": "Add 'sagemaker:ListNotebookInstances' action",
        "prefix": "sagemaker:ListNotebookInstances"
    },
    "sagemaker:ListTags": {
        "body": "sagemaker:ListTags",
        "description": "Add 'sagemaker:ListTags' action",
        "prefix": "sagemaker:ListTags"
    },
    "sagemaker:ListTrainingJobs": {
        "body": "sagemaker:ListTrainingJobs",
        "description": "Add 'sagemaker:ListTrainingJobs' action",
        "prefix": "sagemaker:ListTrainingJobs"
    },
    "sagemaker:StartNotebookInstance": {
        "body": "sagemaker:StartNotebookInstance",
        "description": "Add 'sagemaker:StartNotebookInstance' action",
        "prefix": "sagemaker:StartNotebookInstance"
    },
    "sagemaker:StopNotebookInstance": {
        "body": "sagemaker:StopNotebookInstance",
        "description": "Add 'sagemaker:StopNotebookInstance' action",
        "prefix": "sagemaker:StopNotebookInstance"
    },
    "sagemaker:StopTrainingJob": {
        "body": "sagemaker:StopTrainingJob",
        "description": "Add 'sagemaker:StopTrainingJob' action",
        "prefix": "sagemaker:StopTrainingJob"
    },
    "sagemaker:UpdateEndpoint": {
        "body": "sagemaker:UpdateEndpoint",
        "description": "Add 'sagemaker:UpdateEndpoint' action",
        "prefix": "sagemaker:UpdateEndpoint"
    },
    "sagemaker:UpdateEndpointWeightsAndCapacities": {
        "body": "sagemaker:UpdateEndpointWeightsAndCapacities",
        "description": "Add 'sagemaker:UpdateEndpointWeightsAndCapacities' action",
        "prefix": "sagemaker:UpdateEndpointWeightsAndCapacities"
    },
    "sagemaker:UpdateNotebookInstance": {
        "body": "sagemaker:UpdateNotebookInstance",
        "description": "Add 'sagemaker:UpdateNotebookInstance' action",
        "prefix": "sagemaker:UpdateNotebookInstance"
    },
    "sdb:BatchDeleteAttributes": {
        "body": "sdb:BatchDeleteAttributes",
        "description": "Add 'sdb:BatchDeleteAttributes' action",
        "prefix": "sdb:BatchDeleteAttributes"
    },
    "sdb:BatchPutAttributes": {
        "body": "sdb:BatchPutAttributes",
        "description": "Add 'sdb:BatchPutAttributes' action",
        "prefix": "sdb:BatchPutAttributes"
    },
    "sdb:CreateDomain": {
        "body": "sdb:CreateDomain",
        "description": "Add 'sdb:CreateDomain' action",
        "prefix": "sdb:CreateDomain"
    },
    "sdb:DeleteAttributes": {
        "body": "sdb:DeleteAttributes",
        "description": "Add 'sdb:DeleteAttributes' action",
        "prefix": "sdb:DeleteAttributes"
    },
    "sdb:DeleteDomain": {
        "body": "sdb:DeleteDomain",
        "description": "Add 'sdb:DeleteDomain' action",
        "prefix": "sdb:DeleteDomain"
    },
    "sdb:DomainMetadata": {
        "body": "sdb:DomainMetadata",
        "description": "Add 'sdb:DomainMetadata' action",
        "prefix": "sdb:DomainMetadata"
    },
    "sdb:GetAttributes": {
        "body": "sdb:GetAttributes",
        "description": "Add 'sdb:GetAttributes' action",
        "prefix": "sdb:GetAttributes"
    },
    "sdb:ListDomains": {
        "body": "sdb:ListDomains",
        "description": "Add 'sdb:ListDomains' action",
        "prefix": "sdb:ListDomains"
    },
    "sdb:PutAttributes": {
        "body": "sdb:PutAttributes",
        "description": "Add 'sdb:PutAttributes' action",
        "prefix": "sdb:PutAttributes"
    },
    "sdb:Select": {
        "body": "sdb:Select",
        "description": "Add 'sdb:Select' action",
        "prefix": "sdb:Select"
    },
    "serverlessrepo:CreateApplication": {
        "body": "serverlessrepo:CreateApplication",
        "description": "Add 'serverlessrepo:CreateApplication' action",
        "prefix": "serverlessrepo:CreateApplication"
    },
    "serverlessrepo:CreateApplicationVersion": {
        "body": "serverlessrepo:CreateApplicationVersion",
        "description": "Add 'serverlessrepo:CreateApplicationVersion' action",
        "prefix": "serverlessrepo:CreateApplicationVersion"
    },
    "serverlessrepo:CreateCloudFormationChangeSet": {
        "body": "serverlessrepo:CreateCloudFormationChangeSet",
        "description": "Add 'serverlessrepo:CreateCloudFormationChangeSet' action",
        "prefix": "serverlessrepo:CreateCloudFormationChangeSet"
    },
    "serverlessrepo:DeleteApplication": {
        "body": "serverlessrepo:DeleteApplication",
        "description": "Add 'serverlessrepo:DeleteApplication' action",
        "prefix": "serverlessrepo:DeleteApplication"
    },
    "serverlessrepo:GetApplication": {
        "body": "serverlessrepo:GetApplication",
        "description": "Add 'serverlessrepo:GetApplication' action",
        "prefix": "serverlessrepo:GetApplication"
    },
    "serverlessrepo:GetApplicationPolicy": {
        "body": "serverlessrepo:GetApplicationPolicy",
        "description": "Add 'serverlessrepo:GetApplicationPolicy' action",
        "prefix": "serverlessrepo:GetApplicationPolicy"
    },
    "serverlessrepo:ListApplicationVersions": {
        "body": "serverlessrepo:ListApplicationVersions",
        "description": "Add 'serverlessrepo:ListApplicationVersions' action",
        "prefix": "serverlessrepo:ListApplicationVersions"
    },
    "serverlessrepo:ListApplications": {
        "body": "serverlessrepo:ListApplications",
        "description": "Add 'serverlessrepo:ListApplications' action",
        "prefix": "serverlessrepo:ListApplications"
    },
    "serverlessrepo:PutApplicationPolicy": {
        "body": "serverlessrepo:PutApplicationPolicy",
        "description": "Add 'serverlessrepo:PutApplicationPolicy' action",
        "prefix": "serverlessrepo:PutApplicationPolicy"
    },
    "serverlessrepo:SearchApplications": {
        "body": "serverlessrepo:SearchApplications",
        "description": "Add 'serverlessrepo:SearchApplications' action",
        "prefix": "serverlessrepo:SearchApplications"
    },
    "serverlessrepo:UpdateApplication": {
        "body": "serverlessrepo:UpdateApplication",
        "description": "Add 'serverlessrepo:UpdateApplication' action",
        "prefix": "serverlessrepo:UpdateApplication"
    },
    "servicecatalog:AcceptPortfolioShare": {
        "body": "servicecatalog:AcceptPortfolioShare",
        "description": "Add 'servicecatalog:AcceptPortfolioShare' action",
        "prefix": "servicecatalog:AcceptPortfolioShare"
    },
    "servicecatalog:AssociatePrincipalWithPortfolio": {
        "body": "servicecatalog:AssociatePrincipalWithPortfolio",
        "description": "Add 'servicecatalog:AssociatePrincipalWithPortfolio' action",
        "prefix": "servicecatalog:AssociatePrincipalWithPortfolio"
    },
    "servicecatalog:AssociateProductWithPortfolio": {
        "body": "servicecatalog:AssociateProductWithPortfolio",
        "description": "Add 'servicecatalog:AssociateProductWithPortfolio' action",
        "prefix": "servicecatalog:AssociateProductWithPortfolio"
    },
    "servicecatalog:CreateConstraint": {
        "body": "servicecatalog:CreateConstraint",
        "description": "Add 'servicecatalog:CreateConstraint' action",
        "prefix": "servicecatalog:CreateConstraint"
    },
    "servicecatalog:CreatePortfolio": {
        "body": "servicecatalog:CreatePortfolio",
        "description": "Add 'servicecatalog:CreatePortfolio' action",
        "prefix": "servicecatalog:CreatePortfolio"
    },
    "servicecatalog:CreatePortfolioShare": {
        "body": "servicecatalog:CreatePortfolioShare",
        "description": "Add 'servicecatalog:CreatePortfolioShare' action",
        "prefix": "servicecatalog:CreatePortfolioShare"
    },
    "servicecatalog:CreateProduct": {
        "body": "servicecatalog:CreateProduct",
        "description": "Add 'servicecatalog:CreateProduct' action",
        "prefix": "servicecatalog:CreateProduct"
    },
    "servicecatalog:CreateProvisioningArtifact": {
        "body": "servicecatalog:CreateProvisioningArtifact",
        "description": "Add 'servicecatalog:CreateProvisioningArtifact' action",
        "prefix": "servicecatalog:CreateProvisioningArtifact"
    },
    "servicecatalog:DeleteConstraint": {
        "body": "servicecatalog:DeleteConstraint",
        "description": "Add 'servicecatalog:DeleteConstraint' action",
        "prefix": "servicecatalog:DeleteConstraint"
    },
    "servicecatalog:DeletePortfolio": {
        "body": "servicecatalog:DeletePortfolio",
        "description": "Add 'servicecatalog:DeletePortfolio' action",
        "prefix": "servicecatalog:DeletePortfolio"
    },
    "servicecatalog:DeletePortfolioShare": {
        "body": "servicecatalog:DeletePortfolioShare",
        "description": "Add 'servicecatalog:DeletePortfolioShare' action",
        "prefix": "servicecatalog:DeletePortfolioShare"
    },
    "servicecatalog:DeleteProduct": {
        "body": "servicecatalog:DeleteProduct",
        "description": "Add 'servicecatalog:DeleteProduct' action",
        "prefix": "servicecatalog:DeleteProduct"
    },
    "servicecatalog:DeleteProvisioningArtifact": {
        "body": "servicecatalog:DeleteProvisioningArtifact",
        "description": "Add 'servicecatalog:DeleteProvisioningArtifact' action",
        "prefix": "servicecatalog:DeleteProvisioningArtifact"
    },
    "servicecatalog:DescribeConstraint": {
        "body": "servicecatalog:DescribeConstraint",
        "description": "Add 'servicecatalog:DescribeConstraint' action",
        "prefix": "servicecatalog:DescribeConstraint"
    },
    "servicecatalog:DescribePortfolio": {
        "body": "servicecatalog:DescribePortfolio",
        "description": "Add 'servicecatalog:DescribePortfolio' action",
        "prefix": "servicecatalog:DescribePortfolio"
    },
    "servicecatalog:DescribeProduct": {
        "body": "servicecatalog:DescribeProduct",
        "description": "Add 'servicecatalog:DescribeProduct' action",
        "prefix": "servicecatalog:DescribeProduct"
    },
    "servicecatalog:DescribeProductAsAdmin": {
        "body": "servicecatalog:DescribeProductAsAdmin",
        "description": "Add 'servicecatalog:DescribeProductAsAdmin' action",
        "prefix": "servicecatalog:DescribeProductAsAdmin"
    },
    "servicecatalog:DescribeProductView": {
        "body": "servicecatalog:DescribeProductView",
        "description": "Add 'servicecatalog:DescribeProductView' action",
        "prefix": "servicecatalog:DescribeProductView"
    },
    "servicecatalog:DescribeProvisioningArtifact": {
        "body": "servicecatalog:DescribeProvisioningArtifact",
        "description": "Add 'servicecatalog:DescribeProvisioningArtifact' action",
        "prefix": "servicecatalog:DescribeProvisioningArtifact"
    },
    "servicecatalog:DescribeProvisioningParameters": {
        "body": "servicecatalog:DescribeProvisioningParameters",
        "description": "Add 'servicecatalog:DescribeProvisioningParameters' action",
        "prefix": "servicecatalog:DescribeProvisioningParameters"
    },
    "servicecatalog:DescribeRecord": {
        "body": "servicecatalog:DescribeRecord",
        "description": "Add 'servicecatalog:DescribeRecord' action",
        "prefix": "servicecatalog:DescribeRecord"
    },
    "servicecatalog:DisassociatePrincipalFromPortfolio": {
        "body": "servicecatalog:DisassociatePrincipalFromPortfolio",
        "description": "Add 'servicecatalog:DisassociatePrincipalFromPortfolio' action",
        "prefix": "servicecatalog:DisassociatePrincipalFromPortfolio"
    },
    "servicecatalog:DisassociateProductFromPortfolio": {
        "body": "servicecatalog:DisassociateProductFromPortfolio",
        "description": "Add 'servicecatalog:DisassociateProductFromPortfolio' action",
        "prefix": "servicecatalog:DisassociateProductFromPortfolio"
    },
    "servicecatalog:ListAcceptedPortfolioShares": {
        "body": "servicecatalog:ListAcceptedPortfolioShares",
        "description": "Add 'servicecatalog:ListAcceptedPortfolioShares' action",
        "prefix": "servicecatalog:ListAcceptedPortfolioShares"
    },
    "servicecatalog:ListConstraintsForPortfolio": {
        "body": "servicecatalog:ListConstraintsForPortfolio",
        "description": "Add 'servicecatalog:ListConstraintsForPortfolio' action",
        "prefix": "servicecatalog:ListConstraintsForPortfolio"
    },
    "servicecatalog:ListLaunchPaths": {
        "body": "servicecatalog:ListLaunchPaths",
        "description": "Add 'servicecatalog:ListLaunchPaths' action",
        "prefix": "servicecatalog:ListLaunchPaths"
    },
    "servicecatalog:ListPortfolioAccess": {
        "body": "servicecatalog:ListPortfolioAccess",
        "description": "Add 'servicecatalog:ListPortfolioAccess' action",
        "prefix": "servicecatalog:ListPortfolioAccess"
    },
    "servicecatalog:ListPortfolios": {
        "body": "servicecatalog:ListPortfolios",
        "description": "Add 'servicecatalog:ListPortfolios' action",
        "prefix": "servicecatalog:ListPortfolios"
    },
    "servicecatalog:ListPortfoliosForProduct": {
        "body": "servicecatalog:ListPortfoliosForProduct",
        "description": "Add 'servicecatalog:ListPortfoliosForProduct' action",
        "prefix": "servicecatalog:ListPortfoliosForProduct"
    },
    "servicecatalog:ListPrincipalsForPortfolio": {
        "body": "servicecatalog:ListPrincipalsForPortfolio",
        "description": "Add 'servicecatalog:ListPrincipalsForPortfolio' action",
        "prefix": "servicecatalog:ListPrincipalsForPortfolio"
    },
    "servicecatalog:ListProvisioningArtifacts": {
        "body": "servicecatalog:ListProvisioningArtifacts",
        "description": "Add 'servicecatalog:ListProvisioningArtifacts' action",
        "prefix": "servicecatalog:ListProvisioningArtifacts"
    },
    "servicecatalog:ListRecordHistory": {
        "body": "servicecatalog:ListRecordHistory",
        "description": "Add 'servicecatalog:ListRecordHistory' action",
        "prefix": "servicecatalog:ListRecordHistory"
    },
    "servicecatalog:ProvisionProduct": {
        "body": "servicecatalog:ProvisionProduct",
        "description": "Add 'servicecatalog:ProvisionProduct' action",
        "prefix": "servicecatalog:ProvisionProduct"
    },
    "servicecatalog:RejectPortfolioShare": {
        "body": "servicecatalog:RejectPortfolioShare",
        "description": "Add 'servicecatalog:RejectPortfolioShare' action",
        "prefix": "servicecatalog:RejectPortfolioShare"
    },
    "servicecatalog:ScanProvisionedProducts": {
        "body": "servicecatalog:ScanProvisionedProducts",
        "description": "Add 'servicecatalog:ScanProvisionedProducts' action",
        "prefix": "servicecatalog:ScanProvisionedProducts"
    },
    "servicecatalog:SearchProducts": {
        "body": "servicecatalog:SearchProducts",
        "description": "Add 'servicecatalog:SearchProducts' action",
        "prefix": "servicecatalog:SearchProducts"
    },
    "servicecatalog:SearchProductsAsAdmin": {
        "body": "servicecatalog:SearchProductsAsAdmin",
        "description": "Add 'servicecatalog:SearchProductsAsAdmin' action",
        "prefix": "servicecatalog:SearchProductsAsAdmin"
    },
    "servicecatalog:TerminateProvisionedProduct": {
        "body": "servicecatalog:TerminateProvisionedProduct",
        "description": "Add 'servicecatalog:TerminateProvisionedProduct' action",
        "prefix": "servicecatalog:TerminateProvisionedProduct"
    },
    "servicecatalog:UpdateConstraint": {
        "body": "servicecatalog:UpdateConstraint",
        "description": "Add 'servicecatalog:UpdateConstraint' action",
        "prefix": "servicecatalog:UpdateConstraint"
    },
    "servicecatalog:UpdatePortfolio": {
        "body": "servicecatalog:UpdatePortfolio",
        "description": "Add 'servicecatalog:UpdatePortfolio' action",
        "prefix": "servicecatalog:UpdatePortfolio"
    },
    "servicecatalog:UpdateProduct": {
        "body": "servicecatalog:UpdateProduct",
        "description": "Add 'servicecatalog:UpdateProduct' action",
        "prefix": "servicecatalog:UpdateProduct"
    },
    "servicecatalog:UpdateProvisionedProduct": {
        "body": "servicecatalog:UpdateProvisionedProduct",
        "description": "Add 'servicecatalog:UpdateProvisionedProduct' action",
        "prefix": "servicecatalog:UpdateProvisionedProduct"
    },
    "servicecatalog:UpdateProvisioningArtifact": {
        "body": "servicecatalog:UpdateProvisioningArtifact",
        "description": "Add 'servicecatalog:UpdateProvisioningArtifact' action",
        "prefix": "servicecatalog:UpdateProvisioningArtifact"
    },
    "servicediscovery:CreatePrivateDnsNamespace": {
        "body": "servicediscovery:CreatePrivateDnsNamespace",
        "description": "Add 'servicediscovery:CreatePrivateDnsNamespace' action",
        "prefix": "servicediscovery:CreatePrivateDnsNamespace"
    },
    "servicediscovery:CreatePublicDnsNamespace": {
        "body": "servicediscovery:CreatePublicDnsNamespace",
        "description": "Add 'servicediscovery:CreatePublicDnsNamespace' action",
        "prefix": "servicediscovery:CreatePublicDnsNamespace"
    },
    "servicediscovery:CreateService": {
        "body": "servicediscovery:CreateService",
        "description": "Add 'servicediscovery:CreateService' action",
        "prefix": "servicediscovery:CreateService"
    },
    "servicediscovery:DeleteNamespace": {
        "body": "servicediscovery:DeleteNamespace",
        "description": "Add 'servicediscovery:DeleteNamespace' action",
        "prefix": "servicediscovery:DeleteNamespace"
    },
    "servicediscovery:DeleteService": {
        "body": "servicediscovery:DeleteService",
        "description": "Add 'servicediscovery:DeleteService' action",
        "prefix": "servicediscovery:DeleteService"
    },
    "servicediscovery:DeregisterInstance": {
        "body": "servicediscovery:DeregisterInstance",
        "description": "Add 'servicediscovery:DeregisterInstance' action",
        "prefix": "servicediscovery:DeregisterInstance"
    },
    "servicediscovery:GetInstance": {
        "body": "servicediscovery:GetInstance",
        "description": "Add 'servicediscovery:GetInstance' action",
        "prefix": "servicediscovery:GetInstance"
    },
    "servicediscovery:GetInstancesHealthStatus": {
        "body": "servicediscovery:GetInstancesHealthStatus",
        "description": "Add 'servicediscovery:GetInstancesHealthStatus' action",
        "prefix": "servicediscovery:GetInstancesHealthStatus"
    },
    "servicediscovery:GetNamespace": {
        "body": "servicediscovery:GetNamespace",
        "description": "Add 'servicediscovery:GetNamespace' action",
        "prefix": "servicediscovery:GetNamespace"
    },
    "servicediscovery:GetOperation": {
        "body": "servicediscovery:GetOperation",
        "description": "Add 'servicediscovery:GetOperation' action",
        "prefix": "servicediscovery:GetOperation"
    },
    "servicediscovery:GetService": {
        "body": "servicediscovery:GetService",
        "description": "Add 'servicediscovery:GetService' action",
        "prefix": "servicediscovery:GetService"
    },
    "servicediscovery:ListInstances": {
        "body": "servicediscovery:ListInstances",
        "description": "Add 'servicediscovery:ListInstances' action",
        "prefix": "servicediscovery:ListInstances"
    },
    "servicediscovery:ListNamespaces": {
        "body": "servicediscovery:ListNamespaces",
        "description": "Add 'servicediscovery:ListNamespaces' action",
        "prefix": "servicediscovery:ListNamespaces"
    },
    "servicediscovery:ListOperations": {
        "body": "servicediscovery:ListOperations",
        "description": "Add 'servicediscovery:ListOperations' action",
        "prefix": "servicediscovery:ListOperations"
    },
    "servicediscovery:ListServices": {
        "body": "servicediscovery:ListServices",
        "description": "Add 'servicediscovery:ListServices' action",
        "prefix": "servicediscovery:ListServices"
    },
    "servicediscovery:RegisterInstance": {
        "body": "servicediscovery:RegisterInstance",
        "description": "Add 'servicediscovery:RegisterInstance' action",
        "prefix": "servicediscovery:RegisterInstance"
    },
    "servicediscovery:UpdateInstanceHeartbeatStatus": {
        "body": "servicediscovery:UpdateInstanceHeartbeatStatus",
        "description": "Add 'servicediscovery:UpdateInstanceHeartbeatStatus' action",
        "prefix": "servicediscovery:UpdateInstanceHeartbeatStatus"
    },
    "servicediscovery:UpdateService": {
        "body": "servicediscovery:UpdateService",
        "description": "Add 'servicediscovery:UpdateService' action",
        "prefix": "servicediscovery:UpdateService"
    },
    "ses:CloneReceiptRuleSet": {
        "body": "ses:CloneReceiptRuleSet",
        "description": "Add 'ses:CloneReceiptRuleSet' action",
        "prefix": "ses:CloneReceiptRuleSet"
    },
    "ses:CreateConfigurationSet": {
        "body": "ses:CreateConfigurationSet",
        "description": "Add 'ses:CreateConfigurationSet' action",
        "prefix": "ses:CreateConfigurationSet"
    },
    "ses:CreateConfigurationSetEventDestination": {
        "body": "ses:CreateConfigurationSetEventDestination",
        "description": "Add 'ses:CreateConfigurationSetEventDestination' action",
        "prefix": "ses:CreateConfigurationSetEventDestination"
    },
    "ses:CreateConfigurationSetTrackingOptions": {
        "body": "ses:CreateConfigurationSetTrackingOptions",
        "description": "Add 'ses:CreateConfigurationSetTrackingOptions' action",
        "prefix": "ses:CreateConfigurationSetTrackingOptions"
    },
    "ses:CreateCustomVerificationEmailTemplate": {
        "body": "ses:CreateCustomVerificationEmailTemplate",
        "description": "Add 'ses:CreateCustomVerificationEmailTemplate' action",
        "prefix": "ses:CreateCustomVerificationEmailTemplate"
    },
    "ses:CreateReceiptFilter": {
        "body": "ses:CreateReceiptFilter",
        "description": "Add 'ses:CreateReceiptFilter' action",
        "prefix": "ses:CreateReceiptFilter"
    },
    "ses:CreateReceiptRule": {
        "body": "ses:CreateReceiptRule",
        "description": "Add 'ses:CreateReceiptRule' action",
        "prefix": "ses:CreateReceiptRule"
    },
    "ses:CreateReceiptRuleSet": {
        "body": "ses:CreateReceiptRuleSet",
        "description": "Add 'ses:CreateReceiptRuleSet' action",
        "prefix": "ses:CreateReceiptRuleSet"
    },
    "ses:CreateTemplate": {
        "body": "ses:CreateTemplate",
        "description": "Add 'ses:CreateTemplate' action",
        "prefix": "ses:CreateTemplate"
    },
    "ses:DeleteConfigurationSet": {
        "body": "ses:DeleteConfigurationSet",
        "description": "Add 'ses:DeleteConfigurationSet' action",
        "prefix": "ses:DeleteConfigurationSet"
    },
    "ses:DeleteConfigurationSetEventDestination": {
        "body": "ses:DeleteConfigurationSetEventDestination",
        "description": "Add 'ses:DeleteConfigurationSetEventDestination' action",
        "prefix": "ses:DeleteConfigurationSetEventDestination"
    },
    "ses:DeleteConfigurationSetTrackingOptions": {
        "body": "ses:DeleteConfigurationSetTrackingOptions",
        "description": "Add 'ses:DeleteConfigurationSetTrackingOptions' action",
        "prefix": "ses:DeleteConfigurationSetTrackingOptions"
    },
    "ses:DeleteCustomVerificationEmailTemplate": {
        "body": "ses:DeleteCustomVerificationEmailTemplate",
        "description": "Add 'ses:DeleteCustomVerificationEmailTemplate' action",
        "prefix": "ses:DeleteCustomVerificationEmailTemplate"
    },
    "ses:DeleteIdentity": {
        "body": "ses:DeleteIdentity",
        "description": "Add 'ses:DeleteIdentity' action",
        "prefix": "ses:DeleteIdentity"
    },
    "ses:DeleteIdentityPolicy": {
        "body": "ses:DeleteIdentityPolicy",
        "description": "Add 'ses:DeleteIdentityPolicy' action",
        "prefix": "ses:DeleteIdentityPolicy"
    },
    "ses:DeleteReceiptFilter": {
        "body": "ses:DeleteReceiptFilter",
        "description": "Add 'ses:DeleteReceiptFilter' action",
        "prefix": "ses:DeleteReceiptFilter"
    },
    "ses:DeleteReceiptRule": {
        "body": "ses:DeleteReceiptRule",
        "description": "Add 'ses:DeleteReceiptRule' action",
        "prefix": "ses:DeleteReceiptRule"
    },
    "ses:DeleteReceiptRuleSet": {
        "body": "ses:DeleteReceiptRuleSet",
        "description": "Add 'ses:DeleteReceiptRuleSet' action",
        "prefix": "ses:DeleteReceiptRuleSet"
    },
    "ses:DeleteTemplate": {
        "body": "ses:DeleteTemplate",
        "description": "Add 'ses:DeleteTemplate' action",
        "prefix": "ses:DeleteTemplate"
    },
    "ses:DeleteVerifiedEmailAddress": {
        "body": "ses:DeleteVerifiedEmailAddress",
        "description": "Add 'ses:DeleteVerifiedEmailAddress' action",
        "prefix": "ses:DeleteVerifiedEmailAddress"
    },
    "ses:DescribeActiveReceiptRuleSet": {
        "body": "ses:DescribeActiveReceiptRuleSet",
        "description": "Add 'ses:DescribeActiveReceiptRuleSet' action",
        "prefix": "ses:DescribeActiveReceiptRuleSet"
    },
    "ses:DescribeConfigurationSet": {
        "body": "ses:DescribeConfigurationSet",
        "description": "Add 'ses:DescribeConfigurationSet' action",
        "prefix": "ses:DescribeConfigurationSet"
    },
    "ses:DescribeReceiptRule": {
        "body": "ses:DescribeReceiptRule",
        "description": "Add 'ses:DescribeReceiptRule' action",
        "prefix": "ses:DescribeReceiptRule"
    },
    "ses:DescribeReceiptRuleSet": {
        "body": "ses:DescribeReceiptRuleSet",
        "description": "Add 'ses:DescribeReceiptRuleSet' action",
        "prefix": "ses:DescribeReceiptRuleSet"
    },
    "ses:GetAccountSendingEnabled": {
        "body": "ses:GetAccountSendingEnabled",
        "description": "Add 'ses:GetAccountSendingEnabled' action",
        "prefix": "ses:GetAccountSendingEnabled"
    },
    "ses:GetCustomVerificationEmailTemplate": {
        "body": "ses:GetCustomVerificationEmailTemplate",
        "description": "Add 'ses:GetCustomVerificationEmailTemplate' action",
        "prefix": "ses:GetCustomVerificationEmailTemplate"
    },
    "ses:GetIdentityDkimAttributes": {
        "body": "ses:GetIdentityDkimAttributes",
        "description": "Add 'ses:GetIdentityDkimAttributes' action",
        "prefix": "ses:GetIdentityDkimAttributes"
    },
    "ses:GetIdentityMailFromDomainAttributes": {
        "body": "ses:GetIdentityMailFromDomainAttributes",
        "description": "Add 'ses:GetIdentityMailFromDomainAttributes' action",
        "prefix": "ses:GetIdentityMailFromDomainAttributes"
    },
    "ses:GetIdentityNotificationAttributes": {
        "body": "ses:GetIdentityNotificationAttributes",
        "description": "Add 'ses:GetIdentityNotificationAttributes' action",
        "prefix": "ses:GetIdentityNotificationAttributes"
    },
    "ses:GetIdentityPolicies": {
        "body": "ses:GetIdentityPolicies",
        "description": "Add 'ses:GetIdentityPolicies' action",
        "prefix": "ses:GetIdentityPolicies"
    },
    "ses:GetIdentityVerificationAttributes": {
        "body": "ses:GetIdentityVerificationAttributes",
        "description": "Add 'ses:GetIdentityVerificationAttributes' action",
        "prefix": "ses:GetIdentityVerificationAttributes"
    },
    "ses:GetSendQuota": {
        "body": "ses:GetSendQuota",
        "description": "Add 'ses:GetSendQuota' action",
        "prefix": "ses:GetSendQuota"
    },
    "ses:GetSendStatistics": {
        "body": "ses:GetSendStatistics",
        "description": "Add 'ses:GetSendStatistics' action",
        "prefix": "ses:GetSendStatistics"
    },
    "ses:GetTemplate": {
        "body": "ses:GetTemplate",
        "description": "Add 'ses:GetTemplate' action",
        "prefix": "ses:GetTemplate"
    },
    "ses:ListConfigurationSets": {
        "body": "ses:ListConfigurationSets",
        "description": "Add 'ses:ListConfigurationSets' action",
        "prefix": "ses:ListConfigurationSets"
    },
    "ses:ListCustomVerificationEmailTemplates": {
        "body": "ses:ListCustomVerificationEmailTemplates",
        "description": "Add 'ses:ListCustomVerificationEmailTemplates' action",
        "prefix": "ses:ListCustomVerificationEmailTemplates"
    },
    "ses:ListIdentities": {
        "body": "ses:ListIdentities",
        "description": "Add 'ses:ListIdentities' action",
        "prefix": "ses:ListIdentities"
    },
    "ses:ListIdentityPolicies": {
        "body": "ses:ListIdentityPolicies",
        "description": "Add 'ses:ListIdentityPolicies' action",
        "prefix": "ses:ListIdentityPolicies"
    },
    "ses:ListReceiptFilters": {
        "body": "ses:ListReceiptFilters",
        "description": "Add 'ses:ListReceiptFilters' action",
        "prefix": "ses:ListReceiptFilters"
    },
    "ses:ListReceiptRuleSets": {
        "body": "ses:ListReceiptRuleSets",
        "description": "Add 'ses:ListReceiptRuleSets' action",
        "prefix": "ses:ListReceiptRuleSets"
    },
    "ses:ListTemplates": {
        "body": "ses:ListTemplates",
        "description": "Add 'ses:ListTemplates' action",
        "prefix": "ses:ListTemplates"
    },
    "ses:ListVerifiedEmailAddresses": {
        "body": "ses:ListVerifiedEmailAddresses",
        "description": "Add 'ses:ListVerifiedEmailAddresses' action",
        "prefix": "ses:ListVerifiedEmailAddresses"
    },
    "ses:PutIdentityPolicy": {
        "body": "ses:PutIdentityPolicy",
        "description": "Add 'ses:PutIdentityPolicy' action",
        "prefix": "ses:PutIdentityPolicy"
    },
    "ses:ReorderReceiptRuleSet": {
        "body": "ses:ReorderReceiptRuleSet",
        "description": "Add 'ses:ReorderReceiptRuleSet' action",
        "prefix": "ses:ReorderReceiptRuleSet"
    },
    "ses:SendBounce": {
        "body": "ses:SendBounce",
        "description": "Add 'ses:SendBounce' action",
        "prefix": "ses:SendBounce"
    },
    "ses:SendBulkTemplatedEmail": {
        "body": "ses:SendBulkTemplatedEmail",
        "description": "Add 'ses:SendBulkTemplatedEmail' action",
        "prefix": "ses:SendBulkTemplatedEmail"
    },
    "ses:SendCustomVerificationEmail": {
        "body": "ses:SendCustomVerificationEmail",
        "description": "Add 'ses:SendCustomVerificationEmail' action",
        "prefix": "ses:SendCustomVerificationEmail"
    },
    "ses:SendEmail": {
        "body": "ses:SendEmail",
        "description": "Add 'ses:SendEmail' action",
        "prefix": "ses:SendEmail"
    },
    "ses:SendRawEmail": {
        "body": "ses:SendRawEmail",
        "description": "Add 'ses:SendRawEmail' action",
        "prefix": "ses:SendRawEmail"
    },
    "ses:SendTemplatedEmail": {
        "body": "ses:SendTemplatedEmail",
        "description": "Add 'ses:SendTemplatedEmail' action",
        "prefix": "ses:SendTemplatedEmail"
    },
    "ses:SetActiveReceiptRuleSet": {
        "body": "ses:SetActiveReceiptRuleSet",
        "description": "Add 'ses:SetActiveReceiptRuleSet' action",
        "prefix": "ses:SetActiveReceiptRuleSet"
    },
    "ses:SetIdentityDkimEnabled": {
        "body": "ses:SetIdentityDkimEnabled",
        "description": "Add 'ses:SetIdentityDkimEnabled' action",
        "prefix": "ses:SetIdentityDkimEnabled"
    },
    "ses:SetIdentityFeedbackForwardingEnabled": {
        "body": "ses:SetIdentityFeedbackForwardingEnabled",
        "description": "Add 'ses:SetIdentityFeedbackForwardingEnabled' action",
        "prefix": "ses:SetIdentityFeedbackForwardingEnabled"
    },
    "ses:SetIdentityHeadersInNotificationsEnabled": {
        "body": "ses:SetIdentityHeadersInNotificationsEnabled",
        "description": "Add 'ses:SetIdentityHeadersInNotificationsEnabled' action",
        "prefix": "ses:SetIdentityHeadersInNotificationsEnabled"
    },
    "ses:SetIdentityMailFromDomain": {
        "body": "ses:SetIdentityMailFromDomain",
        "description": "Add 'ses:SetIdentityMailFromDomain' action",
        "prefix": "ses:SetIdentityMailFromDomain"
    },
    "ses:SetIdentityNotificationTopic": {
        "body": "ses:SetIdentityNotificationTopic",
        "description": "Add 'ses:SetIdentityNotificationTopic' action",
        "prefix": "ses:SetIdentityNotificationTopic"
    },
    "ses:SetReceiptRulePosition": {
        "body": "ses:SetReceiptRulePosition",
        "description": "Add 'ses:SetReceiptRulePosition' action",
        "prefix": "ses:SetReceiptRulePosition"
    },
    "ses:TestRenderTemplate": {
        "body": "ses:TestRenderTemplate",
        "description": "Add 'ses:TestRenderTemplate' action",
        "prefix": "ses:TestRenderTemplate"
    },
    "ses:UpdateAccountSendingEnabled": {
        "body": "ses:UpdateAccountSendingEnabled",
        "description": "Add 'ses:UpdateAccountSendingEnabled' action",
        "prefix": "ses:UpdateAccountSendingEnabled"
    },
    "ses:UpdateConfigurationSetEventDestination": {
        "body": "ses:UpdateConfigurationSetEventDestination",
        "description": "Add 'ses:UpdateConfigurationSetEventDestination' action",
        "prefix": "ses:UpdateConfigurationSetEventDestination"
    },
    "ses:UpdateConfigurationSetReputationMetricsEnabled": {
        "body": "ses:UpdateConfigurationSetReputationMetricsEnabled",
        "description": "Add 'ses:UpdateConfigurationSetReputationMetricsEnabled' action",
        "prefix": "ses:UpdateConfigurationSetReputationMetricsEnabled"
    },
    "ses:UpdateConfigurationSetSendingEnabled": {
        "body": "ses:UpdateConfigurationSetSendingEnabled",
        "description": "Add 'ses:UpdateConfigurationSetSendingEnabled' action",
        "prefix": "ses:UpdateConfigurationSetSendingEnabled"
    },
    "ses:UpdateConfigurationSetTrackingOptions": {
        "body": "ses:UpdateConfigurationSetTrackingOptions",
        "description": "Add 'ses:UpdateConfigurationSetTrackingOptions' action",
        "prefix": "ses:UpdateConfigurationSetTrackingOptions"
    },
    "ses:UpdateCustomVerificationEmailTemplate": {
        "body": "ses:UpdateCustomVerificationEmailTemplate",
        "description": "Add 'ses:UpdateCustomVerificationEmailTemplate' action",
        "prefix": "ses:UpdateCustomVerificationEmailTemplate"
    },
    "ses:UpdateReceiptRule": {
        "body": "ses:UpdateReceiptRule",
        "description": "Add 'ses:UpdateReceiptRule' action",
        "prefix": "ses:UpdateReceiptRule"
    },
    "ses:UpdateTemplate": {
        "body": "ses:UpdateTemplate",
        "description": "Add 'ses:UpdateTemplate' action",
        "prefix": "ses:UpdateTemplate"
    },
    "ses:VerifyDomainDkim": {
        "body": "ses:VerifyDomainDkim",
        "description": "Add 'ses:VerifyDomainDkim' action",
        "prefix": "ses:VerifyDomainDkim"
    },
    "ses:VerifyDomainIdentity": {
        "body": "ses:VerifyDomainIdentity",
        "description": "Add 'ses:VerifyDomainIdentity' action",
        "prefix": "ses:VerifyDomainIdentity"
    },
    "ses:VerifyEmailAddress": {
        "body": "ses:VerifyEmailAddress",
        "description": "Add 'ses:VerifyEmailAddress' action",
        "prefix": "ses:VerifyEmailAddress"
    },
    "ses:VerifyEmailIdentity": {
        "body": "ses:VerifyEmailIdentity",
        "description": "Add 'ses:VerifyEmailIdentity' action",
        "prefix": "ses:VerifyEmailIdentity"
    },
    "shield:CreateProtection": {
        "body": "shield:CreateProtection",
        "description": "Add 'shield:CreateProtection' action",
        "prefix": "shield:CreateProtection"
    },
    "shield:CreateSubscription": {
        "body": "shield:CreateSubscription",
        "description": "Add 'shield:CreateSubscription' action",
        "prefix": "shield:CreateSubscription"
    },
    "shield:DeleteProtection": {
        "body": "shield:DeleteProtection",
        "description": "Add 'shield:DeleteProtection' action",
        "prefix": "shield:DeleteProtection"
    },
    "shield:DeleteSubscription": {
        "body": "shield:DeleteSubscription",
        "description": "Add 'shield:DeleteSubscription' action",
        "prefix": "shield:DeleteSubscription"
    },
    "shield:DescribeAttack": {
        "body": "shield:DescribeAttack",
        "description": "Add 'shield:DescribeAttack' action",
        "prefix": "shield:DescribeAttack"
    },
    "shield:DescribeProtection": {
        "body": "shield:DescribeProtection",
        "description": "Add 'shield:DescribeProtection' action",
        "prefix": "shield:DescribeProtection"
    },
    "shield:DescribeSubscription": {
        "body": "shield:DescribeSubscription",
        "description": "Add 'shield:DescribeSubscription' action",
        "prefix": "shield:DescribeSubscription"
    },
    "shield:ListAttacks": {
        "body": "shield:ListAttacks",
        "description": "Add 'shield:ListAttacks' action",
        "prefix": "shield:ListAttacks"
    },
    "shield:ListProtections": {
        "body": "shield:ListProtections",
        "description": "Add 'shield:ListProtections' action",
        "prefix": "shield:ListProtections"
    },
    "signer:DescribeSigningJob": {
        "body": "signer:DescribeSigningJob",
        "description": "Add 'signer:DescribeSigningJob' action",
        "prefix": "signer:DescribeSigningJob"
    },
    "signer:ListSigningJobs": {
        "body": "signer:ListSigningJobs",
        "description": "Add 'signer:ListSigningJobs' action",
        "prefix": "signer:ListSigningJobs"
    },
    "signer:StartSigningJob": {
        "body": "signer:StartSigningJob",
        "description": "Add 'signer:StartSigningJob' action",
        "prefix": "signer:StartSigningJob"
    },
    "snowball:CancelCluster": {
        "body": "snowball:CancelCluster",
        "description": "Add 'snowball:CancelCluster' action",
        "prefix": "snowball:CancelCluster"
    },
    "snowball:CancelJob": {
        "body": "snowball:CancelJob",
        "description": "Add 'snowball:CancelJob' action",
        "prefix": "snowball:CancelJob"
    },
    "snowball:CreateAddress": {
        "body": "snowball:CreateAddress",
        "description": "Add 'snowball:CreateAddress' action",
        "prefix": "snowball:CreateAddress"
    },
    "snowball:CreateCluster": {
        "body": "snowball:CreateCluster",
        "description": "Add 'snowball:CreateCluster' action",
        "prefix": "snowball:CreateCluster"
    },
    "snowball:CreateJob": {
        "body": "snowball:CreateJob",
        "description": "Add 'snowball:CreateJob' action",
        "prefix": "snowball:CreateJob"
    },
    "snowball:DescribeAddress": {
        "body": "snowball:DescribeAddress",
        "description": "Add 'snowball:DescribeAddress' action",
        "prefix": "snowball:DescribeAddress"
    },
    "snowball:DescribeAddresses": {
        "body": "snowball:DescribeAddresses",
        "description": "Add 'snowball:DescribeAddresses' action",
        "prefix": "snowball:DescribeAddresses"
    },
    "snowball:DescribeCluster": {
        "body": "snowball:DescribeCluster",
        "description": "Add 'snowball:DescribeCluster' action",
        "prefix": "snowball:DescribeCluster"
    },
    "snowball:DescribeJob": {
        "body": "snowball:DescribeJob",
        "description": "Add 'snowball:DescribeJob' action",
        "prefix": "snowball:DescribeJob"
    },
    "snowball:GetJobManifest": {
        "body": "snowball:GetJobManifest",
        "description": "Add 'snowball:GetJobManifest' action",
        "prefix": "snowball:GetJobManifest"
    },
    "snowball:GetJobUnlockCode": {
        "body": "snowball:GetJobUnlockCode",
        "description": "Add 'snowball:GetJobUnlockCode' action",
        "prefix": "snowball:GetJobUnlockCode"
    },
    "snowball:GetSnowballUsage": {
        "body": "snowball:GetSnowballUsage",
        "description": "Add 'snowball:GetSnowballUsage' action",
        "prefix": "snowball:GetSnowballUsage"
    },
    "snowball:ListClusterJobs": {
        "body": "snowball:ListClusterJobs",
        "description": "Add 'snowball:ListClusterJobs' action",
        "prefix": "snowball:ListClusterJobs"
    },
    "snowball:ListClusters": {
        "body": "snowball:ListClusters",
        "description": "Add 'snowball:ListClusters' action",
        "prefix": "snowball:ListClusters"
    },
    "snowball:ListJobs": {
        "body": "snowball:ListJobs",
        "description": "Add 'snowball:ListJobs' action",
        "prefix": "snowball:ListJobs"
    },
    "snowball:UpdateCluster": {
        "body": "snowball:UpdateCluster",
        "description": "Add 'snowball:UpdateCluster' action",
        "prefix": "snowball:UpdateCluster"
    },
    "snowball:UpdateJob": {
        "body": "snowball:UpdateJob",
        "description": "Add 'snowball:UpdateJob' action",
        "prefix": "snowball:UpdateJob"
    },
    "sns:AddPermission": {
        "body": "sns:AddPermission",
        "description": "Add 'sns:AddPermission' action",
        "prefix": "sns:AddPermission"
    },
    "sns:CheckIfPhoneNumberIsOptedOut": {
        "body": "sns:CheckIfPhoneNumberIsOptedOut",
        "description": "Add 'sns:CheckIfPhoneNumberIsOptedOut' action",
        "prefix": "sns:CheckIfPhoneNumberIsOptedOut"
    },
    "sns:ConfirmSubscription": {
        "body": "sns:ConfirmSubscription",
        "description": "Add 'sns:ConfirmSubscription' action",
        "prefix": "sns:ConfirmSubscription"
    },
    "sns:CreatePlatformApplication": {
        "body": "sns:CreatePlatformApplication",
        "description": "Add 'sns:CreatePlatformApplication' action",
        "prefix": "sns:CreatePlatformApplication"
    },
    "sns:CreatePlatformEndpoint": {
        "body": "sns:CreatePlatformEndpoint",
        "description": "Add 'sns:CreatePlatformEndpoint' action",
        "prefix": "sns:CreatePlatformEndpoint"
    },
    "sns:CreateTopic": {
        "body": "sns:CreateTopic",
        "description": "Add 'sns:CreateTopic' action",
        "prefix": "sns:CreateTopic"
    },
    "sns:DeleteEndpoint": {
        "body": "sns:DeleteEndpoint",
        "description": "Add 'sns:DeleteEndpoint' action",
        "prefix": "sns:DeleteEndpoint"
    },
    "sns:DeletePlatformApplication": {
        "body": "sns:DeletePlatformApplication",
        "description": "Add 'sns:DeletePlatformApplication' action",
        "prefix": "sns:DeletePlatformApplication"
    },
    "sns:DeleteTopic": {
        "body": "sns:DeleteTopic",
        "description": "Add 'sns:DeleteTopic' action",
        "prefix": "sns:DeleteTopic"
    },
    "sns:GetEndpointAttributes": {
        "body": "sns:GetEndpointAttributes",
        "description": "Add 'sns:GetEndpointAttributes' action",
        "prefix": "sns:GetEndpointAttributes"
    },
    "sns:GetPlatformApplicationAttributes": {
        "body": "sns:GetPlatformApplicationAttributes",
        "description": "Add 'sns:GetPlatformApplicationAttributes' action",
        "prefix": "sns:GetPlatformApplicationAttributes"
    },
    "sns:GetSMSAttributes": {
        "body": "sns:GetSMSAttributes",
        "description": "Add 'sns:GetSMSAttributes' action",
        "prefix": "sns:GetSMSAttributes"
    },
    "sns:GetSubscriptionAttributes": {
        "body": "sns:GetSubscriptionAttributes",
        "description": "Add 'sns:GetSubscriptionAttributes' action",
        "prefix": "sns:GetSubscriptionAttributes"
    },
    "sns:GetTopicAttributes": {
        "body": "sns:GetTopicAttributes",
        "description": "Add 'sns:GetTopicAttributes' action",
        "prefix": "sns:GetTopicAttributes"
    },
    "sns:ListEndpointsByPlatformApplication": {
        "body": "sns:ListEndpointsByPlatformApplication",
        "description": "Add 'sns:ListEndpointsByPlatformApplication' action",
        "prefix": "sns:ListEndpointsByPlatformApplication"
    },
    "sns:ListPhoneNumbersOptedOut": {
        "body": "sns:ListPhoneNumbersOptedOut",
        "description": "Add 'sns:ListPhoneNumbersOptedOut' action",
        "prefix": "sns:ListPhoneNumbersOptedOut"
    },
    "sns:ListPlatformApplications": {
        "body": "sns:ListPlatformApplications",
        "description": "Add 'sns:ListPlatformApplications' action",
        "prefix": "sns:ListPlatformApplications"
    },
    "sns:ListSubscriptions": {
        "body": "sns:ListSubscriptions",
        "description": "Add 'sns:ListSubscriptions' action",
        "prefix": "sns:ListSubscriptions"
    },
    "sns:ListSubscriptionsByTopic": {
        "body": "sns:ListSubscriptionsByTopic",
        "description": "Add 'sns:ListSubscriptionsByTopic' action",
        "prefix": "sns:ListSubscriptionsByTopic"
    },
    "sns:ListTopics": {
        "body": "sns:ListTopics",
        "description": "Add 'sns:ListTopics' action",
        "prefix": "sns:ListTopics"
    },
    "sns:OptInPhoneNumber": {
        "body": "sns:OptInPhoneNumber",
        "description": "Add 'sns:OptInPhoneNumber' action",
        "prefix": "sns:OptInPhoneNumber"
    },
    "sns:Publish": {
        "body": "sns:Publish",
        "description": "Add 'sns:Publish' action",
        "prefix": "sns:Publish"
    },
    "sns:RemovePermission": {
        "body": "sns:RemovePermission",
        "description": "Add 'sns:RemovePermission' action",
        "prefix": "sns:RemovePermission"
    },
    "sns:SetEndpointAttributes": {
        "body": "sns:SetEndpointAttributes",
        "description": "Add 'sns:SetEndpointAttributes' action",
        "prefix": "sns:SetEndpointAttributes"
    },
    "sns:SetPlatformApplicationAttributes": {
        "body": "sns:SetPlatformApplicationAttributes",
        "description": "Add 'sns:SetPlatformApplicationAttributes' action",
        "prefix": "sns:SetPlatformApplicationAttributes"
    },
    "sns:SetSMSAttributes": {
        "body": "sns:SetSMSAttributes",
        "description": "Add 'sns:SetSMSAttributes' action",
        "prefix": "sns:SetSMSAttributes"
    },
    "sns:SetSubscriptionAttributes": {
        "body": "sns:SetSubscriptionAttributes",
        "description": "Add 'sns:SetSubscriptionAttributes' action",
        "prefix": "sns:SetSubscriptionAttributes"
    },
    "sns:SetTopicAttributes": {
        "body": "sns:SetTopicAttributes",
        "description": "Add 'sns:SetTopicAttributes' action",
        "prefix": "sns:SetTopicAttributes"
    },
    "sns:Subscribe": {
        "body": "sns:Subscribe",
        "description": "Add 'sns:Subscribe' action",
        "prefix": "sns:Subscribe"
    },
    "sns:Unsubscribe": {
        "body": "sns:Unsubscribe",
        "description": "Add 'sns:Unsubscribe' action",
        "prefix": "sns:Unsubscribe"
    },
    "sqs:AddPermission": {
        "body": "sqs:AddPermission",
        "description": "Add 'sqs:AddPermission' action",
        "prefix": "sqs:AddPermission"
    },
    "sqs:ChangeMessageVisibility": {
        "body": "sqs:ChangeMessageVisibility",
        "description": "Add 'sqs:ChangeMessageVisibility' action",
        "prefix": "sqs:ChangeMessageVisibility"
    },
    "sqs:ChangeMessageVisibilityBatch": {
        "body": "sqs:ChangeMessageVisibilityBatch",
        "description": "Add 'sqs:ChangeMessageVisibilityBatch' action",
        "prefix": "sqs:ChangeMessageVisibilityBatch"
    },
    "sqs:CreateQueue": {
        "body": "sqs:CreateQueue",
        "description": "Add 'sqs:CreateQueue' action",
        "prefix": "sqs:CreateQueue"
    },
    "sqs:DeleteMessage": {
        "body": "sqs:DeleteMessage",
        "description": "Add 'sqs:DeleteMessage' action",
        "prefix": "sqs:DeleteMessage"
    },
    "sqs:DeleteMessageBatch": {
        "body": "sqs:DeleteMessageBatch",
        "description": "Add 'sqs:DeleteMessageBatch' action",
        "prefix": "sqs:DeleteMessageBatch"
    },
    "sqs:DeleteQueue": {
        "body": "sqs:DeleteQueue",
        "description": "Add 'sqs:DeleteQueue' action",
        "prefix": "sqs:DeleteQueue"
    },
    "sqs:GetQueueAttributes": {
        "body": "sqs:GetQueueAttributes",
        "description": "Add 'sqs:GetQueueAttributes' action",
        "prefix": "sqs:GetQueueAttributes"
    },
    "sqs:GetQueueUrl": {
        "body": "sqs:GetQueueUrl",
        "description": "Add 'sqs:GetQueueUrl' action",
        "prefix": "sqs:GetQueueUrl"
    },
    "sqs:ListDeadLetterSourceQueues": {
        "body": "sqs:ListDeadLetterSourceQueues",
        "description": "Add 'sqs:ListDeadLetterSourceQueues' action",
        "prefix": "sqs:ListDeadLetterSourceQueues"
    },
    "sqs:ListQueueTags": {
        "body": "sqs:ListQueueTags",
        "description": "Add 'sqs:ListQueueTags' action",
        "prefix": "sqs:ListQueueTags"
    },
    "sqs:ListQueues": {
        "body": "sqs:ListQueues",
        "description": "Add 'sqs:ListQueues' action",
        "prefix": "sqs:ListQueues"
    },
    "sqs:PurgeQueue": {
        "body": "sqs:PurgeQueue",
        "description": "Add 'sqs:PurgeQueue' action",
        "prefix": "sqs:PurgeQueue"
    },
    "sqs:ReceiveMessage": {
        "body": "sqs:ReceiveMessage",
        "description": "Add 'sqs:ReceiveMessage' action",
        "prefix": "sqs:ReceiveMessage"
    },
    "sqs:RemovePermission": {
        "body": "sqs:RemovePermission",
        "description": "Add 'sqs:RemovePermission' action",
        "prefix": "sqs:RemovePermission"
    },
    "sqs:SendMessage": {
        "body": "sqs:SendMessage",
        "description": "Add 'sqs:SendMessage' action",
        "prefix": "sqs:SendMessage"
    },
    "sqs:SendMessageBatch": {
        "body": "sqs:SendMessageBatch",
        "description": "Add 'sqs:SendMessageBatch' action",
        "prefix": "sqs:SendMessageBatch"
    },
    "sqs:SetQueueAttributes": {
        "body": "sqs:SetQueueAttributes",
        "description": "Add 'sqs:SetQueueAttributes' action",
        "prefix": "sqs:SetQueueAttributes"
    },
    "sqs:TagQueue": {
        "body": "sqs:TagQueue",
        "description": "Add 'sqs:TagQueue' action",
        "prefix": "sqs:TagQueue"
    },
    "sqs:UntagQueue": {
        "body": "sqs:UntagQueue",
        "description": "Add 'sqs:UntagQueue' action",
        "prefix": "sqs:UntagQueue"
    },
    "ssm:AddTagsToResource": {
        "body": "ssm:AddTagsToResource",
        "description": "Add 'ssm:AddTagsToResource' action",
        "prefix": "ssm:AddTagsToResource"
    },
    "ssm:CancelCommand": {
        "body": "ssm:CancelCommand",
        "description": "Add 'ssm:CancelCommand' action",
        "prefix": "ssm:CancelCommand"
    },
    "ssm:CreateActivation": {
        "body": "ssm:CreateActivation",
        "description": "Add 'ssm:CreateActivation' action",
        "prefix": "ssm:CreateActivation"
    },
    "ssm:CreateAssociation": {
        "body": "ssm:CreateAssociation",
        "description": "Add 'ssm:CreateAssociation' action",
        "prefix": "ssm:CreateAssociation"
    },
    "ssm:CreateAssociationBatch": {
        "body": "ssm:CreateAssociationBatch",
        "description": "Add 'ssm:CreateAssociationBatch' action",
        "prefix": "ssm:CreateAssociationBatch"
    },
    "ssm:CreateDocument": {
        "body": "ssm:CreateDocument",
        "description": "Add 'ssm:CreateDocument' action",
        "prefix": "ssm:CreateDocument"
    },
    "ssm:CreateMaintenanceWindow": {
        "body": "ssm:CreateMaintenanceWindow",
        "description": "Add 'ssm:CreateMaintenanceWindow' action",
        "prefix": "ssm:CreateMaintenanceWindow"
    },
    "ssm:CreatePatchBaseline": {
        "body": "ssm:CreatePatchBaseline",
        "description": "Add 'ssm:CreatePatchBaseline' action",
        "prefix": "ssm:CreatePatchBaseline"
    },
    "ssm:CreateResourceDataSync": {
        "body": "ssm:CreateResourceDataSync",
        "description": "Add 'ssm:CreateResourceDataSync' action",
        "prefix": "ssm:CreateResourceDataSync"
    },
    "ssm:DeleteActivation": {
        "body": "ssm:DeleteActivation",
        "description": "Add 'ssm:DeleteActivation' action",
        "prefix": "ssm:DeleteActivation"
    },
    "ssm:DeleteAssociation": {
        "body": "ssm:DeleteAssociation",
        "description": "Add 'ssm:DeleteAssociation' action",
        "prefix": "ssm:DeleteAssociation"
    },
    "ssm:DeleteDocument": {
        "body": "ssm:DeleteDocument",
        "description": "Add 'ssm:DeleteDocument' action",
        "prefix": "ssm:DeleteDocument"
    },
    "ssm:DeleteMaintenanceWindow": {
        "body": "ssm:DeleteMaintenanceWindow",
        "description": "Add 'ssm:DeleteMaintenanceWindow' action",
        "prefix": "ssm:DeleteMaintenanceWindow"
    },
    "ssm:DeleteParameter": {
        "body": "ssm:DeleteParameter",
        "description": "Add 'ssm:DeleteParameter' action",
        "prefix": "ssm:DeleteParameter"
    },
    "ssm:DeleteParameters": {
        "body": "ssm:DeleteParameters",
        "description": "Add 'ssm:DeleteParameters' action",
        "prefix": "ssm:DeleteParameters"
    },
    "ssm:DeletePatchBaseline": {
        "body": "ssm:DeletePatchBaseline",
        "description": "Add 'ssm:DeletePatchBaseline' action",
        "prefix": "ssm:DeletePatchBaseline"
    },
    "ssm:DeleteResourceDataSync": {
        "body": "ssm:DeleteResourceDataSync",
        "description": "Add 'ssm:DeleteResourceDataSync' action",
        "prefix": "ssm:DeleteResourceDataSync"
    },
    "ssm:DeregisterManagedInstance": {
        "body": "ssm:DeregisterManagedInstance",
        "description": "Add 'ssm:DeregisterManagedInstance' action",
        "prefix": "ssm:DeregisterManagedInstance"
    },
    "ssm:DeregisterPatchBaselineForPatchGroup": {
        "body": "ssm:DeregisterPatchBaselineForPatchGroup",
        "description": "Add 'ssm:DeregisterPatchBaselineForPatchGroup' action",
        "prefix": "ssm:DeregisterPatchBaselineForPatchGroup"
    },
    "ssm:DeregisterTargetFromMaintenanceWindow": {
        "body": "ssm:DeregisterTargetFromMaintenanceWindow",
        "description": "Add 'ssm:DeregisterTargetFromMaintenanceWindow' action",
        "prefix": "ssm:DeregisterTargetFromMaintenanceWindow"
    },
    "ssm:DeregisterTaskFromMaintenanceWindow": {
        "body": "ssm:DeregisterTaskFromMaintenanceWindow",
        "description": "Add 'ssm:DeregisterTaskFromMaintenanceWindow' action",
        "prefix": "ssm:DeregisterTaskFromMaintenanceWindow"
    },
    "ssm:DescribeActivations": {
        "body": "ssm:DescribeActivations",
        "description": "Add 'ssm:DescribeActivations' action",
        "prefix": "ssm:DescribeActivations"
    },
    "ssm:DescribeAssociation": {
        "body": "ssm:DescribeAssociation",
        "description": "Add 'ssm:DescribeAssociation' action",
        "prefix": "ssm:DescribeAssociation"
    },
    "ssm:DescribeAutomationExecutions": {
        "body": "ssm:DescribeAutomationExecutions",
        "description": "Add 'ssm:DescribeAutomationExecutions' action",
        "prefix": "ssm:DescribeAutomationExecutions"
    },
    "ssm:DescribeAutomationStepExecutions": {
        "body": "ssm:DescribeAutomationStepExecutions",
        "description": "Add 'ssm:DescribeAutomationStepExecutions' action",
        "prefix": "ssm:DescribeAutomationStepExecutions"
    },
    "ssm:DescribeAvailablePatches": {
        "body": "ssm:DescribeAvailablePatches",
        "description": "Add 'ssm:DescribeAvailablePatches' action",
        "prefix": "ssm:DescribeAvailablePatches"
    },
    "ssm:DescribeDocument": {
        "body": "ssm:DescribeDocument",
        "description": "Add 'ssm:DescribeDocument' action",
        "prefix": "ssm:DescribeDocument"
    },
    "ssm:DescribeDocumentParameters": {
        "body": "ssm:DescribeDocumentParameters",
        "description": "Add 'ssm:DescribeDocumentParameters' action",
        "prefix": "ssm:DescribeDocumentParameters"
    },
    "ssm:DescribeDocumentPermission": {
        "body": "ssm:DescribeDocumentPermission",
        "description": "Add 'ssm:DescribeDocumentPermission' action",
        "prefix": "ssm:DescribeDocumentPermission"
    },
    "ssm:DescribeEffectiveInstanceAssociations": {
        "body": "ssm:DescribeEffectiveInstanceAssociations",
        "description": "Add 'ssm:DescribeEffectiveInstanceAssociations' action",
        "prefix": "ssm:DescribeEffectiveInstanceAssociations"
    },
    "ssm:DescribeEffectivePatchesForPatchBaseline": {
        "body": "ssm:DescribeEffectivePatchesForPatchBaseline",
        "description": "Add 'ssm:DescribeEffectivePatchesForPatchBaseline' action",
        "prefix": "ssm:DescribeEffectivePatchesForPatchBaseline"
    },
    "ssm:DescribeInstanceAssociationsStatus": {
        "body": "ssm:DescribeInstanceAssociationsStatus",
        "description": "Add 'ssm:DescribeInstanceAssociationsStatus' action",
        "prefix": "ssm:DescribeInstanceAssociationsStatus"
    },
    "ssm:DescribeInstanceInformation": {
        "body": "ssm:DescribeInstanceInformation",
        "description": "Add 'ssm:DescribeInstanceInformation' action",
        "prefix": "ssm:DescribeInstanceInformation"
    },
    "ssm:DescribeInstancePatchStates": {
        "body": "ssm:DescribeInstancePatchStates",
        "description": "Add 'ssm:DescribeInstancePatchStates' action",
        "prefix": "ssm:DescribeInstancePatchStates"
    },
    "ssm:DescribeInstancePatchStatesForPatchGroup": {
        "body": "ssm:DescribeInstancePatchStatesForPatchGroup",
        "description": "Add 'ssm:DescribeInstancePatchStatesForPatchGroup' action",
        "prefix": "ssm:DescribeInstancePatchStatesForPatchGroup"
    },
    "ssm:DescribeInstancePatches": {
        "body": "ssm:DescribeInstancePatches",
        "description": "Add 'ssm:DescribeInstancePatches' action",
        "prefix": "ssm:DescribeInstancePatches"
    },
    "ssm:DescribeInstanceProperties": {
        "body": "ssm:DescribeInstanceProperties",
        "description": "Add 'ssm:DescribeInstanceProperties' action",
        "prefix": "ssm:DescribeInstanceProperties"
    },
    "ssm:DescribeMaintenanceWindowExecutionTaskInvocations": {
        "body": "ssm:DescribeMaintenanceWindowExecutionTaskInvocations",
        "description": "Add 'ssm:DescribeMaintenanceWindowExecutionTaskInvocations' action",
        "prefix": "ssm:DescribeMaintenanceWindowExecutionTaskInvocations"
    },
    "ssm:DescribeMaintenanceWindowExecutionTasks": {
        "body": "ssm:DescribeMaintenanceWindowExecutionTasks",
        "description": "Add 'ssm:DescribeMaintenanceWindowExecutionTasks' action",
        "prefix": "ssm:DescribeMaintenanceWindowExecutionTasks"
    },
    "ssm:DescribeMaintenanceWindowExecutions": {
        "body": "ssm:DescribeMaintenanceWindowExecutions",
        "description": "Add 'ssm:DescribeMaintenanceWindowExecutions' action",
        "prefix": "ssm:DescribeMaintenanceWindowExecutions"
    },
    "ssm:DescribeMaintenanceWindowTargets": {
        "body": "ssm:DescribeMaintenanceWindowTargets",
        "description": "Add 'ssm:DescribeMaintenanceWindowTargets' action",
        "prefix": "ssm:DescribeMaintenanceWindowTargets"
    },
    "ssm:DescribeMaintenanceWindowTasks": {
        "body": "ssm:DescribeMaintenanceWindowTasks",
        "description": "Add 'ssm:DescribeMaintenanceWindowTasks' action",
        "prefix": "ssm:DescribeMaintenanceWindowTasks"
    },
    "ssm:DescribeMaintenanceWindows": {
        "body": "ssm:DescribeMaintenanceWindows",
        "description": "Add 'ssm:DescribeMaintenanceWindows' action",
        "prefix": "ssm:DescribeMaintenanceWindows"
    },
    "ssm:DescribeParameters": {
        "body": "ssm:DescribeParameters",
        "description": "Add 'ssm:DescribeParameters' action",
        "prefix": "ssm:DescribeParameters"
    },
    "ssm:DescribePatchBaselines": {
        "body": "ssm:DescribePatchBaselines",
        "description": "Add 'ssm:DescribePatchBaselines' action",
        "prefix": "ssm:DescribePatchBaselines"
    },
    "ssm:DescribePatchGroupState": {
        "body": "ssm:DescribePatchGroupState",
        "description": "Add 'ssm:DescribePatchGroupState' action",
        "prefix": "ssm:DescribePatchGroupState"
    },
    "ssm:DescribePatchGroups": {
        "body": "ssm:DescribePatchGroups",
        "description": "Add 'ssm:DescribePatchGroups' action",
        "prefix": "ssm:DescribePatchGroups"
    },
    "ssm:GetAutomationExecution": {
        "body": "ssm:GetAutomationExecution",
        "description": "Add 'ssm:GetAutomationExecution' action",
        "prefix": "ssm:GetAutomationExecution"
    },
    "ssm:GetCommandInvocation": {
        "body": "ssm:GetCommandInvocation",
        "description": "Add 'ssm:GetCommandInvocation' action",
        "prefix": "ssm:GetCommandInvocation"
    },
    "ssm:GetDefaultPatchBaseline": {
        "body": "ssm:GetDefaultPatchBaseline",
        "description": "Add 'ssm:GetDefaultPatchBaseline' action",
        "prefix": "ssm:GetDefaultPatchBaseline"
    },
    "ssm:GetDeployablePatchSnapshotForInstance": {
        "body": "ssm:GetDeployablePatchSnapshotForInstance",
        "description": "Add 'ssm:GetDeployablePatchSnapshotForInstance' action",
        "prefix": "ssm:GetDeployablePatchSnapshotForInstance"
    },
    "ssm:GetDocument": {
        "body": "ssm:GetDocument",
        "description": "Add 'ssm:GetDocument' action",
        "prefix": "ssm:GetDocument"
    },
    "ssm:GetInventory": {
        "body": "ssm:GetInventory",
        "description": "Add 'ssm:GetInventory' action",
        "prefix": "ssm:GetInventory"
    },
    "ssm:GetInventorySchema": {
        "body": "ssm:GetInventorySchema",
        "description": "Add 'ssm:GetInventorySchema' action",
        "prefix": "ssm:GetInventorySchema"
    },
    "ssm:GetMaintenanceWindow": {
        "body": "ssm:GetMaintenanceWindow",
        "description": "Add 'ssm:GetMaintenanceWindow' action",
        "prefix": "ssm:GetMaintenanceWindow"
    },
    "ssm:GetMaintenanceWindowExecution": {
        "body": "ssm:GetMaintenanceWindowExecution",
        "description": "Add 'ssm:GetMaintenanceWindowExecution' action",
        "prefix": "ssm:GetMaintenanceWindowExecution"
    },
    "ssm:GetMaintenanceWindowExecutionTask": {
        "body": "ssm:GetMaintenanceWindowExecutionTask",
        "description": "Add 'ssm:GetMaintenanceWindowExecutionTask' action",
        "prefix": "ssm:GetMaintenanceWindowExecutionTask"
    },
    "ssm:GetMaintenanceWindowExecutionTaskInvocation": {
        "body": "ssm:GetMaintenanceWindowExecutionTaskInvocation",
        "description": "Add 'ssm:GetMaintenanceWindowExecutionTaskInvocation' action",
        "prefix": "ssm:GetMaintenanceWindowExecutionTaskInvocation"
    },
    "ssm:GetMaintenanceWindowTask": {
        "body": "ssm:GetMaintenanceWindowTask",
        "description": "Add 'ssm:GetMaintenanceWindowTask' action",
        "prefix": "ssm:GetMaintenanceWindowTask"
    },
    "ssm:GetManifest": {
        "body": "ssm:GetManifest",
        "description": "Add 'ssm:GetManifest' action",
        "prefix": "ssm:GetManifest"
    },
    "ssm:GetParameter": {
        "body": "ssm:GetParameter",
        "description": "Add 'ssm:GetParameter' action",
        "prefix": "ssm:GetParameter"
    },
    "ssm:GetParameterHistory": {
        "body": "ssm:GetParameterHistory",
        "description": "Add 'ssm:GetParameterHistory' action",
        "prefix": "ssm:GetParameterHistory"
    },
    "ssm:GetParameters": {
        "body": "ssm:GetParameters",
        "description": "Add 'ssm:GetParameters' action",
        "prefix": "ssm:GetParameters"
    },
    "ssm:GetParametersByPath": {
        "body": "ssm:GetParametersByPath",
        "description": "Add 'ssm:GetParametersByPath' action",
        "prefix": "ssm:GetParametersByPath"
    },
    "ssm:GetPatchBaseline": {
        "body": "ssm:GetPatchBaseline",
        "description": "Add 'ssm:GetPatchBaseline' action",
        "prefix": "ssm:GetPatchBaseline"
    },
    "ssm:GetPatchBaselineForPatchGroup": {
        "body": "ssm:GetPatchBaselineForPatchGroup",
        "description": "Add 'ssm:GetPatchBaselineForPatchGroup' action",
        "prefix": "ssm:GetPatchBaselineForPatchGroup"
    },
    "ssm:ListAssociationVersions": {
        "body": "ssm:ListAssociationVersions",
        "description": "Add 'ssm:ListAssociationVersions' action",
        "prefix": "ssm:ListAssociationVersions"
    },
    "ssm:ListAssociations": {
        "body": "ssm:ListAssociations",
        "description": "Add 'ssm:ListAssociations' action",
        "prefix": "ssm:ListAssociations"
    },
    "ssm:ListCommandInvocations": {
        "body": "ssm:ListCommandInvocations",
        "description": "Add 'ssm:ListCommandInvocations' action",
        "prefix": "ssm:ListCommandInvocations"
    },
    "ssm:ListCommands": {
        "body": "ssm:ListCommands",
        "description": "Add 'ssm:ListCommands' action",
        "prefix": "ssm:ListCommands"
    },
    "ssm:ListDocumentVersions": {
        "body": "ssm:ListDocumentVersions",
        "description": "Add 'ssm:ListDocumentVersions' action",
        "prefix": "ssm:ListDocumentVersions"
    },
    "ssm:ListDocuments": {
        "body": "ssm:ListDocuments",
        "description": "Add 'ssm:ListDocuments' action",
        "prefix": "ssm:ListDocuments"
    },
    "ssm:ListInstanceAssociations": {
        "body": "ssm:ListInstanceAssociations",
        "description": "Add 'ssm:ListInstanceAssociations' action",
        "prefix": "ssm:ListInstanceAssociations"
    },
    "ssm:ListInventoryEntries": {
        "body": "ssm:ListInventoryEntries",
        "description": "Add 'ssm:ListInventoryEntries' action",
        "prefix": "ssm:ListInventoryEntries"
    },
    "ssm:ListResourceDataSync": {
        "body": "ssm:ListResourceDataSync",
        "description": "Add 'ssm:ListResourceDataSync' action",
        "prefix": "ssm:ListResourceDataSync"
    },
    "ssm:ListTagsForResource": {
        "body": "ssm:ListTagsForResource",
        "description": "Add 'ssm:ListTagsForResource' action",
        "prefix": "ssm:ListTagsForResource"
    },
    "ssm:ModifyDocumentPermission": {
        "body": "ssm:ModifyDocumentPermission",
        "description": "Add 'ssm:ModifyDocumentPermission' action",
        "prefix": "ssm:ModifyDocumentPermission"
    },
    "ssm:PutComplianceItems": {
        "body": "ssm:PutComplianceItems",
        "description": "Add 'ssm:PutComplianceItems' action",
        "prefix": "ssm:PutComplianceItems"
    },
    "ssm:PutConfigurePackageResult": {
        "body": "ssm:PutConfigurePackageResult",
        "description": "Add 'ssm:PutConfigurePackageResult' action",
        "prefix": "ssm:PutConfigurePackageResult"
    },
    "ssm:PutInventory": {
        "body": "ssm:PutInventory",
        "description": "Add 'ssm:PutInventory' action",
        "prefix": "ssm:PutInventory"
    },
    "ssm:PutParameter": {
        "body": "ssm:PutParameter",
        "description": "Add 'ssm:PutParameter' action",
        "prefix": "ssm:PutParameter"
    },
    "ssm:RegisterDefaultPatchBaseline": {
        "body": "ssm:RegisterDefaultPatchBaseline",
        "description": "Add 'ssm:RegisterDefaultPatchBaseline' action",
        "prefix": "ssm:RegisterDefaultPatchBaseline"
    },
    "ssm:RegisterPatchBaselineForPatchGroup": {
        "body": "ssm:RegisterPatchBaselineForPatchGroup",
        "description": "Add 'ssm:RegisterPatchBaselineForPatchGroup' action",
        "prefix": "ssm:RegisterPatchBaselineForPatchGroup"
    },
    "ssm:RegisterTargetWithMaintenanceWindow": {
        "body": "ssm:RegisterTargetWithMaintenanceWindow",
        "description": "Add 'ssm:RegisterTargetWithMaintenanceWindow' action",
        "prefix": "ssm:RegisterTargetWithMaintenanceWindow"
    },
    "ssm:RegisterTaskWithMaintenanceWindow": {
        "body": "ssm:RegisterTaskWithMaintenanceWindow",
        "description": "Add 'ssm:RegisterTaskWithMaintenanceWindow' action",
        "prefix": "ssm:RegisterTaskWithMaintenanceWindow"
    },
    "ssm:RemoveTagsFromResource": {
        "body": "ssm:RemoveTagsFromResource",
        "description": "Add 'ssm:RemoveTagsFromResource' action",
        "prefix": "ssm:RemoveTagsFromResource"
    },
    "ssm:SendAutomationSignal": {
        "body": "ssm:SendAutomationSignal",
        "description": "Add 'ssm:SendAutomationSignal' action",
        "prefix": "ssm:SendAutomationSignal"
    },
    "ssm:SendCommand": {
        "body": "ssm:SendCommand",
        "description": "Add 'ssm:SendCommand' action",
        "prefix": "ssm:SendCommand"
    },
    "ssm:StartAssociationsOnce": {
        "body": "ssm:StartAssociationsOnce",
        "description": "Add 'ssm:StartAssociationsOnce' action",
        "prefix": "ssm:StartAssociationsOnce"
    },
    "ssm:StartAutomationExecution": {
        "body": "ssm:StartAutomationExecution",
        "description": "Add 'ssm:StartAutomationExecution' action",
        "prefix": "ssm:StartAutomationExecution"
    },
    "ssm:StopAutomationExecution": {
        "body": "ssm:StopAutomationExecution",
        "description": "Add 'ssm:StopAutomationExecution' action",
        "prefix": "ssm:StopAutomationExecution"
    },
    "ssm:UpdateAssociation": {
        "body": "ssm:UpdateAssociation",
        "description": "Add 'ssm:UpdateAssociation' action",
        "prefix": "ssm:UpdateAssociation"
    },
    "ssm:UpdateAssociationStatus": {
        "body": "ssm:UpdateAssociationStatus",
        "description": "Add 'ssm:UpdateAssociationStatus' action",
        "prefix": "ssm:UpdateAssociationStatus"
    },
    "ssm:UpdateDocument": {
        "body": "ssm:UpdateDocument",
        "description": "Add 'ssm:UpdateDocument' action",
        "prefix": "ssm:UpdateDocument"
    },
    "ssm:UpdateDocumentDefaultVersion": {
        "body": "ssm:UpdateDocumentDefaultVersion",
        "description": "Add 'ssm:UpdateDocumentDefaultVersion' action",
        "prefix": "ssm:UpdateDocumentDefaultVersion"
    },
    "ssm:UpdateInstanceAssociationStatus": {
        "body": "ssm:UpdateInstanceAssociationStatus",
        "description": "Add 'ssm:UpdateInstanceAssociationStatus' action",
        "prefix": "ssm:UpdateInstanceAssociationStatus"
    },
    "ssm:UpdateInstanceInformation": {
        "body": "ssm:UpdateInstanceInformation",
        "description": "Add 'ssm:UpdateInstanceInformation' action",
        "prefix": "ssm:UpdateInstanceInformation"
    },
    "ssm:UpdateMaintenanceWindow": {
        "body": "ssm:UpdateMaintenanceWindow",
        "description": "Add 'ssm:UpdateMaintenanceWindow' action",
        "prefix": "ssm:UpdateMaintenanceWindow"
    },
    "ssm:UpdateMaintenanceWindowTarget": {
        "body": "ssm:UpdateMaintenanceWindowTarget",
        "description": "Add 'ssm:UpdateMaintenanceWindowTarget' action",
        "prefix": "ssm:UpdateMaintenanceWindowTarget"
    },
    "ssm:UpdateMaintenanceWindowTask": {
        "body": "ssm:UpdateMaintenanceWindowTask",
        "description": "Add 'ssm:UpdateMaintenanceWindowTask' action",
        "prefix": "ssm:UpdateMaintenanceWindowTask"
    },
    "ssm:UpdateManagedInstanceRole": {
        "body": "ssm:UpdateManagedInstanceRole",
        "description": "Add 'ssm:UpdateManagedInstanceRole' action",
        "prefix": "ssm:UpdateManagedInstanceRole"
    },
    "ssm:UpdatePatchBaseline": {
        "body": "ssm:UpdatePatchBaseline",
        "description": "Add 'ssm:UpdatePatchBaseline' action",
        "prefix": "ssm:UpdatePatchBaseline"
    },
    "sso:AssociateDirectory": {
        "body": "sso:AssociateDirectory",
        "description": "Add 'sso:AssociateDirectory' action",
        "prefix": "sso:AssociateDirectory"
    },
    "sso:AssociateProfile": {
        "body": "sso:AssociateProfile",
        "description": "Add 'sso:AssociateProfile' action",
        "prefix": "sso:AssociateProfile"
    },
    "sso:CreateApplicationInstance": {
        "body": "sso:CreateApplicationInstance",
        "description": "Add 'sso:CreateApplicationInstance' action",
        "prefix": "sso:CreateApplicationInstance"
    },
    "sso:CreateApplicationInstanceCertificate": {
        "body": "sso:CreateApplicationInstanceCertificate",
        "description": "Add 'sso:CreateApplicationInstanceCertificate' action",
        "prefix": "sso:CreateApplicationInstanceCertificate"
    },
    "sso:CreatePermissionSet": {
        "body": "sso:CreatePermissionSet",
        "description": "Add 'sso:CreatePermissionSet' action",
        "prefix": "sso:CreatePermissionSet"
    },
    "sso:CreateProfile": {
        "body": "sso:CreateProfile",
        "description": "Add 'sso:CreateProfile' action",
        "prefix": "sso:CreateProfile"
    },
    "sso:CreateTrust": {
        "body": "sso:CreateTrust",
        "description": "Add 'sso:CreateTrust' action",
        "prefix": "sso:CreateTrust"
    },
    "sso:DeleteApplicationInstance": {
        "body": "sso:DeleteApplicationInstance",
        "description": "Add 'sso:DeleteApplicationInstance' action",
        "prefix": "sso:DeleteApplicationInstance"
    },
    "sso:DeleteApplicationInstanceCertificate": {
        "body": "sso:DeleteApplicationInstanceCertificate",
        "description": "Add 'sso:DeleteApplicationInstanceCertificate' action",
        "prefix": "sso:DeleteApplicationInstanceCertificate"
    },
    "sso:DeletePermissionSet": {
        "body": "sso:DeletePermissionSet",
        "description": "Add 'sso:DeletePermissionSet' action",
        "prefix": "sso:DeletePermissionSet"
    },
    "sso:DeletePermissionsPolicy": {
        "body": "sso:DeletePermissionsPolicy",
        "description": "Add 'sso:DeletePermissionsPolicy' action",
        "prefix": "sso:DeletePermissionsPolicy"
    },
    "sso:DeleteProfile": {
        "body": "sso:DeleteProfile",
        "description": "Add 'sso:DeleteProfile' action",
        "prefix": "sso:DeleteProfile"
    },
    "sso:DescribePermissionsPolicies": {
        "body": "sso:DescribePermissionsPolicies",
        "description": "Add 'sso:DescribePermissionsPolicies' action",
        "prefix": "sso:DescribePermissionsPolicies"
    },
    "sso:DisassociateDirectory": {
        "body": "sso:DisassociateDirectory",
        "description": "Add 'sso:DisassociateDirectory' action",
        "prefix": "sso:DisassociateDirectory"
    },
    "sso:DisassociateProfile": {
        "body": "sso:DisassociateProfile",
        "description": "Add 'sso:DisassociateProfile' action",
        "prefix": "sso:DisassociateProfile"
    },
    "sso:GetApplicationInstance": {
        "body": "sso:GetApplicationInstance",
        "description": "Add 'sso:GetApplicationInstance' action",
        "prefix": "sso:GetApplicationInstance"
    },
    "sso:GetApplicationTemplate": {
        "body": "sso:GetApplicationTemplate",
        "description": "Add 'sso:GetApplicationTemplate' action",
        "prefix": "sso:GetApplicationTemplate"
    },
    "sso:GetPermissionSet": {
        "body": "sso:GetPermissionSet",
        "description": "Add 'sso:GetPermissionSet' action",
        "prefix": "sso:GetPermissionSet"
    },
    "sso:GetProfile": {
        "body": "sso:GetProfile",
        "description": "Add 'sso:GetProfile' action",
        "prefix": "sso:GetProfile"
    },
    "sso:GetSSOStatus": {
        "body": "sso:GetSSOStatus",
        "description": "Add 'sso:GetSSOStatus' action",
        "prefix": "sso:GetSSOStatus"
    },
    "sso:GetTrust": {
        "body": "sso:GetTrust",
        "description": "Add 'sso:GetTrust' action",
        "prefix": "sso:GetTrust"
    },
    "sso:ImportApplicationInstanceServiceProviderMetadata": {
        "body": "sso:ImportApplicationInstanceServiceProviderMetadata",
        "description": "Add 'sso:ImportApplicationInstanceServiceProviderMetadata' action",
        "prefix": "sso:ImportApplicationInstanceServiceProviderMetadata"
    },
    "sso:ListApplicationInstanceCertificates": {
        "body": "sso:ListApplicationInstanceCertificates",
        "description": "Add 'sso:ListApplicationInstanceCertificates' action",
        "prefix": "sso:ListApplicationInstanceCertificates"
    },
    "sso:ListApplicationInstances": {
        "body": "sso:ListApplicationInstances",
        "description": "Add 'sso:ListApplicationInstances' action",
        "prefix": "sso:ListApplicationInstances"
    },
    "sso:ListApplicationTemplates": {
        "body": "sso:ListApplicationTemplates",
        "description": "Add 'sso:ListApplicationTemplates' action",
        "prefix": "sso:ListApplicationTemplates"
    },
    "sso:ListDirectoryAssociations": {
        "body": "sso:ListDirectoryAssociations",
        "description": "Add 'sso:ListDirectoryAssociations' action",
        "prefix": "sso:ListDirectoryAssociations"
    },
    "sso:ListPermissionSets": {
        "body": "sso:ListPermissionSets",
        "description": "Add 'sso:ListPermissionSets' action",
        "prefix": "sso:ListPermissionSets"
    },
    "sso:ListProfileAssociations": {
        "body": "sso:ListProfileAssociations",
        "description": "Add 'sso:ListProfileAssociations' action",
        "prefix": "sso:ListProfileAssociations"
    },
    "sso:ListProfiles": {
        "body": "sso:ListProfiles",
        "description": "Add 'sso:ListProfiles' action",
        "prefix": "sso:ListProfiles"
    },
    "sso:PutPermissionsPolicy": {
        "body": "sso:PutPermissionsPolicy",
        "description": "Add 'sso:PutPermissionsPolicy' action",
        "prefix": "sso:PutPermissionsPolicy"
    },
    "sso:StartSSO": {
        "body": "sso:StartSSO",
        "description": "Add 'sso:StartSSO' action",
        "prefix": "sso:StartSSO"
    },
    "sso:UpdateApplicationInstanceActiveCertificate": {
        "body": "sso:UpdateApplicationInstanceActiveCertificate",
        "description": "Add 'sso:UpdateApplicationInstanceActiveCertificate' action",
        "prefix": "sso:UpdateApplicationInstanceActiveCertificate"
    },
    "sso:UpdateApplicationInstanceDisplayData": {
        "body": "sso:UpdateApplicationInstanceDisplayData",
        "description": "Add 'sso:UpdateApplicationInstanceDisplayData' action",
        "prefix": "sso:UpdateApplicationInstanceDisplayData"
    },
    "sso:UpdateApplicationInstanceResponseConfiguration": {
        "body": "sso:UpdateApplicationInstanceResponseConfiguration",
        "description": "Add 'sso:UpdateApplicationInstanceResponseConfiguration' action",
        "prefix": "sso:UpdateApplicationInstanceResponseConfiguration"
    },
    "sso:UpdateApplicationInstanceResponseSchemaConfiguration": {
        "body": "sso:UpdateApplicationInstanceResponseSchemaConfiguration",
        "description": "Add 'sso:UpdateApplicationInstanceResponseSchemaConfiguration' action",
        "prefix": "sso:UpdateApplicationInstanceResponseSchemaConfiguration"
    },
    "sso:UpdateApplicationInstanceSecurityConfiguration": {
        "body": "sso:UpdateApplicationInstanceSecurityConfiguration",
        "description": "Add 'sso:UpdateApplicationInstanceSecurityConfiguration' action",
        "prefix": "sso:UpdateApplicationInstanceSecurityConfiguration"
    },
    "sso:UpdateApplicationInstanceServiceProviderConfiguration": {
        "body": "sso:UpdateApplicationInstanceServiceProviderConfiguration",
        "description": "Add 'sso:UpdateApplicationInstanceServiceProviderConfiguration' action",
        "prefix": "sso:UpdateApplicationInstanceServiceProviderConfiguration"
    },
    "sso:UpdateApplicationInstanceStatus": {
        "body": "sso:UpdateApplicationInstanceStatus",
        "description": "Add 'sso:UpdateApplicationInstanceStatus' action",
        "prefix": "sso:UpdateApplicationInstanceStatus"
    },
    "sso:UpdateDirectoryAssociation": {
        "body": "sso:UpdateDirectoryAssociation",
        "description": "Add 'sso:UpdateDirectoryAssociation' action",
        "prefix": "sso:UpdateDirectoryAssociation"
    },
    "sso:UpdateProfile": {
        "body": "sso:UpdateProfile",
        "description": "Add 'sso:UpdateProfile' action",
        "prefix": "sso:UpdateProfile"
    },
    "sso:UpdateTrust": {
        "body": "sso:UpdateTrust",
        "description": "Add 'sso:UpdateTrust' action",
        "prefix": "sso:UpdateTrust"
    },
    "states:CreateActivity": {
        "body": "states:CreateActivity",
        "description": "Add 'states:CreateActivity' action",
        "prefix": "states:CreateActivity"
    },
    "states:CreateStateMachine": {
        "body": "states:CreateStateMachine",
        "description": "Add 'states:CreateStateMachine' action",
        "prefix": "states:CreateStateMachine"
    },
    "states:DeleteActivity": {
        "body": "states:DeleteActivity",
        "description": "Add 'states:DeleteActivity' action",
        "prefix": "states:DeleteActivity"
    },
    "states:DeleteStateMachine": {
        "body": "states:DeleteStateMachine",
        "description": "Add 'states:DeleteStateMachine' action",
        "prefix": "states:DeleteStateMachine"
    },
    "states:DescribeActivity": {
        "body": "states:DescribeActivity",
        "description": "Add 'states:DescribeActivity' action",
        "prefix": "states:DescribeActivity"
    },
    "states:DescribeExecution": {
        "body": "states:DescribeExecution",
        "description": "Add 'states:DescribeExecution' action",
        "prefix": "states:DescribeExecution"
    },
    "states:DescribeStateMachine": {
        "body": "states:DescribeStateMachine",
        "description": "Add 'states:DescribeStateMachine' action",
        "prefix": "states:DescribeStateMachine"
    },
    "states:DescribeStateMachineForExecution": {
        "body": "states:DescribeStateMachineForExecution",
        "description": "Add 'states:DescribeStateMachineForExecution' action",
        "prefix": "states:DescribeStateMachineForExecution"
    },
    "states:GetActivityTask": {
        "body": "states:GetActivityTask",
        "description": "Add 'states:GetActivityTask' action",
        "prefix": "states:GetActivityTask"
    },
    "states:GetExecutionHistory": {
        "body": "states:GetExecutionHistory",
        "description": "Add 'states:GetExecutionHistory' action",
        "prefix": "states:GetExecutionHistory"
    },
    "states:ListActivities": {
        "body": "states:ListActivities",
        "description": "Add 'states:ListActivities' action",
        "prefix": "states:ListActivities"
    },
    "states:ListExecutions": {
        "body": "states:ListExecutions",
        "description": "Add 'states:ListExecutions' action",
        "prefix": "states:ListExecutions"
    },
    "states:ListStateMachines": {
        "body": "states:ListStateMachines",
        "description": "Add 'states:ListStateMachines' action",
        "prefix": "states:ListStateMachines"
    },
    "states:SendTaskFailure": {
        "body": "states:SendTaskFailure",
        "description": "Add 'states:SendTaskFailure' action",
        "prefix": "states:SendTaskFailure"
    },
    "states:SendTaskHeartbeat": {
        "body": "states:SendTaskHeartbeat",
        "description": "Add 'states:SendTaskHeartbeat' action",
        "prefix": "states:SendTaskHeartbeat"
    },
    "states:SendTaskSuccess": {
        "body": "states:SendTaskSuccess",
        "description": "Add 'states:SendTaskSuccess' action",
        "prefix": "states:SendTaskSuccess"
    },
    "states:StartExecution": {
        "body": "states:StartExecution",
        "description": "Add 'states:StartExecution' action",
        "prefix": "states:StartExecution"
    },
    "states:StopExecution": {
        "body": "states:StopExecution",
        "description": "Add 'states:StopExecution' action",
        "prefix": "states:StopExecution"
    },
    "states:UpdateStateMachine": {
        "body": "states:UpdateStateMachine",
        "description": "Add 'states:UpdateStateMachine' action",
        "prefix": "states:UpdateStateMachine"
    },
    "storagegateway:ActivateGateway": {
        "body": "storagegateway:ActivateGateway",
        "description": "Add 'storagegateway:ActivateGateway' action",
        "prefix": "storagegateway:ActivateGateway"
    },
    "storagegateway:AddCache": {
        "body": "storagegateway:AddCache",
        "description": "Add 'storagegateway:AddCache' action",
        "prefix": "storagegateway:AddCache"
    },
    "storagegateway:AddTagsToResource": {
        "body": "storagegateway:AddTagsToResource",
        "description": "Add 'storagegateway:AddTagsToResource' action",
        "prefix": "storagegateway:AddTagsToResource"
    },
    "storagegateway:AddUploadBuffer": {
        "body": "storagegateway:AddUploadBuffer",
        "description": "Add 'storagegateway:AddUploadBuffer' action",
        "prefix": "storagegateway:AddUploadBuffer"
    },
    "storagegateway:AddWorkingStorage": {
        "body": "storagegateway:AddWorkingStorage",
        "description": "Add 'storagegateway:AddWorkingStorage' action",
        "prefix": "storagegateway:AddWorkingStorage"
    },
    "storagegateway:CancelArchival": {
        "body": "storagegateway:CancelArchival",
        "description": "Add 'storagegateway:CancelArchival' action",
        "prefix": "storagegateway:CancelArchival"
    },
    "storagegateway:CancelRetrieval": {
        "body": "storagegateway:CancelRetrieval",
        "description": "Add 'storagegateway:CancelRetrieval' action",
        "prefix": "storagegateway:CancelRetrieval"
    },
    "storagegateway:CreateCachediSCSIVolume": {
        "body": "storagegateway:CreateCachediSCSIVolume",
        "description": "Add 'storagegateway:CreateCachediSCSIVolume' action",
        "prefix": "storagegateway:CreateCachediSCSIVolume"
    },
    "storagegateway:CreateNFSFileShare": {
        "body": "storagegateway:CreateNFSFileShare",
        "description": "Add 'storagegateway:CreateNFSFileShare' action",
        "prefix": "storagegateway:CreateNFSFileShare"
    },
    "storagegateway:CreateSnapshot": {
        "body": "storagegateway:CreateSnapshot",
        "description": "Add 'storagegateway:CreateSnapshot' action",
        "prefix": "storagegateway:CreateSnapshot"
    },
    "storagegateway:CreateSnapshotFromVolumeRecoveryPoint": {
        "body": "storagegateway:CreateSnapshotFromVolumeRecoveryPoint",
        "description": "Add 'storagegateway:CreateSnapshotFromVolumeRecoveryPoint' action",
        "prefix": "storagegateway:CreateSnapshotFromVolumeRecoveryPoint"
    },
    "storagegateway:CreateStorediSCSIVolume": {
        "body": "storagegateway:CreateStorediSCSIVolume",
        "description": "Add 'storagegateway:CreateStorediSCSIVolume' action",
        "prefix": "storagegateway:CreateStorediSCSIVolume"
    },
    "storagegateway:CreateTapeWithBarcode": {
        "body": "storagegateway:CreateTapeWithBarcode",
        "description": "Add 'storagegateway:CreateTapeWithBarcode' action",
        "prefix": "storagegateway:CreateTapeWithBarcode"
    },
    "storagegateway:CreateTapes": {
        "body": "storagegateway:CreateTapes",
        "description": "Add 'storagegateway:CreateTapes' action",
        "prefix": "storagegateway:CreateTapes"
    },
    "storagegateway:DeleteBandwidthRateLimit": {
        "body": "storagegateway:DeleteBandwidthRateLimit",
        "description": "Add 'storagegateway:DeleteBandwidthRateLimit' action",
        "prefix": "storagegateway:DeleteBandwidthRateLimit"
    },
    "storagegateway:DeleteChapCredentials": {
        "body": "storagegateway:DeleteChapCredentials",
        "description": "Add 'storagegateway:DeleteChapCredentials' action",
        "prefix": "storagegateway:DeleteChapCredentials"
    },
    "storagegateway:DeleteFileShare": {
        "body": "storagegateway:DeleteFileShare",
        "description": "Add 'storagegateway:DeleteFileShare' action",
        "prefix": "storagegateway:DeleteFileShare"
    },
    "storagegateway:DeleteGateway": {
        "body": "storagegateway:DeleteGateway",
        "description": "Add 'storagegateway:DeleteGateway' action",
        "prefix": "storagegateway:DeleteGateway"
    },
    "storagegateway:DeleteSnapshotSchedule": {
        "body": "storagegateway:DeleteSnapshotSchedule",
        "description": "Add 'storagegateway:DeleteSnapshotSchedule' action",
        "prefix": "storagegateway:DeleteSnapshotSchedule"
    },
    "storagegateway:DeleteTape": {
        "body": "storagegateway:DeleteTape",
        "description": "Add 'storagegateway:DeleteTape' action",
        "prefix": "storagegateway:DeleteTape"
    },
    "storagegateway:DeleteTapeArchive": {
        "body": "storagegateway:DeleteTapeArchive",
        "description": "Add 'storagegateway:DeleteTapeArchive' action",
        "prefix": "storagegateway:DeleteTapeArchive"
    },
    "storagegateway:DeleteVolume": {
        "body": "storagegateway:DeleteVolume",
        "description": "Add 'storagegateway:DeleteVolume' action",
        "prefix": "storagegateway:DeleteVolume"
    },
    "storagegateway:DescribeBandwidthRateLimit": {
        "body": "storagegateway:DescribeBandwidthRateLimit",
        "description": "Add 'storagegateway:DescribeBandwidthRateLimit' action",
        "prefix": "storagegateway:DescribeBandwidthRateLimit"
    },
    "storagegateway:DescribeCache": {
        "body": "storagegateway:DescribeCache",
        "description": "Add 'storagegateway:DescribeCache' action",
        "prefix": "storagegateway:DescribeCache"
    },
    "storagegateway:DescribeCachediSCSIVolumes": {
        "body": "storagegateway:DescribeCachediSCSIVolumes",
        "description": "Add 'storagegateway:DescribeCachediSCSIVolumes' action",
        "prefix": "storagegateway:DescribeCachediSCSIVolumes"
    },
    "storagegateway:DescribeChapCredentials": {
        "body": "storagegateway:DescribeChapCredentials",
        "description": "Add 'storagegateway:DescribeChapCredentials' action",
        "prefix": "storagegateway:DescribeChapCredentials"
    },
    "storagegateway:DescribeGatewayInformation": {
        "body": "storagegateway:DescribeGatewayInformation",
        "description": "Add 'storagegateway:DescribeGatewayInformation' action",
        "prefix": "storagegateway:DescribeGatewayInformation"
    },
    "storagegateway:DescribeMaintenanceStartTime": {
        "body": "storagegateway:DescribeMaintenanceStartTime",
        "description": "Add 'storagegateway:DescribeMaintenanceStartTime' action",
        "prefix": "storagegateway:DescribeMaintenanceStartTime"
    },
    "storagegateway:DescribeNFSFileShares": {
        "body": "storagegateway:DescribeNFSFileShares",
        "description": "Add 'storagegateway:DescribeNFSFileShares' action",
        "prefix": "storagegateway:DescribeNFSFileShares"
    },
    "storagegateway:DescribeSnapshotSchedule": {
        "body": "storagegateway:DescribeSnapshotSchedule",
        "description": "Add 'storagegateway:DescribeSnapshotSchedule' action",
        "prefix": "storagegateway:DescribeSnapshotSchedule"
    },
    "storagegateway:DescribeStorediSCSIVolumes": {
        "body": "storagegateway:DescribeStorediSCSIVolumes",
        "description": "Add 'storagegateway:DescribeStorediSCSIVolumes' action",
        "prefix": "storagegateway:DescribeStorediSCSIVolumes"
    },
    "storagegateway:DescribeTapeArchives": {
        "body": "storagegateway:DescribeTapeArchives",
        "description": "Add 'storagegateway:DescribeTapeArchives' action",
        "prefix": "storagegateway:DescribeTapeArchives"
    },
    "storagegateway:DescribeTapeRecoveryPoints": {
        "body": "storagegateway:DescribeTapeRecoveryPoints",
        "description": "Add 'storagegateway:DescribeTapeRecoveryPoints' action",
        "prefix": "storagegateway:DescribeTapeRecoveryPoints"
    },
    "storagegateway:DescribeTapes": {
        "body": "storagegateway:DescribeTapes",
        "description": "Add 'storagegateway:DescribeTapes' action",
        "prefix": "storagegateway:DescribeTapes"
    },
    "storagegateway:DescribeUploadBuffer": {
        "body": "storagegateway:DescribeUploadBuffer",
        "description": "Add 'storagegateway:DescribeUploadBuffer' action",
        "prefix": "storagegateway:DescribeUploadBuffer"
    },
    "storagegateway:DescribeVTLDevices": {
        "body": "storagegateway:DescribeVTLDevices",
        "description": "Add 'storagegateway:DescribeVTLDevices' action",
        "prefix": "storagegateway:DescribeVTLDevices"
    },
    "storagegateway:DescribeWorkingStorage": {
        "body": "storagegateway:DescribeWorkingStorage",
        "description": "Add 'storagegateway:DescribeWorkingStorage' action",
        "prefix": "storagegateway:DescribeWorkingStorage"
    },
    "storagegateway:DisableGateway": {
        "body": "storagegateway:DisableGateway",
        "description": "Add 'storagegateway:DisableGateway' action",
        "prefix": "storagegateway:DisableGateway"
    },
    "storagegateway:ListFileShares": {
        "body": "storagegateway:ListFileShares",
        "description": "Add 'storagegateway:ListFileShares' action",
        "prefix": "storagegateway:ListFileShares"
    },
    "storagegateway:ListGateways": {
        "body": "storagegateway:ListGateways",
        "description": "Add 'storagegateway:ListGateways' action",
        "prefix": "storagegateway:ListGateways"
    },
    "storagegateway:ListLocalDisks": {
        "body": "storagegateway:ListLocalDisks",
        "description": "Add 'storagegateway:ListLocalDisks' action",
        "prefix": "storagegateway:ListLocalDisks"
    },
    "storagegateway:ListTagsForResource": {
        "body": "storagegateway:ListTagsForResource",
        "description": "Add 'storagegateway:ListTagsForResource' action",
        "prefix": "storagegateway:ListTagsForResource"
    },
    "storagegateway:ListTapes": {
        "body": "storagegateway:ListTapes",
        "description": "Add 'storagegateway:ListTapes' action",
        "prefix": "storagegateway:ListTapes"
    },
    "storagegateway:ListVolumeInitiators": {
        "body": "storagegateway:ListVolumeInitiators",
        "description": "Add 'storagegateway:ListVolumeInitiators' action",
        "prefix": "storagegateway:ListVolumeInitiators"
    },
    "storagegateway:ListVolumeRecoveryPoints": {
        "body": "storagegateway:ListVolumeRecoveryPoints",
        "description": "Add 'storagegateway:ListVolumeRecoveryPoints' action",
        "prefix": "storagegateway:ListVolumeRecoveryPoints"
    },
    "storagegateway:ListVolumes": {
        "body": "storagegateway:ListVolumes",
        "description": "Add 'storagegateway:ListVolumes' action",
        "prefix": "storagegateway:ListVolumes"
    },
    "storagegateway:RefreshCache": {
        "body": "storagegateway:RefreshCache",
        "description": "Add 'storagegateway:RefreshCache' action",
        "prefix": "storagegateway:RefreshCache"
    },
    "storagegateway:RemoveTagsFromResource": {
        "body": "storagegateway:RemoveTagsFromResource",
        "description": "Add 'storagegateway:RemoveTagsFromResource' action",
        "prefix": "storagegateway:RemoveTagsFromResource"
    },
    "storagegateway:ResetCache": {
        "body": "storagegateway:ResetCache",
        "description": "Add 'storagegateway:ResetCache' action",
        "prefix": "storagegateway:ResetCache"
    },
    "storagegateway:RetrieveTapeArchive": {
        "body": "storagegateway:RetrieveTapeArchive",
        "description": "Add 'storagegateway:RetrieveTapeArchive' action",
        "prefix": "storagegateway:RetrieveTapeArchive"
    },
    "storagegateway:RetrieveTapeRecoveryPoint": {
        "body": "storagegateway:RetrieveTapeRecoveryPoint",
        "description": "Add 'storagegateway:RetrieveTapeRecoveryPoint' action",
        "prefix": "storagegateway:RetrieveTapeRecoveryPoint"
    },
    "storagegateway:SetLocalConsolePassword": {
        "body": "storagegateway:SetLocalConsolePassword",
        "description": "Add 'storagegateway:SetLocalConsolePassword' action",
        "prefix": "storagegateway:SetLocalConsolePassword"
    },
    "storagegateway:ShutdownGateway": {
        "body": "storagegateway:ShutdownGateway",
        "description": "Add 'storagegateway:ShutdownGateway' action",
        "prefix": "storagegateway:ShutdownGateway"
    },
    "storagegateway:StartGateway": {
        "body": "storagegateway:StartGateway",
        "description": "Add 'storagegateway:StartGateway' action",
        "prefix": "storagegateway:StartGateway"
    },
    "storagegateway:UpdateBandwidthRateLimit": {
        "body": "storagegateway:UpdateBandwidthRateLimit",
        "description": "Add 'storagegateway:UpdateBandwidthRateLimit' action",
        "prefix": "storagegateway:UpdateBandwidthRateLimit"
    },
    "storagegateway:UpdateChapCredentials": {
        "body": "storagegateway:UpdateChapCredentials",
        "description": "Add 'storagegateway:UpdateChapCredentials' action",
        "prefix": "storagegateway:UpdateChapCredentials"
    },
    "storagegateway:UpdateGatewayInformation": {
        "body": "storagegateway:UpdateGatewayInformation",
        "description": "Add 'storagegateway:UpdateGatewayInformation' action",
        "prefix": "storagegateway:UpdateGatewayInformation"
    },
    "storagegateway:UpdateGatewaySoftwareNow": {
        "body": "storagegateway:UpdateGatewaySoftwareNow",
        "description": "Add 'storagegateway:UpdateGatewaySoftwareNow' action",
        "prefix": "storagegateway:UpdateGatewaySoftwareNow"
    },
    "storagegateway:UpdateMaintenanceStartTime": {
        "body": "storagegateway:UpdateMaintenanceStartTime",
        "description": "Add 'storagegateway:UpdateMaintenanceStartTime' action",
        "prefix": "storagegateway:UpdateMaintenanceStartTime"
    },
    "storagegateway:UpdateNFSFileShare": {
        "body": "storagegateway:UpdateNFSFileShare",
        "description": "Add 'storagegateway:UpdateNFSFileShare' action",
        "prefix": "storagegateway:UpdateNFSFileShare"
    },
    "storagegateway:UpdateSnapshotSchedule": {
        "body": "storagegateway:UpdateSnapshotSchedule",
        "description": "Add 'storagegateway:UpdateSnapshotSchedule' action",
        "prefix": "storagegateway:UpdateSnapshotSchedule"
    },
    "storagegateway:UpdateVTLDeviceType": {
        "body": "storagegateway:UpdateVTLDeviceType",
        "description": "Add 'storagegateway:UpdateVTLDeviceType' action",
        "prefix": "storagegateway:UpdateVTLDeviceType"
    },
    "sts:AssumeRole": {
        "body": "sts:AssumeRole",
        "description": "Add 'sts:AssumeRole' action",
        "prefix": "sts:AssumeRole"
    },
    "sts:AssumeRoleWithSAML": {
        "body": "sts:AssumeRoleWithSAML",
        "description": "Add 'sts:AssumeRoleWithSAML' action",
        "prefix": "sts:AssumeRoleWithSAML"
    },
    "sts:AssumeRoleWithWebIdentity": {
        "body": "sts:AssumeRoleWithWebIdentity",
        "description": "Add 'sts:AssumeRoleWithWebIdentity' action",
        "prefix": "sts:AssumeRoleWithWebIdentity"
    },
    "sts:DecodeAuthorizationMessage": {
        "body": "sts:DecodeAuthorizationMessage",
        "description": "Add 'sts:DecodeAuthorizationMessage' action",
        "prefix": "sts:DecodeAuthorizationMessage"
    },
    "sts:GetCallerIdentity": {
        "body": "sts:GetCallerIdentity",
        "description": "Add 'sts:GetCallerIdentity' action",
        "prefix": "sts:GetCallerIdentity"
    },
    "sts:GetFederationToken": {
        "body": "sts:GetFederationToken",
        "description": "Add 'sts:GetFederationToken' action",
        "prefix": "sts:GetFederationToken"
    },
    "sts:GetSessionToken": {
        "body": "sts:GetSessionToken",
        "description": "Add 'sts:GetSessionToken' action",
        "prefix": "sts:GetSessionToken"
    },
    "support:AddAttachmentsToSet": {
        "body": "support:AddAttachmentsToSet",
        "description": "Add 'support:AddAttachmentsToSet' action",
        "prefix": "support:AddAttachmentsToSet"
    },
    "support:AddCommunicationToCase": {
        "body": "support:AddCommunicationToCase",
        "description": "Add 'support:AddCommunicationToCase' action",
        "prefix": "support:AddCommunicationToCase"
    },
    "support:CreateCase": {
        "body": "support:CreateCase",
        "description": "Add 'support:CreateCase' action",
        "prefix": "support:CreateCase"
    },
    "support:DescribeAttachment": {
        "body": "support:DescribeAttachment",
        "description": "Add 'support:DescribeAttachment' action",
        "prefix": "support:DescribeAttachment"
    },
    "support:DescribeCases": {
        "body": "support:DescribeCases",
        "description": "Add 'support:DescribeCases' action",
        "prefix": "support:DescribeCases"
    },
    "support:DescribeCommunications": {
        "body": "support:DescribeCommunications",
        "description": "Add 'support:DescribeCommunications' action",
        "prefix": "support:DescribeCommunications"
    },
    "support:DescribeServices": {
        "body": "support:DescribeServices",
        "description": "Add 'support:DescribeServices' action",
        "prefix": "support:DescribeServices"
    },
    "support:DescribeSeverityLevels": {
        "body": "support:DescribeSeverityLevels",
        "description": "Add 'support:DescribeSeverityLevels' action",
        "prefix": "support:DescribeSeverityLevels"
    },
    "support:DescribeTrustedAdvisorCheckRefreshStatuses": {
        "body": "support:DescribeTrustedAdvisorCheckRefreshStatuses",
        "description": "Add 'support:DescribeTrustedAdvisorCheckRefreshStatuses' action",
        "prefix": "support:DescribeTrustedAdvisorCheckRefreshStatuses"
    },
    "support:DescribeTrustedAdvisorCheckResult": {
        "body": "support:DescribeTrustedAdvisorCheckResult",
        "description": "Add 'support:DescribeTrustedAdvisorCheckResult' action",
        "prefix": "support:DescribeTrustedAdvisorCheckResult"
    },
    "support:DescribeTrustedAdvisorCheckSummaries": {
        "body": "support:DescribeTrustedAdvisorCheckSummaries",
        "description": "Add 'support:DescribeTrustedAdvisorCheckSummaries' action",
        "prefix": "support:DescribeTrustedAdvisorCheckSummaries"
    },
    "support:DescribeTrustedAdvisorChecks": {
        "body": "support:DescribeTrustedAdvisorChecks",
        "description": "Add 'support:DescribeTrustedAdvisorChecks' action",
        "prefix": "support:DescribeTrustedAdvisorChecks"
    },
    "support:RefreshTrustedAdvisorCheck": {
        "body": "support:RefreshTrustedAdvisorCheck",
        "description": "Add 'support:RefreshTrustedAdvisorCheck' action",
        "prefix": "support:RefreshTrustedAdvisorCheck"
    },
    "support:ResolveCase": {
        "body": "support:ResolveCase",
        "description": "Add 'support:ResolveCase' action",
        "prefix": "support:ResolveCase"
    },
    "swf:CancelTimer": {
        "body": "swf:CancelTimer",
        "description": "Add 'swf:CancelTimer' action",
        "prefix": "swf:CancelTimer"
    },
    "swf:CancelWorkflowExecution": {
        "body": "swf:CancelWorkflowExecution",
        "description": "Add 'swf:CancelWorkflowExecution' action",
        "prefix": "swf:CancelWorkflowExecution"
    },
    "swf:CompleteWorkflowExecution": {
        "body": "swf:CompleteWorkflowExecution",
        "description": "Add 'swf:CompleteWorkflowExecution' action",
        "prefix": "swf:CompleteWorkflowExecution"
    },
    "swf:ContinueAsNewWorkflowExecution": {
        "body": "swf:ContinueAsNewWorkflowExecution",
        "description": "Add 'swf:ContinueAsNewWorkflowExecution' action",
        "prefix": "swf:ContinueAsNewWorkflowExecution"
    },
    "swf:CountClosedWorkflowExecutions": {
        "body": "swf:CountClosedWorkflowExecutions",
        "description": "Add 'swf:CountClosedWorkflowExecutions' action",
        "prefix": "swf:CountClosedWorkflowExecutions"
    },
    "swf:CountOpenWorkflowExecutions": {
        "body": "swf:CountOpenWorkflowExecutions",
        "description": "Add 'swf:CountOpenWorkflowExecutions' action",
        "prefix": "swf:CountOpenWorkflowExecutions"
    },
    "swf:CountPendingActivityTasks": {
        "body": "swf:CountPendingActivityTasks",
        "description": "Add 'swf:CountPendingActivityTasks' action",
        "prefix": "swf:CountPendingActivityTasks"
    },
    "swf:CountPendingDecisionTasks": {
        "body": "swf:CountPendingDecisionTasks",
        "description": "Add 'swf:CountPendingDecisionTasks' action",
        "prefix": "swf:CountPendingDecisionTasks"
    },
    "swf:DeprecateActivityType": {
        "body": "swf:DeprecateActivityType",
        "description": "Add 'swf:DeprecateActivityType' action",
        "prefix": "swf:DeprecateActivityType"
    },
    "swf:DeprecateDomain": {
        "body": "swf:DeprecateDomain",
        "description": "Add 'swf:DeprecateDomain' action",
        "prefix": "swf:DeprecateDomain"
    },
    "swf:DeprecateWorkflowType": {
        "body": "swf:DeprecateWorkflowType",
        "description": "Add 'swf:DeprecateWorkflowType' action",
        "prefix": "swf:DeprecateWorkflowType"
    },
    "swf:DescribeActivityType": {
        "body": "swf:DescribeActivityType",
        "description": "Add 'swf:DescribeActivityType' action",
        "prefix": "swf:DescribeActivityType"
    },
    "swf:DescribeDomain": {
        "body": "swf:DescribeDomain",
        "description": "Add 'swf:DescribeDomain' action",
        "prefix": "swf:DescribeDomain"
    },
    "swf:DescribeWorkflowExecution": {
        "body": "swf:DescribeWorkflowExecution",
        "description": "Add 'swf:DescribeWorkflowExecution' action",
        "prefix": "swf:DescribeWorkflowExecution"
    },
    "swf:DescribeWorkflowType": {
        "body": "swf:DescribeWorkflowType",
        "description": "Add 'swf:DescribeWorkflowType' action",
        "prefix": "swf:DescribeWorkflowType"
    },
    "swf:FailWorkflowExecution": {
        "body": "swf:FailWorkflowExecution",
        "description": "Add 'swf:FailWorkflowExecution' action",
        "prefix": "swf:FailWorkflowExecution"
    },
    "swf:GetWorkflowExecutionHistory": {
        "body": "swf:GetWorkflowExecutionHistory",
        "description": "Add 'swf:GetWorkflowExecutionHistory' action",
        "prefix": "swf:GetWorkflowExecutionHistory"
    },
    "swf:ListActivityTypes": {
        "body": "swf:ListActivityTypes",
        "description": "Add 'swf:ListActivityTypes' action",
        "prefix": "swf:ListActivityTypes"
    },
    "swf:ListClosedWorkflowExecutions": {
        "body": "swf:ListClosedWorkflowExecutions",
        "description": "Add 'swf:ListClosedWorkflowExecutions' action",
        "prefix": "swf:ListClosedWorkflowExecutions"
    },
    "swf:ListDomains": {
        "body": "swf:ListDomains",
        "description": "Add 'swf:ListDomains' action",
        "prefix": "swf:ListDomains"
    },
    "swf:ListOpenWorkflowExecutions": {
        "body": "swf:ListOpenWorkflowExecutions",
        "description": "Add 'swf:ListOpenWorkflowExecutions' action",
        "prefix": "swf:ListOpenWorkflowExecutions"
    },
    "swf:ListWorkflowTypes": {
        "body": "swf:ListWorkflowTypes",
        "description": "Add 'swf:ListWorkflowTypes' action",
        "prefix": "swf:ListWorkflowTypes"
    },
    "swf:PollForActivityTask": {
        "body": "swf:PollForActivityTask",
        "description": "Add 'swf:PollForActivityTask' action",
        "prefix": "swf:PollForActivityTask"
    },
    "swf:PollForDecisionTask": {
        "body": "swf:PollForDecisionTask",
        "description": "Add 'swf:PollForDecisionTask' action",
        "prefix": "swf:PollForDecisionTask"
    },
    "swf:RecordActivityTaskHeartbeat": {
        "body": "swf:RecordActivityTaskHeartbeat",
        "description": "Add 'swf:RecordActivityTaskHeartbeat' action",
        "prefix": "swf:RecordActivityTaskHeartbeat"
    },
    "swf:RecordMarker": {
        "body": "swf:RecordMarker",
        "description": "Add 'swf:RecordMarker' action",
        "prefix": "swf:RecordMarker"
    },
    "swf:RegisterActivityType": {
        "body": "swf:RegisterActivityType",
        "description": "Add 'swf:RegisterActivityType' action",
        "prefix": "swf:RegisterActivityType"
    },
    "swf:RegisterDomain": {
        "body": "swf:RegisterDomain",
        "description": "Add 'swf:RegisterDomain' action",
        "prefix": "swf:RegisterDomain"
    },
    "swf:RegisterWorkflowType": {
        "body": "swf:RegisterWorkflowType",
        "description": "Add 'swf:RegisterWorkflowType' action",
        "prefix": "swf:RegisterWorkflowType"
    },
    "swf:RequestCancelActivityTask": {
        "body": "swf:RequestCancelActivityTask",
        "description": "Add 'swf:RequestCancelActivityTask' action",
        "prefix": "swf:RequestCancelActivityTask"
    },
    "swf:RequestCancelExternalWorkflowExecution": {
        "body": "swf:RequestCancelExternalWorkflowExecution",
        "description": "Add 'swf:RequestCancelExternalWorkflowExecution' action",
        "prefix": "swf:RequestCancelExternalWorkflowExecution"
    },
    "swf:RequestCancelWorkflowExecution": {
        "body": "swf:RequestCancelWorkflowExecution",
        "description": "Add 'swf:RequestCancelWorkflowExecution' action",
        "prefix": "swf:RequestCancelWorkflowExecution"
    },
    "swf:RespondActivityTaskCanceled": {
        "body": "swf:RespondActivityTaskCanceled",
        "description": "Add 'swf:RespondActivityTaskCanceled' action",
        "prefix": "swf:RespondActivityTaskCanceled"
    },
    "swf:RespondActivityTaskCompleted": {
        "body": "swf:RespondActivityTaskCompleted",
        "description": "Add 'swf:RespondActivityTaskCompleted' action",
        "prefix": "swf:RespondActivityTaskCompleted"
    },
    "swf:RespondActivityTaskFailed": {
        "body": "swf:RespondActivityTaskFailed",
        "description": "Add 'swf:RespondActivityTaskFailed' action",
        "prefix": "swf:RespondActivityTaskFailed"
    },
    "swf:RespondDecisionTaskCompleted": {
        "body": "swf:RespondDecisionTaskCompleted",
        "description": "Add 'swf:RespondDecisionTaskCompleted' action",
        "prefix": "swf:RespondDecisionTaskCompleted"
    },
    "swf:ScheduleActivityTask": {
        "body": "swf:ScheduleActivityTask",
        "description": "Add 'swf:ScheduleActivityTask' action",
        "prefix": "swf:ScheduleActivityTask"
    },
    "swf:SignalExternalWorkflowExecution": {
        "body": "swf:SignalExternalWorkflowExecution",
        "description": "Add 'swf:SignalExternalWorkflowExecution' action",
        "prefix": "swf:SignalExternalWorkflowExecution"
    },
    "swf:SignalWorkflowExecution": {
        "body": "swf:SignalWorkflowExecution",
        "description": "Add 'swf:SignalWorkflowExecution' action",
        "prefix": "swf:SignalWorkflowExecution"
    },
    "swf:StartChildWorkflowExecution": {
        "body": "swf:StartChildWorkflowExecution",
        "description": "Add 'swf:StartChildWorkflowExecution' action",
        "prefix": "swf:StartChildWorkflowExecution"
    },
    "swf:StartTimer": {
        "body": "swf:StartTimer",
        "description": "Add 'swf:StartTimer' action",
        "prefix": "swf:StartTimer"
    },
    "swf:StartWorkflowExecution": {
        "body": "swf:StartWorkflowExecution",
        "description": "Add 'swf:StartWorkflowExecution' action",
        "prefix": "swf:StartWorkflowExecution"
    },
    "swf:TerminateWorkflowExecution": {
        "body": "swf:TerminateWorkflowExecution",
        "description": "Add 'swf:TerminateWorkflowExecution' action",
        "prefix": "swf:TerminateWorkflowExecution"
    },
    "tag:GetResources": {
        "body": "tag:GetResources",
        "description": "Add 'tag:GetResources' action",
        "prefix": "tag:GetResources"
    },
    "tag:GetTagKeys": {
        "body": "tag:GetTagKeys",
        "description": "Add 'tag:GetTagKeys' action",
        "prefix": "tag:GetTagKeys"
    },
    "tag:GetTagValues": {
        "body": "tag:GetTagValues",
        "description": "Add 'tag:GetTagValues' action",
        "prefix": "tag:GetTagValues"
    },
    "tag:TagResources": {
        "body": "tag:TagResources",
        "description": "Add 'tag:TagResources' action",
        "prefix": "tag:TagResources"
    },
    "tag:UntagResources": {
        "body": "tag:UntagResources",
        "description": "Add 'tag:UntagResources' action",
        "prefix": "tag:UntagResources"
    },
    "transcribe:GetTranscriptionJob": {
        "body": "transcribe:GetTranscriptionJob",
        "description": "Add 'transcribe:GetTranscriptionJob' action",
        "prefix": "transcribe:GetTranscriptionJob"
    },
    "transcribe:ListTranscriptionJobs": {
        "body": "transcribe:ListTranscriptionJobs",
        "description": "Add 'transcribe:ListTranscriptionJobs' action",
        "prefix": "transcribe:ListTranscriptionJobs"
    },
    "transcribe:StartTranscriptionJob": {
        "body": "transcribe:StartTranscriptionJob",
        "description": "Add 'transcribe:StartTranscriptionJob' action",
        "prefix": "transcribe:StartTranscriptionJob"
    },
    "translate:TranslateText": {
        "body": "translate:TranslateText",
        "description": "Add 'translate:TranslateText' action",
        "prefix": "translate:TranslateText"
    },
    "trustedadvisor:DescribeCheckItems": {
        "body": "trustedadvisor:DescribeCheckItems",
        "description": "Add 'trustedadvisor:DescribeCheckItems' action",
        "prefix": "trustedadvisor:DescribeCheckItems"
    },
    "trustedadvisor:DescribeCheckRefreshStatuses": {
        "body": "trustedadvisor:DescribeCheckRefreshStatuses",
        "description": "Add 'trustedadvisor:DescribeCheckRefreshStatuses' action",
        "prefix": "trustedadvisor:DescribeCheckRefreshStatuses"
    },
    "trustedadvisor:DescribeCheckSummaries": {
        "body": "trustedadvisor:DescribeCheckSummaries",
        "description": "Add 'trustedadvisor:DescribeCheckSummaries' action",
        "prefix": "trustedadvisor:DescribeCheckSummaries"
    },
    "trustedadvisor:DescribeNotificationPreferences": {
        "body": "trustedadvisor:DescribeNotificationPreferences",
        "description": "Add 'trustedadvisor:DescribeNotificationPreferences' action",
        "prefix": "trustedadvisor:DescribeNotificationPreferences"
    },
    "trustedadvisor:ExcludeCheckItems": {
        "body": "trustedadvisor:ExcludeCheckItems",
        "description": "Add 'trustedadvisor:ExcludeCheckItems' action",
        "prefix": "trustedadvisor:ExcludeCheckItems"
    },
    "trustedadvisor:IncludeCheckItems": {
        "body": "trustedadvisor:IncludeCheckItems",
        "description": "Add 'trustedadvisor:IncludeCheckItems' action",
        "prefix": "trustedadvisor:IncludeCheckItems"
    },
    "trustedadvisor:RefreshCheck": {
        "body": "trustedadvisor:RefreshCheck",
        "description": "Add 'trustedadvisor:RefreshCheck' action",
        "prefix": "trustedadvisor:RefreshCheck"
    },
    "trustedadvisor:UpdateNotificationPreferences": {
        "body": "trustedadvisor:UpdateNotificationPreferences",
        "description": "Add 'trustedadvisor:UpdateNotificationPreferences' action",
        "prefix": "trustedadvisor:UpdateNotificationPreferences"
    },
    "waf-regional:AssociateWebACL": {
        "body": "waf-regional:AssociateWebACL",
        "description": "Add 'waf-regional:AssociateWebACL' action",
        "prefix": "waf-regional:AssociateWebACL"
    },
    "waf-regional:CreateByteMatchSet": {
        "body": "waf-regional:CreateByteMatchSet",
        "description": "Add 'waf-regional:CreateByteMatchSet' action",
        "prefix": "waf-regional:CreateByteMatchSet"
    },
    "waf-regional:CreateGeoMatchSet": {
        "body": "waf-regional:CreateGeoMatchSet",
        "description": "Add 'waf-regional:CreateGeoMatchSet' action",
        "prefix": "waf-regional:CreateGeoMatchSet"
    },
    "waf-regional:CreateIPSet": {
        "body": "waf-regional:CreateIPSet",
        "description": "Add 'waf-regional:CreateIPSet' action",
        "prefix": "waf-regional:CreateIPSet"
    },
    "waf-regional:CreateRateBasedRule": {
        "body": "waf-regional:CreateRateBasedRule",
        "description": "Add 'waf-regional:CreateRateBasedRule' action",
        "prefix": "waf-regional:CreateRateBasedRule"
    },
    "waf-regional:CreateRegexMatchSet": {
        "body": "waf-regional:CreateRegexMatchSet",
        "description": "Add 'waf-regional:CreateRegexMatchSet' action",
        "prefix": "waf-regional:CreateRegexMatchSet"
    },
    "waf-regional:CreateRegexPatternSet": {
        "body": "waf-regional:CreateRegexPatternSet",
        "description": "Add 'waf-regional:CreateRegexPatternSet' action",
        "prefix": "waf-regional:CreateRegexPatternSet"
    },
    "waf-regional:CreateRule": {
        "body": "waf-regional:CreateRule",
        "description": "Add 'waf-regional:CreateRule' action",
        "prefix": "waf-regional:CreateRule"
    },
    "waf-regional:CreateSizeConstraintSet": {
        "body": "waf-regional:CreateSizeConstraintSet",
        "description": "Add 'waf-regional:CreateSizeConstraintSet' action",
        "prefix": "waf-regional:CreateSizeConstraintSet"
    },
    "waf-regional:CreateSqlInjectionMatchSet": {
        "body": "waf-regional:CreateSqlInjectionMatchSet",
        "description": "Add 'waf-regional:CreateSqlInjectionMatchSet' action",
        "prefix": "waf-regional:CreateSqlInjectionMatchSet"
    },
    "waf-regional:CreateWebACL": {
        "body": "waf-regional:CreateWebACL",
        "description": "Add 'waf-regional:CreateWebACL' action",
        "prefix": "waf-regional:CreateWebACL"
    },
    "waf-regional:CreateXssMatchSet": {
        "body": "waf-regional:CreateXssMatchSet",
        "description": "Add 'waf-regional:CreateXssMatchSet' action",
        "prefix": "waf-regional:CreateXssMatchSet"
    },
    "waf-regional:DeleteByteMatchSet": {
        "body": "waf-regional:DeleteByteMatchSet",
        "description": "Add 'waf-regional:DeleteByteMatchSet' action",
        "prefix": "waf-regional:DeleteByteMatchSet"
    },
    "waf-regional:DeleteGeoMatchSet": {
        "body": "waf-regional:DeleteGeoMatchSet",
        "description": "Add 'waf-regional:DeleteGeoMatchSet' action",
        "prefix": "waf-regional:DeleteGeoMatchSet"
    },
    "waf-regional:DeleteIPSet": {
        "body": "waf-regional:DeleteIPSet",
        "description": "Add 'waf-regional:DeleteIPSet' action",
        "prefix": "waf-regional:DeleteIPSet"
    },
    "waf-regional:DeleteRateBasedRule": {
        "body": "waf-regional:DeleteRateBasedRule",
        "description": "Add 'waf-regional:DeleteRateBasedRule' action",
        "prefix": "waf-regional:DeleteRateBasedRule"
    },
    "waf-regional:DeleteRegexMatchSet": {
        "body": "waf-regional:DeleteRegexMatchSet",
        "description": "Add 'waf-regional:DeleteRegexMatchSet' action",
        "prefix": "waf-regional:DeleteRegexMatchSet"
    },
    "waf-regional:DeleteRegexPatternSet": {
        "body": "waf-regional:DeleteRegexPatternSet",
        "description": "Add 'waf-regional:DeleteRegexPatternSet' action",
        "prefix": "waf-regional:DeleteRegexPatternSet"
    },
    "waf-regional:DeleteRule": {
        "body": "waf-regional:DeleteRule",
        "description": "Add 'waf-regional:DeleteRule' action",
        "prefix": "waf-regional:DeleteRule"
    },
    "waf-regional:DeleteSizeConstraintSet": {
        "body": "waf-regional:DeleteSizeConstraintSet",
        "description": "Add 'waf-regional:DeleteSizeConstraintSet' action",
        "prefix": "waf-regional:DeleteSizeConstraintSet"
    },
    "waf-regional:DeleteSqlInjectionMatchSet": {
        "body": "waf-regional:DeleteSqlInjectionMatchSet",
        "description": "Add 'waf-regional:DeleteSqlInjectionMatchSet' action",
        "prefix": "waf-regional:DeleteSqlInjectionMatchSet"
    },
    "waf-regional:DeleteWebACL": {
        "body": "waf-regional:DeleteWebACL",
        "description": "Add 'waf-regional:DeleteWebACL' action",
        "prefix": "waf-regional:DeleteWebACL"
    },
    "waf-regional:DeleteXssMatchSet": {
        "body": "waf-regional:DeleteXssMatchSet",
        "description": "Add 'waf-regional:DeleteXssMatchSet' action",
        "prefix": "waf-regional:DeleteXssMatchSet"
    },
    "waf-regional:DisassociateWebACL": {
        "body": "waf-regional:DisassociateWebACL",
        "description": "Add 'waf-regional:DisassociateWebACL' action",
        "prefix": "waf-regional:DisassociateWebACL"
    },
    "waf-regional:GetByteMatchSet": {
        "body": "waf-regional:GetByteMatchSet",
        "description": "Add 'waf-regional:GetByteMatchSet' action",
        "prefix": "waf-regional:GetByteMatchSet"
    },
    "waf-regional:GetChangeToken": {
        "body": "waf-regional:GetChangeToken",
        "description": "Add 'waf-regional:GetChangeToken' action",
        "prefix": "waf-regional:GetChangeToken"
    },
    "waf-regional:GetChangeTokenStatus": {
        "body": "waf-regional:GetChangeTokenStatus",
        "description": "Add 'waf-regional:GetChangeTokenStatus' action",
        "prefix": "waf-regional:GetChangeTokenStatus"
    },
    "waf-regional:GetGeoMatchSet": {
        "body": "waf-regional:GetGeoMatchSet",
        "description": "Add 'waf-regional:GetGeoMatchSet' action",
        "prefix": "waf-regional:GetGeoMatchSet"
    },
    "waf-regional:GetIPSet": {
        "body": "waf-regional:GetIPSet",
        "description": "Add 'waf-regional:GetIPSet' action",
        "prefix": "waf-regional:GetIPSet"
    },
    "waf-regional:GetRateBasedRule": {
        "body": "waf-regional:GetRateBasedRule",
        "description": "Add 'waf-regional:GetRateBasedRule' action",
        "prefix": "waf-regional:GetRateBasedRule"
    },
    "waf-regional:GetRateBasedRuleManagedKeys": {
        "body": "waf-regional:GetRateBasedRuleManagedKeys",
        "description": "Add 'waf-regional:GetRateBasedRuleManagedKeys' action",
        "prefix": "waf-regional:GetRateBasedRuleManagedKeys"
    },
    "waf-regional:GetRegexMatchSet": {
        "body": "waf-regional:GetRegexMatchSet",
        "description": "Add 'waf-regional:GetRegexMatchSet' action",
        "prefix": "waf-regional:GetRegexMatchSet"
    },
    "waf-regional:GetRegexPatternSet": {
        "body": "waf-regional:GetRegexPatternSet",
        "description": "Add 'waf-regional:GetRegexPatternSet' action",
        "prefix": "waf-regional:GetRegexPatternSet"
    },
    "waf-regional:GetRule": {
        "body": "waf-regional:GetRule",
        "description": "Add 'waf-regional:GetRule' action",
        "prefix": "waf-regional:GetRule"
    },
    "waf-regional:GetSampledRequests": {
        "body": "waf-regional:GetSampledRequests",
        "description": "Add 'waf-regional:GetSampledRequests' action",
        "prefix": "waf-regional:GetSampledRequests"
    },
    "waf-regional:GetSizeConstraintSet": {
        "body": "waf-regional:GetSizeConstraintSet",
        "description": "Add 'waf-regional:GetSizeConstraintSet' action",
        "prefix": "waf-regional:GetSizeConstraintSet"
    },
    "waf-regional:GetSqlInjectionMatchSet": {
        "body": "waf-regional:GetSqlInjectionMatchSet",
        "description": "Add 'waf-regional:GetSqlInjectionMatchSet' action",
        "prefix": "waf-regional:GetSqlInjectionMatchSet"
    },
    "waf-regional:GetWebACL": {
        "body": "waf-regional:GetWebACL",
        "description": "Add 'waf-regional:GetWebACL' action",
        "prefix": "waf-regional:GetWebACL"
    },
    "waf-regional:GetWebACLForResource": {
        "body": "waf-regional:GetWebACLForResource",
        "description": "Add 'waf-regional:GetWebACLForResource' action",
        "prefix": "waf-regional:GetWebACLForResource"
    },
    "waf-regional:GetXssMatchSet": {
        "body": "waf-regional:GetXssMatchSet",
        "description": "Add 'waf-regional:GetXssMatchSet' action",
        "prefix": "waf-regional:GetXssMatchSet"
    },
    "waf-regional:ListByteMatchSets": {
        "body": "waf-regional:ListByteMatchSets",
        "description": "Add 'waf-regional:ListByteMatchSets' action",
        "prefix": "waf-regional:ListByteMatchSets"
    },
    "waf-regional:ListGeoMatchSets": {
        "body": "waf-regional:ListGeoMatchSets",
        "description": "Add 'waf-regional:ListGeoMatchSets' action",
        "prefix": "waf-regional:ListGeoMatchSets"
    },
    "waf-regional:ListIPSets": {
        "body": "waf-regional:ListIPSets",
        "description": "Add 'waf-regional:ListIPSets' action",
        "prefix": "waf-regional:ListIPSets"
    },
    "waf-regional:ListRateBasedRules": {
        "body": "waf-regional:ListRateBasedRules",
        "description": "Add 'waf-regional:ListRateBasedRules' action",
        "prefix": "waf-regional:ListRateBasedRules"
    },
    "waf-regional:ListRegexMatchSets": {
        "body": "waf-regional:ListRegexMatchSets",
        "description": "Add 'waf-regional:ListRegexMatchSets' action",
        "prefix": "waf-regional:ListRegexMatchSets"
    },
    "waf-regional:ListRegexPatternSets": {
        "body": "waf-regional:ListRegexPatternSets",
        "description": "Add 'waf-regional:ListRegexPatternSets' action",
        "prefix": "waf-regional:ListRegexPatternSets"
    },
    "waf-regional:ListResourcesForWebACL": {
        "body": "waf-regional:ListResourcesForWebACL",
        "description": "Add 'waf-regional:ListResourcesForWebACL' action",
        "prefix": "waf-regional:ListResourcesForWebACL"
    },
    "waf-regional:ListRules": {
        "body": "waf-regional:ListRules",
        "description": "Add 'waf-regional:ListRules' action",
        "prefix": "waf-regional:ListRules"
    },
    "waf-regional:ListSizeConstraintSets": {
        "body": "waf-regional:ListSizeConstraintSets",
        "description": "Add 'waf-regional:ListSizeConstraintSets' action",
        "prefix": "waf-regional:ListSizeConstraintSets"
    },
    "waf-regional:ListSqlInjectionMatchSets": {
        "body": "waf-regional:ListSqlInjectionMatchSets",
        "description": "Add 'waf-regional:ListSqlInjectionMatchSets' action",
        "prefix": "waf-regional:ListSqlInjectionMatchSets"
    },
    "waf-regional:ListWebACLs": {
        "body": "waf-regional:ListWebACLs",
        "description": "Add 'waf-regional:ListWebACLs' action",
        "prefix": "waf-regional:ListWebACLs"
    },
    "waf-regional:ListXssMatchSets": {
        "body": "waf-regional:ListXssMatchSets",
        "description": "Add 'waf-regional:ListXssMatchSets' action",
        "prefix": "waf-regional:ListXssMatchSets"
    },
    "waf-regional:UpdateByteMatchSet": {
        "body": "waf-regional:UpdateByteMatchSet",
        "description": "Add 'waf-regional:UpdateByteMatchSet' action",
        "prefix": "waf-regional:UpdateByteMatchSet"
    },
    "waf-regional:UpdateGeoMatchSet": {
        "body": "waf-regional:UpdateGeoMatchSet",
        "description": "Add 'waf-regional:UpdateGeoMatchSet' action",
        "prefix": "waf-regional:UpdateGeoMatchSet"
    },
    "waf-regional:UpdateIPSet": {
        "body": "waf-regional:UpdateIPSet",
        "description": "Add 'waf-regional:UpdateIPSet' action",
        "prefix": "waf-regional:UpdateIPSet"
    },
    "waf-regional:UpdateRateBasedRule": {
        "body": "waf-regional:UpdateRateBasedRule",
        "description": "Add 'waf-regional:UpdateRateBasedRule' action",
        "prefix": "waf-regional:UpdateRateBasedRule"
    },
    "waf-regional:UpdateRegexMatchSet": {
        "body": "waf-regional:UpdateRegexMatchSet",
        "description": "Add 'waf-regional:UpdateRegexMatchSet' action",
        "prefix": "waf-regional:UpdateRegexMatchSet"
    },
    "waf-regional:UpdateRegexPatternSet": {
        "body": "waf-regional:UpdateRegexPatternSet",
        "description": "Add 'waf-regional:UpdateRegexPatternSet' action",
        "prefix": "waf-regional:UpdateRegexPatternSet"
    },
    "waf-regional:UpdateRule": {
        "body": "waf-regional:UpdateRule",
        "description": "Add 'waf-regional:UpdateRule' action",
        "prefix": "waf-regional:UpdateRule"
    },
    "waf-regional:UpdateSizeConstraintSet": {
        "body": "waf-regional:UpdateSizeConstraintSet",
        "description": "Add 'waf-regional:UpdateSizeConstraintSet' action",
        "prefix": "waf-regional:UpdateSizeConstraintSet"
    },
    "waf-regional:UpdateSqlInjectionMatchSet": {
        "body": "waf-regional:UpdateSqlInjectionMatchSet",
        "description": "Add 'waf-regional:UpdateSqlInjectionMatchSet' action",
        "prefix": "waf-regional:UpdateSqlInjectionMatchSet"
    },
    "waf-regional:UpdateWebACL": {
        "body": "waf-regional:UpdateWebACL",
        "description": "Add 'waf-regional:UpdateWebACL' action",
        "prefix": "waf-regional:UpdateWebACL"
    },
    "waf-regional:UpdateXssMatchSet": {
        "body": "waf-regional:UpdateXssMatchSet",
        "description": "Add 'waf-regional:UpdateXssMatchSet' action",
        "prefix": "waf-regional:UpdateXssMatchSet"
    },
    "waf:CreateByteMatchSet": {
        "body": "waf:CreateByteMatchSet",
        "description": "Add 'waf:CreateByteMatchSet' action",
        "prefix": "waf:CreateByteMatchSet"
    },
    "waf:CreateGeoMatchSet": {
        "body": "waf:CreateGeoMatchSet",
        "description": "Add 'waf:CreateGeoMatchSet' action",
        "prefix": "waf:CreateGeoMatchSet"
    },
    "waf:CreateIPSet": {
        "body": "waf:CreateIPSet",
        "description": "Add 'waf:CreateIPSet' action",
        "prefix": "waf:CreateIPSet"
    },
    "waf:CreateRateBasedRule": {
        "body": "waf:CreateRateBasedRule",
        "description": "Add 'waf:CreateRateBasedRule' action",
        "prefix": "waf:CreateRateBasedRule"
    },
    "waf:CreateRegexMatchSet": {
        "body": "waf:CreateRegexMatchSet",
        "description": "Add 'waf:CreateRegexMatchSet' action",
        "prefix": "waf:CreateRegexMatchSet"
    },
    "waf:CreateRegexPatternSet": {
        "body": "waf:CreateRegexPatternSet",
        "description": "Add 'waf:CreateRegexPatternSet' action",
        "prefix": "waf:CreateRegexPatternSet"
    },
    "waf:CreateRule": {
        "body": "waf:CreateRule",
        "description": "Add 'waf:CreateRule' action",
        "prefix": "waf:CreateRule"
    },
    "waf:CreateSizeConstraintSet": {
        "body": "waf:CreateSizeConstraintSet",
        "description": "Add 'waf:CreateSizeConstraintSet' action",
        "prefix": "waf:CreateSizeConstraintSet"
    },
    "waf:CreateSqlInjectionMatchSet": {
        "body": "waf:CreateSqlInjectionMatchSet",
        "description": "Add 'waf:CreateSqlInjectionMatchSet' action",
        "prefix": "waf:CreateSqlInjectionMatchSet"
    },
    "waf:CreateWebACL": {
        "body": "waf:CreateWebACL",
        "description": "Add 'waf:CreateWebACL' action",
        "prefix": "waf:CreateWebACL"
    },
    "waf:CreateXssMatchSet": {
        "body": "waf:CreateXssMatchSet",
        "description": "Add 'waf:CreateXssMatchSet' action",
        "prefix": "waf:CreateXssMatchSet"
    },
    "waf:DeleteByteMatchSet": {
        "body": "waf:DeleteByteMatchSet",
        "description": "Add 'waf:DeleteByteMatchSet' action",
        "prefix": "waf:DeleteByteMatchSet"
    },
    "waf:DeleteGeoMatchSet": {
        "body": "waf:DeleteGeoMatchSet",
        "description": "Add 'waf:DeleteGeoMatchSet' action",
        "prefix": "waf:DeleteGeoMatchSet"
    },
    "waf:DeleteIPSet": {
        "body": "waf:DeleteIPSet",
        "description": "Add 'waf:DeleteIPSet' action",
        "prefix": "waf:DeleteIPSet"
    },
    "waf:DeleteRateBasedRule": {
        "body": "waf:DeleteRateBasedRule",
        "description": "Add 'waf:DeleteRateBasedRule' action",
        "prefix": "waf:DeleteRateBasedRule"
    },
    "waf:DeleteRegexMatchSet": {
        "body": "waf:DeleteRegexMatchSet",
        "description": "Add 'waf:DeleteRegexMatchSet' action",
        "prefix": "waf:DeleteRegexMatchSet"
    },
    "waf:DeleteRegexPatternSet": {
        "body": "waf:DeleteRegexPatternSet",
        "description": "Add 'waf:DeleteRegexPatternSet' action",
        "prefix": "waf:DeleteRegexPatternSet"
    },
    "waf:DeleteRule": {
        "body": "waf:DeleteRule",
        "description": "Add 'waf:DeleteRule' action",
        "prefix": "waf:DeleteRule"
    },
    "waf:DeleteSizeConstraintSet": {
        "body": "waf:DeleteSizeConstraintSet",
        "description": "Add 'waf:DeleteSizeConstraintSet' action",
        "prefix": "waf:DeleteSizeConstraintSet"
    },
    "waf:DeleteSqlInjectionMatchSet": {
        "body": "waf:DeleteSqlInjectionMatchSet",
        "description": "Add 'waf:DeleteSqlInjectionMatchSet' action",
        "prefix": "waf:DeleteSqlInjectionMatchSet"
    },
    "waf:DeleteWebACL": {
        "body": "waf:DeleteWebACL",
        "description": "Add 'waf:DeleteWebACL' action",
        "prefix": "waf:DeleteWebACL"
    },
    "waf:DeleteXssMatchSet": {
        "body": "waf:DeleteXssMatchSet",
        "description": "Add 'waf:DeleteXssMatchSet' action",
        "prefix": "waf:DeleteXssMatchSet"
    },
    "waf:GetByteMatchSet": {
        "body": "waf:GetByteMatchSet",
        "description": "Add 'waf:GetByteMatchSet' action",
        "prefix": "waf:GetByteMatchSet"
    },
    "waf:GetChangeToken": {
        "body": "waf:GetChangeToken",
        "description": "Add 'waf:GetChangeToken' action",
        "prefix": "waf:GetChangeToken"
    },
    "waf:GetChangeTokenStatus": {
        "body": "waf:GetChangeTokenStatus",
        "description": "Add 'waf:GetChangeTokenStatus' action",
        "prefix": "waf:GetChangeTokenStatus"
    },
    "waf:GetGeoMatchSet": {
        "body": "waf:GetGeoMatchSet",
        "description": "Add 'waf:GetGeoMatchSet' action",
        "prefix": "waf:GetGeoMatchSet"
    },
    "waf:GetIPSet": {
        "body": "waf:GetIPSet",
        "description": "Add 'waf:GetIPSet' action",
        "prefix": "waf:GetIPSet"
    },
    "waf:GetRateBasedRule": {
        "body": "waf:GetRateBasedRule",
        "description": "Add 'waf:GetRateBasedRule' action",
        "prefix": "waf:GetRateBasedRule"
    },
    "waf:GetRateBasedRuleManagedKeys": {
        "body": "waf:GetRateBasedRuleManagedKeys",
        "description": "Add 'waf:GetRateBasedRuleManagedKeys' action",
        "prefix": "waf:GetRateBasedRuleManagedKeys"
    },
    "waf:GetRegexMatchSet": {
        "body": "waf:GetRegexMatchSet",
        "description": "Add 'waf:GetRegexMatchSet' action",
        "prefix": "waf:GetRegexMatchSet"
    },
    "waf:GetRegexPatternSet": {
        "body": "waf:GetRegexPatternSet",
        "description": "Add 'waf:GetRegexPatternSet' action",
        "prefix": "waf:GetRegexPatternSet"
    },
    "waf:GetRule": {
        "body": "waf:GetRule",
        "description": "Add 'waf:GetRule' action",
        "prefix": "waf:GetRule"
    },
    "waf:GetSampledRequests": {
        "body": "waf:GetSampledRequests",
        "description": "Add 'waf:GetSampledRequests' action",
        "prefix": "waf:GetSampledRequests"
    },
    "waf:GetSizeConstraintSet": {
        "body": "waf:GetSizeConstraintSet",
        "description": "Add 'waf:GetSizeConstraintSet' action",
        "prefix": "waf:GetSizeConstraintSet"
    },
    "waf:GetSqlInjectionMatchSet": {
        "body": "waf:GetSqlInjectionMatchSet",
        "description": "Add 'waf:GetSqlInjectionMatchSet' action",
        "prefix": "waf:GetSqlInjectionMatchSet"
    },
    "waf:GetWebACL": {
        "body": "waf:GetWebACL",
        "description": "Add 'waf:GetWebACL' action",
        "prefix": "waf:GetWebACL"
    },
    "waf:GetXssMatchSet": {
        "body": "waf:GetXssMatchSet",
        "description": "Add 'waf:GetXssMatchSet' action",
        "prefix": "waf:GetXssMatchSet"
    },
    "waf:ListByteMatchSets": {
        "body": "waf:ListByteMatchSets",
        "description": "Add 'waf:ListByteMatchSets' action",
        "prefix": "waf:ListByteMatchSets"
    },
    "waf:ListGeoMatchSets": {
        "body": "waf:ListGeoMatchSets",
        "description": "Add 'waf:ListGeoMatchSets' action",
        "prefix": "waf:ListGeoMatchSets"
    },
    "waf:ListIPSets": {
        "body": "waf:ListIPSets",
        "description": "Add 'waf:ListIPSets' action",
        "prefix": "waf:ListIPSets"
    },
    "waf:ListRateBasedRules": {
        "body": "waf:ListRateBasedRules",
        "description": "Add 'waf:ListRateBasedRules' action",
        "prefix": "waf:ListRateBasedRules"
    },
    "waf:ListRegexMatchSets": {
        "body": "waf:ListRegexMatchSets",
        "description": "Add 'waf:ListRegexMatchSets' action",
        "prefix": "waf:ListRegexMatchSets"
    },
    "waf:ListRegexPatternSets": {
        "body": "waf:ListRegexPatternSets",
        "description": "Add 'waf:ListRegexPatternSets' action",
        "prefix": "waf:ListRegexPatternSets"
    },
    "waf:ListRules": {
        "body": "waf:ListRules",
        "description": "Add 'waf:ListRules' action",
        "prefix": "waf:ListRules"
    },
    "waf:ListSizeConstraintSets": {
        "body": "waf:ListSizeConstraintSets",
        "description": "Add 'waf:ListSizeConstraintSets' action",
        "prefix": "waf:ListSizeConstraintSets"
    },
    "waf:ListSqlInjectionMatchSets": {
        "body": "waf:ListSqlInjectionMatchSets",
        "description": "Add 'waf:ListSqlInjectionMatchSets' action",
        "prefix": "waf:ListSqlInjectionMatchSets"
    },
    "waf:ListWebACLs": {
        "body": "waf:ListWebACLs",
        "description": "Add 'waf:ListWebACLs' action",
        "prefix": "waf:ListWebACLs"
    },
    "waf:ListXssMatchSets": {
        "body": "waf:ListXssMatchSets",
        "description": "Add 'waf:ListXssMatchSets' action",
        "prefix": "waf:ListXssMatchSets"
    },
    "waf:UpdateByteMatchSet": {
        "body": "waf:UpdateByteMatchSet",
        "description": "Add 'waf:UpdateByteMatchSet' action",
        "prefix": "waf:UpdateByteMatchSet"
    },
    "waf:UpdateGeoMatchSet": {
        "body": "waf:UpdateGeoMatchSet",
        "description": "Add 'waf:UpdateGeoMatchSet' action",
        "prefix": "waf:UpdateGeoMatchSet"
    },
    "waf:UpdateIPSet": {
        "body": "waf:UpdateIPSet",
        "description": "Add 'waf:UpdateIPSet' action",
        "prefix": "waf:UpdateIPSet"
    },
    "waf:UpdateRateBasedRule": {
        "body": "waf:UpdateRateBasedRule",
        "description": "Add 'waf:UpdateRateBasedRule' action",
        "prefix": "waf:UpdateRateBasedRule"
    },
    "waf:UpdateRegexMatchSet": {
        "body": "waf:UpdateRegexMatchSet",
        "description": "Add 'waf:UpdateRegexMatchSet' action",
        "prefix": "waf:UpdateRegexMatchSet"
    },
    "waf:UpdateRegexPatternSet": {
        "body": "waf:UpdateRegexPatternSet",
        "description": "Add 'waf:UpdateRegexPatternSet' action",
        "prefix": "waf:UpdateRegexPatternSet"
    },
    "waf:UpdateRule": {
        "body": "waf:UpdateRule",
        "description": "Add 'waf:UpdateRule' action",
        "prefix": "waf:UpdateRule"
    },
    "waf:UpdateSizeConstraintSet": {
        "body": "waf:UpdateSizeConstraintSet",
        "description": "Add 'waf:UpdateSizeConstraintSet' action",
        "prefix": "waf:UpdateSizeConstraintSet"
    },
    "waf:UpdateSqlInjectionMatchSet": {
        "body": "waf:UpdateSqlInjectionMatchSet",
        "description": "Add 'waf:UpdateSqlInjectionMatchSet' action",
        "prefix": "waf:UpdateSqlInjectionMatchSet"
    },
    "waf:UpdateWebACL": {
        "body": "waf:UpdateWebACL",
        "description": "Add 'waf:UpdateWebACL' action",
        "prefix": "waf:UpdateWebACL"
    },
    "waf:UpdateXssMatchSet": {
        "body": "waf:UpdateXssMatchSet",
        "description": "Add 'waf:UpdateXssMatchSet' action",
        "prefix": "waf:UpdateXssMatchSet"
    },
    "wam:AuthenticatePackager": {
        "body": "wam:AuthenticatePackager",
        "description": "Add 'wam:AuthenticatePackager' action",
        "prefix": "wam:AuthenticatePackager"
    },
    "workdocs:AbortDocumentVersionUpload": {
        "body": "workdocs:AbortDocumentVersionUpload",
        "description": "Add 'workdocs:AbortDocumentVersionUpload' action",
        "prefix": "workdocs:AbortDocumentVersionUpload"
    },
    "workdocs:ActivateUser": {
        "body": "workdocs:ActivateUser",
        "description": "Add 'workdocs:ActivateUser' action",
        "prefix": "workdocs:ActivateUser"
    },
    "workdocs:AddResourcePermissions": {
        "body": "workdocs:AddResourcePermissions",
        "description": "Add 'workdocs:AddResourcePermissions' action",
        "prefix": "workdocs:AddResourcePermissions"
    },
    "workdocs:AddUserToGroup": {
        "body": "workdocs:AddUserToGroup",
        "description": "Add 'workdocs:AddUserToGroup' action",
        "prefix": "workdocs:AddUserToGroup"
    },
    "workdocs:CheckAlias": {
        "body": "workdocs:CheckAlias",
        "description": "Add 'workdocs:CheckAlias' action",
        "prefix": "workdocs:CheckAlias"
    },
    "workdocs:CreateFolder": {
        "body": "workdocs:CreateFolder",
        "description": "Add 'workdocs:CreateFolder' action",
        "prefix": "workdocs:CreateFolder"
    },
    "workdocs:CreateInstance": {
        "body": "workdocs:CreateInstance",
        "description": "Add 'workdocs:CreateInstance' action",
        "prefix": "workdocs:CreateInstance"
    },
    "workdocs:CreateNotificationSubscription": {
        "body": "workdocs:CreateNotificationSubscription",
        "description": "Add 'workdocs:CreateNotificationSubscription' action",
        "prefix": "workdocs:CreateNotificationSubscription"
    },
    "workdocs:CreateUser": {
        "body": "workdocs:CreateUser",
        "description": "Add 'workdocs:CreateUser' action",
        "prefix": "workdocs:CreateUser"
    },
    "workdocs:DeactivateUser": {
        "body": "workdocs:DeactivateUser",
        "description": "Add 'workdocs:DeactivateUser' action",
        "prefix": "workdocs:DeactivateUser"
    },
    "workdocs:DeleteDocument": {
        "body": "workdocs:DeleteDocument",
        "description": "Add 'workdocs:DeleteDocument' action",
        "prefix": "workdocs:DeleteDocument"
    },
    "workdocs:DeleteFolder": {
        "body": "workdocs:DeleteFolder",
        "description": "Add 'workdocs:DeleteFolder' action",
        "prefix": "workdocs:DeleteFolder"
    },
    "workdocs:DeleteFolderContents": {
        "body": "workdocs:DeleteFolderContents",
        "description": "Add 'workdocs:DeleteFolderContents' action",
        "prefix": "workdocs:DeleteFolderContents"
    },
    "workdocs:DeleteInstance": {
        "body": "workdocs:DeleteInstance",
        "description": "Add 'workdocs:DeleteInstance' action",
        "prefix": "workdocs:DeleteInstance"
    },
    "workdocs:DeleteNotificationSubscription": {
        "body": "workdocs:DeleteNotificationSubscription",
        "description": "Add 'workdocs:DeleteNotificationSubscription' action",
        "prefix": "workdocs:DeleteNotificationSubscription"
    },
    "workdocs:DeleteUser": {
        "body": "workdocs:DeleteUser",
        "description": "Add 'workdocs:DeleteUser' action",
        "prefix": "workdocs:DeleteUser"
    },
    "workdocs:DeregisterDirectory": {
        "body": "workdocs:DeregisterDirectory",
        "description": "Add 'workdocs:DeregisterDirectory' action",
        "prefix": "workdocs:DeregisterDirectory"
    },
    "workdocs:DescribeAvailableDirectories": {
        "body": "workdocs:DescribeAvailableDirectories",
        "description": "Add 'workdocs:DescribeAvailableDirectories' action",
        "prefix": "workdocs:DescribeAvailableDirectories"
    },
    "workdocs:DescribeDocumentVersions": {
        "body": "workdocs:DescribeDocumentVersions",
        "description": "Add 'workdocs:DescribeDocumentVersions' action",
        "prefix": "workdocs:DescribeDocumentVersions"
    },
    "workdocs:DescribeFolderContents": {
        "body": "workdocs:DescribeFolderContents",
        "description": "Add 'workdocs:DescribeFolderContents' action",
        "prefix": "workdocs:DescribeFolderContents"
    },
    "workdocs:DescribeInstances": {
        "body": "workdocs:DescribeInstances",
        "description": "Add 'workdocs:DescribeInstances' action",
        "prefix": "workdocs:DescribeInstances"
    },
    "workdocs:DescribeNotificationSubscriptions": {
        "body": "workdocs:DescribeNotificationSubscriptions",
        "description": "Add 'workdocs:DescribeNotificationSubscriptions' action",
        "prefix": "workdocs:DescribeNotificationSubscriptions"
    },
    "workdocs:DescribeResourcePermissions": {
        "body": "workdocs:DescribeResourcePermissions",
        "description": "Add 'workdocs:DescribeResourcePermissions' action",
        "prefix": "workdocs:DescribeResourcePermissions"
    },
    "workdocs:DescribeUsers": {
        "body": "workdocs:DescribeUsers",
        "description": "Add 'workdocs:DescribeUsers' action",
        "prefix": "workdocs:DescribeUsers"
    },
    "workdocs:GetDocument": {
        "body": "workdocs:GetDocument",
        "description": "Add 'workdocs:GetDocument' action",
        "prefix": "workdocs:GetDocument"
    },
    "workdocs:GetDocumentPath": {
        "body": "workdocs:GetDocumentPath",
        "description": "Add 'workdocs:GetDocumentPath' action",
        "prefix": "workdocs:GetDocumentPath"
    },
    "workdocs:GetDocumentVersion": {
        "body": "workdocs:GetDocumentVersion",
        "description": "Add 'workdocs:GetDocumentVersion' action",
        "prefix": "workdocs:GetDocumentVersion"
    },
    "workdocs:GetFolder": {
        "body": "workdocs:GetFolder",
        "description": "Add 'workdocs:GetFolder' action",
        "prefix": "workdocs:GetFolder"
    },
    "workdocs:GetFolderPath": {
        "body": "workdocs:GetFolderPath",
        "description": "Add 'workdocs:GetFolderPath' action",
        "prefix": "workdocs:GetFolderPath"
    },
    "workdocs:InitiateDocumentVersionUpload": {
        "body": "workdocs:InitiateDocumentVersionUpload",
        "description": "Add 'workdocs:InitiateDocumentVersionUpload' action",
        "prefix": "workdocs:InitiateDocumentVersionUpload"
    },
    "workdocs:RegisterDirectory": {
        "body": "workdocs:RegisterDirectory",
        "description": "Add 'workdocs:RegisterDirectory' action",
        "prefix": "workdocs:RegisterDirectory"
    },
    "workdocs:RemoveAllResourcePermissions": {
        "body": "workdocs:RemoveAllResourcePermissions",
        "description": "Add 'workdocs:RemoveAllResourcePermissions' action",
        "prefix": "workdocs:RemoveAllResourcePermissions"
    },
    "workdocs:RemoveResourcePermission": {
        "body": "workdocs:RemoveResourcePermission",
        "description": "Add 'workdocs:RemoveResourcePermission' action",
        "prefix": "workdocs:RemoveResourcePermission"
    },
    "workdocs:RemoveUserFromGroup": {
        "body": "workdocs:RemoveUserFromGroup",
        "description": "Add 'workdocs:RemoveUserFromGroup' action",
        "prefix": "workdocs:RemoveUserFromGroup"
    },
    "workdocs:UpdateDocument": {
        "body": "workdocs:UpdateDocument",
        "description": "Add 'workdocs:UpdateDocument' action",
        "prefix": "workdocs:UpdateDocument"
    },
    "workdocs:UpdateDocumentVersion": {
        "body": "workdocs:UpdateDocumentVersion",
        "description": "Add 'workdocs:UpdateDocumentVersion' action",
        "prefix": "workdocs:UpdateDocumentVersion"
    },
    "workdocs:UpdateFolder": {
        "body": "workdocs:UpdateFolder",
        "description": "Add 'workdocs:UpdateFolder' action",
        "prefix": "workdocs:UpdateFolder"
    },
    "workdocs:UpdateInstanceAlias": {
        "body": "workdocs:UpdateInstanceAlias",
        "description": "Add 'workdocs:UpdateInstanceAlias' action",
        "prefix": "workdocs:UpdateInstanceAlias"
    },
    "workdocs:UpdateUser": {
        "body": "workdocs:UpdateUser",
        "description": "Add 'workdocs:UpdateUser' action",
        "prefix": "workdocs:UpdateUser"
    },
    "workmail:AddMembersToGroup": {
        "body": "workmail:AddMembersToGroup",
        "description": "Add 'workmail:AddMembersToGroup' action",
        "prefix": "workmail:AddMembersToGroup"
    },
    "workmail:CreateGroup": {
        "body": "workmail:CreateGroup",
        "description": "Add 'workmail:CreateGroup' action",
        "prefix": "workmail:CreateGroup"
    },
    "workmail:CreateMailDomain": {
        "body": "workmail:CreateMailDomain",
        "description": "Add 'workmail:CreateMailDomain' action",
        "prefix": "workmail:CreateMailDomain"
    },
    "workmail:CreateMailUser": {
        "body": "workmail:CreateMailUser",
        "description": "Add 'workmail:CreateMailUser' action",
        "prefix": "workmail:CreateMailUser"
    },
    "workmail:CreateOrganization": {
        "body": "workmail:CreateOrganization",
        "description": "Add 'workmail:CreateOrganization' action",
        "prefix": "workmail:CreateOrganization"
    },
    "workmail:CreateResource": {
        "body": "workmail:CreateResource",
        "description": "Add 'workmail:CreateResource' action",
        "prefix": "workmail:CreateResource"
    },
    "workmail:DeleteMailDomain": {
        "body": "workmail:DeleteMailDomain",
        "description": "Add 'workmail:DeleteMailDomain' action",
        "prefix": "workmail:DeleteMailDomain"
    },
    "workmail:DeleteMobileDevice": {
        "body": "workmail:DeleteMobileDevice",
        "description": "Add 'workmail:DeleteMobileDevice' action",
        "prefix": "workmail:DeleteMobileDevice"
    },
    "workmail:DeleteOrganization": {
        "body": "workmail:DeleteOrganization",
        "description": "Add 'workmail:DeleteOrganization' action",
        "prefix": "workmail:DeleteOrganization"
    },
    "workmail:DescribeDirectories": {
        "body": "workmail:DescribeDirectories",
        "description": "Add 'workmail:DescribeDirectories' action",
        "prefix": "workmail:DescribeDirectories"
    },
    "workmail:DescribeKmsKeys": {
        "body": "workmail:DescribeKmsKeys",
        "description": "Add 'workmail:DescribeKmsKeys' action",
        "prefix": "workmail:DescribeKmsKeys"
    },
    "workmail:DescribeMailDomains": {
        "body": "workmail:DescribeMailDomains",
        "description": "Add 'workmail:DescribeMailDomains' action",
        "prefix": "workmail:DescribeMailDomains"
    },
    "workmail:DescribeMailGroups": {
        "body": "workmail:DescribeMailGroups",
        "description": "Add 'workmail:DescribeMailGroups' action",
        "prefix": "workmail:DescribeMailGroups"
    },
    "workmail:DescribeMailUsers": {
        "body": "workmail:DescribeMailUsers",
        "description": "Add 'workmail:DescribeMailUsers' action",
        "prefix": "workmail:DescribeMailUsers"
    },
    "workmail:DescribeOrganizations": {
        "body": "workmail:DescribeOrganizations",
        "description": "Add 'workmail:DescribeOrganizations' action",
        "prefix": "workmail:DescribeOrganizations"
    },
    "workmail:DisableMailGroups": {
        "body": "workmail:DisableMailGroups",
        "description": "Add 'workmail:DisableMailGroups' action",
        "prefix": "workmail:DisableMailGroups"
    },
    "workmail:DisableMailUsers": {
        "body": "workmail:DisableMailUsers",
        "description": "Add 'workmail:DisableMailUsers' action",
        "prefix": "workmail:DisableMailUsers"
    },
    "workmail:EnableMailDomain": {
        "body": "workmail:EnableMailDomain",
        "description": "Add 'workmail:EnableMailDomain' action",
        "prefix": "workmail:EnableMailDomain"
    },
    "workmail:EnableMailGroups": {
        "body": "workmail:EnableMailGroups",
        "description": "Add 'workmail:EnableMailGroups' action",
        "prefix": "workmail:EnableMailGroups"
    },
    "workmail:EnableMailUsers": {
        "body": "workmail:EnableMailUsers",
        "description": "Add 'workmail:EnableMailUsers' action",
        "prefix": "workmail:EnableMailUsers"
    },
    "workmail:GetMailDomainDetails": {
        "body": "workmail:GetMailDomainDetails",
        "description": "Add 'workmail:GetMailDomainDetails' action",
        "prefix": "workmail:GetMailDomainDetails"
    },
    "workmail:GetMailGroupDetails": {
        "body": "workmail:GetMailGroupDetails",
        "description": "Add 'workmail:GetMailGroupDetails' action",
        "prefix": "workmail:GetMailGroupDetails"
    },
    "workmail:GetMailUserDetails": {
        "body": "workmail:GetMailUserDetails",
        "description": "Add 'workmail:GetMailUserDetails' action",
        "prefix": "workmail:GetMailUserDetails"
    },
    "workmail:GetMobileDeviceDetails": {
        "body": "workmail:GetMobileDeviceDetails",
        "description": "Add 'workmail:GetMobileDeviceDetails' action",
        "prefix": "workmail:GetMobileDeviceDetails"
    },
    "workmail:GetMobileDevicesForUser": {
        "body": "workmail:GetMobileDevicesForUser",
        "description": "Add 'workmail:GetMobileDevicesForUser' action",
        "prefix": "workmail:GetMobileDevicesForUser"
    },
    "workmail:GetMobilePolicyDetails": {
        "body": "workmail:GetMobilePolicyDetails",
        "description": "Add 'workmail:GetMobilePolicyDetails' action",
        "prefix": "workmail:GetMobilePolicyDetails"
    },
    "workmail:ListMembersInMailGroup": {
        "body": "workmail:ListMembersInMailGroup",
        "description": "Add 'workmail:ListMembersInMailGroup' action",
        "prefix": "workmail:ListMembersInMailGroup"
    },
    "workmail:RemoveMembersFromGroup": {
        "body": "workmail:RemoveMembersFromGroup",
        "description": "Add 'workmail:RemoveMembersFromGroup' action",
        "prefix": "workmail:RemoveMembersFromGroup"
    },
    "workmail:ResetUserPassword": {
        "body": "workmail:ResetUserPassword",
        "description": "Add 'workmail:ResetUserPassword' action",
        "prefix": "workmail:ResetUserPassword"
    },
    "workmail:SearchMembers": {
        "body": "workmail:SearchMembers",
        "description": "Add 'workmail:SearchMembers' action",
        "prefix": "workmail:SearchMembers"
    },
    "workmail:SetAdmin": {
        "body": "workmail:SetAdmin",
        "description": "Add 'workmail:SetAdmin' action",
        "prefix": "workmail:SetAdmin"
    },
    "workmail:SetDefaultMailDomain": {
        "body": "workmail:SetDefaultMailDomain",
        "description": "Add 'workmail:SetDefaultMailDomain' action",
        "prefix": "workmail:SetDefaultMailDomain"
    },
    "workmail:SetMailGroupDetails": {
        "body": "workmail:SetMailGroupDetails",
        "description": "Add 'workmail:SetMailGroupDetails' action",
        "prefix": "workmail:SetMailGroupDetails"
    },
    "workmail:SetMailUserDetails": {
        "body": "workmail:SetMailUserDetails",
        "description": "Add 'workmail:SetMailUserDetails' action",
        "prefix": "workmail:SetMailUserDetails"
    },
    "workmail:SetMobilePolicyDetails": {
        "body": "workmail:SetMobilePolicyDetails",
        "description": "Add 'workmail:SetMobilePolicyDetails' action",
        "prefix": "workmail:SetMobilePolicyDetails"
    },
    "workmail:WipeMobileDevice": {
        "body": "workmail:WipeMobileDevice",
        "description": "Add 'workmail:WipeMobileDevice' action",
        "prefix": "workmail:WipeMobileDevice"
    },
    "workspaces:CreateTags": {
        "body": "workspaces:CreateTags",
        "description": "Add 'workspaces:CreateTags' action",
        "prefix": "workspaces:CreateTags"
    },
    "workspaces:CreateWorkspaces": {
        "body": "workspaces:CreateWorkspaces",
        "description": "Add 'workspaces:CreateWorkspaces' action",
        "prefix": "workspaces:CreateWorkspaces"
    },
    "workspaces:DeleteTags": {
        "body": "workspaces:DeleteTags",
        "description": "Add 'workspaces:DeleteTags' action",
        "prefix": "workspaces:DeleteTags"
    },
    "workspaces:DescribeTags": {
        "body": "workspaces:DescribeTags",
        "description": "Add 'workspaces:DescribeTags' action",
        "prefix": "workspaces:DescribeTags"
    },
    "workspaces:DescribeWorkspaceBundles": {
        "body": "workspaces:DescribeWorkspaceBundles",
        "description": "Add 'workspaces:DescribeWorkspaceBundles' action",
        "prefix": "workspaces:DescribeWorkspaceBundles"
    },
    "workspaces:DescribeWorkspaceDirectories": {
        "body": "workspaces:DescribeWorkspaceDirectories",
        "description": "Add 'workspaces:DescribeWorkspaceDirectories' action",
        "prefix": "workspaces:DescribeWorkspaceDirectories"
    },
    "workspaces:DescribeWorkspaces": {
        "body": "workspaces:DescribeWorkspaces",
        "description": "Add 'workspaces:DescribeWorkspaces' action",
        "prefix": "workspaces:DescribeWorkspaces"
    },
    "workspaces:DescribeWorkspacesConnectionStatus": {
        "body": "workspaces:DescribeWorkspacesConnectionStatus",
        "description": "Add 'workspaces:DescribeWorkspacesConnectionStatus' action",
        "prefix": "workspaces:DescribeWorkspacesConnectionStatus"
    },
    "workspaces:ModifyWorkspaceProperties": {
        "body": "workspaces:ModifyWorkspaceProperties",
        "description": "Add 'workspaces:ModifyWorkspaceProperties' action",
        "prefix": "workspaces:ModifyWorkspaceProperties"
    },
    "workspaces:RebootWorkspaces": {
        "body": "workspaces:RebootWorkspaces",
        "description": "Add 'workspaces:RebootWorkspaces' action",
        "prefix": "workspaces:RebootWorkspaces"
    },
    "workspaces:RebuildWorkspaces": {
        "body": "workspaces:RebuildWorkspaces",
        "description": "Add 'workspaces:RebuildWorkspaces' action",
        "prefix": "workspaces:RebuildWorkspaces"
    },
    "workspaces:StartWorkspaces": {
        "body": "workspaces:StartWorkspaces",
        "description": "Add 'workspaces:StartWorkspaces' action",
        "prefix": "workspaces:StartWorkspaces"
    },
    "workspaces:StopWorkspaces": {
        "body": "workspaces:StopWorkspaces",
        "description": "Add 'workspaces:StopWorkspaces' action",
        "prefix": "workspaces:StopWorkspaces"
    },
    "workspaces:TerminateWorkspaces": {
        "body": "workspaces:TerminateWorkspaces",
        "description": "Add 'workspaces:TerminateWorkspaces' action",
        "prefix": "workspaces:TerminateWorkspaces"
    },
    "xray:BatchGetTraces": {
        "body": "xray:BatchGetTraces",
        "description": "Add 'xray:BatchGetTraces' action",
        "prefix": "xray:BatchGetTraces"
    },
    "xray:GetServiceGraph": {
        "body": "xray:GetServiceGraph",
        "description": "Add 'xray:GetServiceGraph' action",
        "prefix": "xray:GetServiceGraph"
    },
    "xray:GetTraceGraph": {
        "body": "xray:GetTraceGraph",
        "description": "Add 'xray:GetTraceGraph' action",
        "prefix": "xray:GetTraceGraph"
    },
    "xray:GetTraceSummaries": {
        "body": "xray:GetTraceSummaries",
        "description": "Add 'xray:GetTraceSummaries' action",
        "prefix": "xray:GetTraceSummaries"
    },
    "xray:PutTelemetryRecords": {
        "body": "xray:PutTelemetryRecords",
        "description": "Add 'xray:PutTelemetryRecords' action",
        "prefix": "xray:PutTelemetryRecords"
    },
    "xray:PutTraceSegments": {
        "body": "xray:PutTraceSegments",
        "description": "Add 'xray:PutTraceSegments' action",
        "prefix": "xray:PutTraceSegments"
    }
}